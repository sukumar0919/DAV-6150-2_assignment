{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "6761ba59",
   "metadata": {
    "papermill": {
     "duration": 0.023676,
     "end_time": "2023-08-24T03:13:20.626708",
     "exception": false,
     "start_time": "2023-08-24T03:13:20.603032",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<div style=\"\n",
    "    background-color:#119223  ; \n",
    "    padding: 20px;\n",
    "    border-radius: 10px;\n",
    "    color: #FBFCFB   ;\n",
    "    text-align: center;\n",
    "    \">\n",
    "    <h1 style=\"font-size: 48px;\n",
    "        font-weight: bold;\n",
    "        \"> CREDIT RISK PREDICTION NOTEBOOK </h1>\n",
    "    <p style=\"font-size: 24px;\n",
    "        font-weight: bold;\n",
    "        margin-top: 20px;\"></p>\n",
    "</div>\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eb0f1bdf-c05d-49c0-a784-331e6a0f8e9e",
   "metadata": {},
   "source": [
    "## Learning Objectives\n",
    "- 1: One-hot encoding\n",
    "- 2: Decision Tree Regresion and Classification\n",
    "- 3: Visualiza a decision tree\n",
    "- 4: Prediction functions  `predict()` and   `predict_prob()` \n",
    "- 5: Evaluation Metric: accuracy\n",
    "- 6: Evaluation Metric: confusion matrix\n",
    "- 7: Evaluation Metric: ROC curve\n",
    "- 8: Evaluation Metric: construct the ROC curve by hand\n",
    "- 9: Evaluation Metric: a common mistake in ROC\n",
    "- 10: Evaluation Metric: gains table\n",
    "- 11: Evaluation Metric: cumulative lift\n",
    "- 12: Evaluation Metric: Komogorov-Smirnov (K-S)\n",
    "- 13: Evaluation Metric: precision-recall\n",
    "- 14: Evaluation Metric: F1 score"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b409ca07-9c53-4964-a831-8613befdbb73",
   "metadata": {},
   "source": [
    "## (1) Import libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "faabab26-9473-4c7b-b1aa-71f7b5bf2759",
   "metadata": {},
   "outputs": [],
   "source": [
    "#!pip install scikit-learn pandas numpy matplotlib seaborn plotly pycaret"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "dcd34763",
   "metadata": {
    "papermill": {
     "duration": 2.592884,
     "end_time": "2023-08-24T03:13:23.333574",
     "exception": false,
     "start_time": "2023-08-24T03:13:20.740690",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# data\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "# visualization\n",
    "import matplotlib as mpl\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "import seaborn as sns\n",
    "#import missingno as msno\n",
    "import plotly.express as px\n",
    "import plotly.figure_factory as ff\n",
    "import plotly.graph_objects as go\n",
    "#from wordcloud import WordCloud\n",
    "\n",
    "from sklearn import datasets\n",
    "from sklearn.tree import plot_tree\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import accuracy_score\n",
    "\n",
    "# styling\n",
    "%matplotlib inline\n",
    "sns.set_style('darkgrid')\n",
    "mpl.rcParams['font.size'] = 12\n",
    "mpl.rcParams['figure.facecolor'] = '#00000000'\n",
    "mpl.rcParams['font.size'] = 12\n",
    "mpl.rcParams['figure.facecolor'] = '#00000000'\n",
    "\n",
    "import os \n",
    "#from wordcloud import WordCloud\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3815e75f-1ee5-452f-a918-4b2d0b8c8f86",
   "metadata": {},
   "source": [
    "## (2) Load the dataset\n",
    "- Download the dataset from https://www.kaggle.com/datasets/laotse/credit-risk-dataset?resource=download"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "839ce148",
   "metadata": {
    "papermill": {
     "duration": 0.226743,
     "end_time": "2023-08-24T03:13:23.629888",
     "exception": false,
     "start_time": "2023-08-24T03:13:23.403145",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>person_age</th>\n",
       "      <th>person_income</th>\n",
       "      <th>person_home_ownership</th>\n",
       "      <th>person_emp_length</th>\n",
       "      <th>loan_intent</th>\n",
       "      <th>loan_grade</th>\n",
       "      <th>loan_amnt</th>\n",
       "      <th>loan_int_rate</th>\n",
       "      <th>loan_status</th>\n",
       "      <th>loan_percent_income</th>\n",
       "      <th>cb_person_default_on_file</th>\n",
       "      <th>cb_person_cred_hist_length</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>22</td>\n",
       "      <td>59000</td>\n",
       "      <td>RENT</td>\n",
       "      <td>123.0</td>\n",
       "      <td>PERSONAL</td>\n",
       "      <td>D</td>\n",
       "      <td>35000</td>\n",
       "      <td>16.02</td>\n",
       "      <td>1</td>\n",
       "      <td>0.59</td>\n",
       "      <td>Y</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>21</td>\n",
       "      <td>9600</td>\n",
       "      <td>OWN</td>\n",
       "      <td>5.0</td>\n",
       "      <td>EDUCATION</td>\n",
       "      <td>B</td>\n",
       "      <td>1000</td>\n",
       "      <td>11.14</td>\n",
       "      <td>0</td>\n",
       "      <td>0.10</td>\n",
       "      <td>N</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>25</td>\n",
       "      <td>9600</td>\n",
       "      <td>MORTGAGE</td>\n",
       "      <td>1.0</td>\n",
       "      <td>MEDICAL</td>\n",
       "      <td>C</td>\n",
       "      <td>5500</td>\n",
       "      <td>12.87</td>\n",
       "      <td>1</td>\n",
       "      <td>0.57</td>\n",
       "      <td>N</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>23</td>\n",
       "      <td>65500</td>\n",
       "      <td>RENT</td>\n",
       "      <td>4.0</td>\n",
       "      <td>MEDICAL</td>\n",
       "      <td>C</td>\n",
       "      <td>35000</td>\n",
       "      <td>15.23</td>\n",
       "      <td>1</td>\n",
       "      <td>0.53</td>\n",
       "      <td>N</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>24</td>\n",
       "      <td>54400</td>\n",
       "      <td>RENT</td>\n",
       "      <td>8.0</td>\n",
       "      <td>MEDICAL</td>\n",
       "      <td>C</td>\n",
       "      <td>35000</td>\n",
       "      <td>14.27</td>\n",
       "      <td>1</td>\n",
       "      <td>0.55</td>\n",
       "      <td>Y</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   person_age  person_income person_home_ownership  person_emp_length  \\\n",
       "0          22          59000                  RENT              123.0   \n",
       "1          21           9600                   OWN                5.0   \n",
       "2          25           9600              MORTGAGE                1.0   \n",
       "3          23          65500                  RENT                4.0   \n",
       "4          24          54400                  RENT                8.0   \n",
       "\n",
       "  loan_intent loan_grade  loan_amnt  loan_int_rate  loan_status  \\\n",
       "0    PERSONAL          D      35000          16.02            1   \n",
       "1   EDUCATION          B       1000          11.14            0   \n",
       "2     MEDICAL          C       5500          12.87            1   \n",
       "3     MEDICAL          C      35000          15.23            1   \n",
       "4     MEDICAL          C      35000          14.27            1   \n",
       "\n",
       "   loan_percent_income cb_person_default_on_file  cb_person_cred_hist_length  \n",
       "0                 0.59                         Y                           3  \n",
       "1                 0.10                         N                           2  \n",
       "2                 0.57                         N                           3  \n",
       "3                 0.53                         N                           2  \n",
       "4                 0.55                         Y                           4  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Download the dataset from https://www.kaggle.com/datasets/laotse/credit-risk-dataset?resource=download\n",
    "path = '/Users/chriskuo/Downloads/data'\n",
    "data =  pd.read_csv(path + \"/credit_risk_dataset.csv\") \n",
    "\n",
    "# Print sample\n",
    "data.head()  # You can also use data.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d80f86f7-890b-4b27-851e-5ff1c93308f8",
   "metadata": {},
   "source": [
    "FEATURE DESCRIPTIONS\n",
    "- **loan_status**: This is the target variable, where 0 indicates non-default and 1 indicates default.\n",
    "    - 0: Non-default - The borrower successfully repaid the loan as agreed, and there was no default.\n",
    "    - 1: Default - The borrower failed to repay the loan according to the agreed-upon terms and defaulted on the loan.\n",
    "- **person_age**: Age of the individual applying for the loan.\n",
    "- **person_income**: Annual income of the individual.\n",
    "- **person_home_ownership**: Type of home ownership of the individual.\n",
    "    - rent: The individual is currently renting a property.\n",
    "    - mortgage: The individual has a mortgage on the property they own.\n",
    "    - own: The individual owns their home outright.\n",
    "    - other: Other categories of home ownership that may be specific to the dataset.\n",
    "- **person_emp_length**: Employment length of the individual in years.\n",
    "- **loan_intent**: The intent behind the loan application.\n",
    "- **loan_grade**: The grade assigned to the loan based on the creditworthiness of the borrower.\n",
    "    - A: The borrower has a high creditworthiness, indicating low risk.\n",
    "    - B: The borrower is relatively low-risk, but not as creditworthy as Grade A.\n",
    "    - C: The borrower's creditworthiness is moderate.\n",
    "    - D: The borrower is considered to have higher risk compared to previous grades.\n",
    "    - E: The borrower's creditworthiness is lower, indicating a higher risk.\n",
    "    - F: The borrower poses a significant credit risk.\n",
    "    - G: The borrower's creditworthiness is the lowest, signifying the highest risk.\n",
    "- **loan_amnt**: The loan amount requested by the individual.\n",
    "- **loan_int_rate**: The interest rate associated with the loan.\n",
    "- **loan_percent_income**: The percentage of income represented by the loan amount.\n",
    "- **cb_person_default_on_file**: Historical default of the individual as per credit bureau records.\n",
    "    - Y: The individual has a history of defaults on their credit file.\n",
    "    - N: The individual does not have any history of defaults.\n",
    "- **cb_preson_cred_hist_length**: The length of credit history for the individual."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "35aff5b9-43cd-417d-aa95-b5da338c49e5",
   "metadata": {},
   "outputs": [],
   "source": [
    "cat_var = ['person_home_ownership','loan_intent','loan_grade','cb_person_default_on_file']\n",
    "num_var = ['person_age','person_income','person_emp_length','loan_amnt','loan_int_rate','loan_percent_income','cb_person_cred_hist_length']   \n",
    "features = num_var + cat_var\n",
    "target='loan_status'"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e5a2a546-bb7d-4efa-8711-938246cb0de2",
   "metadata": {},
   "source": [
    "## (3) Feature engineering - One-hot encoding\n",
    "#### Learning objective 1: One-hot encoding\n",
    "- Use the training dataset to do OneHot, then apply to the test dataset. Always keep this principle in encoding.\n",
    "- Notice the difference: (from the [document](https://contrib.scikit-learn.org/category_encoders/onehot.html))\n",
    "    - **fit_transform()**: Fit to data, then transform it.\n",
    "    - **transform()**: Perform the transformation to new categorical data.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "112c95d3-2990-41b1-8cf9-353a29eb05f8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>person_home_ownership_RENT</th>\n",
       "      <th>person_home_ownership_OWN</th>\n",
       "      <th>person_home_ownership_MORTGAGE</th>\n",
       "      <th>person_home_ownership_OTHER</th>\n",
       "      <th>person_home_ownership_-1</th>\n",
       "      <th>loan_intent_PERSONAL</th>\n",
       "      <th>loan_intent_EDUCATION</th>\n",
       "      <th>loan_intent_MEDICAL</th>\n",
       "      <th>loan_intent_VENTURE</th>\n",
       "      <th>loan_intent_HOMEIMPROVEMENT</th>\n",
       "      <th>...</th>\n",
       "      <th>loan_grade_B</th>\n",
       "      <th>loan_grade_C</th>\n",
       "      <th>loan_grade_A</th>\n",
       "      <th>loan_grade_E</th>\n",
       "      <th>loan_grade_F</th>\n",
       "      <th>loan_grade_G</th>\n",
       "      <th>loan_grade_-1</th>\n",
       "      <th>cb_person_default_on_file_Y</th>\n",
       "      <th>cb_person_default_on_file_N</th>\n",
       "      <th>cb_person_default_on_file_-1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   person_home_ownership_RENT  person_home_ownership_OWN  \\\n",
       "0                           1                          0   \n",
       "1                           0                          1   \n",
       "2                           0                          0   \n",
       "3                           1                          0   \n",
       "4                           1                          0   \n",
       "\n",
       "   person_home_ownership_MORTGAGE  person_home_ownership_OTHER  \\\n",
       "0                               0                            0   \n",
       "1                               0                            0   \n",
       "2                               1                            0   \n",
       "3                               0                            0   \n",
       "4                               0                            0   \n",
       "\n",
       "   person_home_ownership_-1  loan_intent_PERSONAL  loan_intent_EDUCATION  \\\n",
       "0                         0                     1                      0   \n",
       "1                         0                     0                      1   \n",
       "2                         0                     0                      0   \n",
       "3                         0                     0                      0   \n",
       "4                         0                     0                      0   \n",
       "\n",
       "   loan_intent_MEDICAL  loan_intent_VENTURE  loan_intent_HOMEIMPROVEMENT  ...  \\\n",
       "0                    0                    0                            0  ...   \n",
       "1                    0                    0                            0  ...   \n",
       "2                    1                    0                            0  ...   \n",
       "3                    1                    0                            0  ...   \n",
       "4                    1                    0                            0  ...   \n",
       "\n",
       "   loan_grade_B  loan_grade_C  loan_grade_A  loan_grade_E  loan_grade_F  \\\n",
       "0             0             0             0             0             0   \n",
       "1             1             0             0             0             0   \n",
       "2             0             1             0             0             0   \n",
       "3             0             1             0             0             0   \n",
       "4             0             1             0             0             0   \n",
       "\n",
       "   loan_grade_G  loan_grade_-1  cb_person_default_on_file_Y  \\\n",
       "0             0              0                            1   \n",
       "1             0              0                            0   \n",
       "2             0              0                            0   \n",
       "3             0              0                            0   \n",
       "4             0              0                            1   \n",
       "\n",
       "   cb_person_default_on_file_N  cb_person_default_on_file_-1  \n",
       "0                            0                             0  \n",
       "1                            1                             0  \n",
       "2                            1                             0  \n",
       "3                            1                             0  \n",
       "4                            0                             0  \n",
       "\n",
       "[5 rows x 23 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import category_encoders as ce\n",
    "for_dummyX = data[cat_var]\n",
    "# Fit to data, then transform it.\n",
    "ec = ce.OneHotEncoder(cols=cat_var, use_cat_names=True, handle_unknown='indicator').fit(for_dummyX)\n",
    "X_dummy = ec.fit_transform(for_dummyX)\n",
    "X_dummy.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "47785cff-109c-4ac9-9d20-9ee606557903",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(32581, 30)"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X = pd.concat([X_dummy, data[num_var]], axis=1)\n",
    "X.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "45abfd92-435d-4bd8-8a47-f96a831c9104",
   "metadata": {},
   "source": [
    "## (4) Split the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "4d1145bf-da2e-4847-a089-06334ef34cf9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[(24435, 30), (8146, 30), (24435,), (8146,)]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, data[target], random_state=0)\n",
    "[X_train.shape,X_test.shape, y_train.shape, y_test.shape]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "70f47db2-a179-4143-a0f6-226f4f3507a6",
   "metadata": {},
   "source": [
    "## (5) Build a classification decision tree model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "ca39984e-0d8c-42c9-a018-96c5a5a60c4f",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.tree import DecisionTreeClassifier # for classification\n",
    "from sklearn.tree import DecisionTreeRegressor # for regression\n",
    "\n",
    "# First, specify the model. \n",
    "dtree = DecisionTreeClassifier(min_samples_leaf = 5, max_depth = 6)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8222041a-c1d4-4246-9cbc-adab22f867c2",
   "metadata": {},
   "source": [
    "#### Learning objective 2: Decision Tree Regression and Classification\n",
    "Let's understand the differences between **`DecisionTreeRegressor`** and **`DecisionTreeClassifier`**\n",
    "1. **Purpose**\n",
    "   - `DecisionTreeRegressor`: Used for **regression tasks** where the target variable is continuous (e.g., predicting house prices, stock values).\n",
    "   - `DecisionTreeClassifier`: Used for **classification tasks** where the target variable is categorical (e.g., spam or not spam, disease presence).\n",
    "\n",
    "---\n",
    "\n",
    "2. **Target Variable**\n",
    "   - `DecisionTreeRegressor`: Fits the model to predict a numerical value.\n",
    "   - `DecisionTreeClassifier`: Fits the model to predict a discrete class label.\n",
    "\n",
    "---\n",
    "\n",
    "3. **Splitting Criteria**\n",
    "   - `DecisionTreeRegressor`:\n",
    "     - Splits are determined to minimize **variance** (measured using Mean Squared Error, Mean Absolute Error, etc.).\n",
    "   - `DecisionTreeClassifier`:\n",
    "     - Splits are determined to maximize **information gain** using measures like **Gini impurity** or **Entropy** (depending on the `criterion`).\n",
    "\n",
    "---\n",
    "\n",
    "4. **Outputs**\n",
    "   - `DecisionTreeRegressor`: Outputs a **continuous value** as the prediction for each leaf.\n",
    "   - `DecisionTreeClassifier`: Outputs a **class label** or class probabilities (`predict_proba()`).\n",
    "\n",
    "---\n",
    "\n",
    "5. **Loss Function**\n",
    "   - `DecisionTreeRegressor`: Optimizes using **mean squared error (MSE)** or **mean absolute error (MAE)** to fit the model.\n",
    "   - `DecisionTreeClassifier`: Optimizes using **Gini impurity** or **Entropy** to separate classes effectively.\n",
    "\n",
    "---\n",
    "\n",
    "6. **Evaluation Metrics**\n",
    "   - `DecisionTreeRegressor`: Evaluated using metrics like:\n",
    "     - Mean Squared Error (MSE)\n",
    "     - Mean Absolute Error (MAE)\n",
    "     - R² Score\n",
    "   - `DecisionTreeClassifier`: Evaluated using metrics like:\n",
    "     - Accuracy\n",
    "     - Precision, Recall, F1 Score\n",
    "     - ROC-AUC\n",
    "\n",
    "---\n",
    "\n",
    "7. **Use of Probabilities**\n",
    "   - `DecisionTreeRegressor`: Does not provide probabilities; only predicts continuous values.\n",
    "   - `DecisionTreeClassifier`: Can output class probabilities using `predict_proba()`.\n",
    "\n",
    "---\n",
    "\n",
    "8. **Common Use Cases**\n",
    "   - `DecisionTreeRegressor`: \n",
    "     - Predicting house prices, temperatures, or sales.\n",
    "   - `DecisionTreeClassifier`:\n",
    "     - Email classification (spam/ham), disease diagnosis, image recognition.\n",
    "\n",
    "---\n",
    "\n",
    "9. **Leaf Node Output**\n",
    "   - `DecisionTreeRegressor`: Each leaf contains the **mean** of target values in that node.\n",
    "   - `DecisionTreeClassifier`: Each leaf contains the **most frequent class label** (or probabilities).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "90060497-3fd8-410c-a8c9-5b9709723649",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-2 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-2 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-2 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-2 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-2 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-2 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-2 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-2 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier(max_depth=6, min_samples_leaf=5)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;DecisionTreeClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.tree.DecisionTreeClassifier.html\">?<span>Documentation for DecisionTreeClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>DecisionTreeClassifier(max_depth=6, min_samples_leaf=5)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "DecisionTreeClassifier(max_depth=6, min_samples_leaf=5)"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Then, train the model\n",
    "dtree.fit(X_train,y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "29ca5ecb-adf4-4c9b-a2bb-d7080991eddf",
   "metadata": {},
   "source": [
    "## (6) Visualization\n",
    "### Learning objective 3: visualize a decision tree "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "16328f2b-dade-4efb-b7d7-fe9b6e3a8b16",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1800x1000 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(18,10))\n",
    "plot_tree(dtree, filled=True, max_depth=2, feature_names=X_train.columns, fontsize=14)\n",
    "plt.title(\"The Top Levels of the Decision Tree\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fc0d1854-6b1e-4f0c-ba1e-6a69bf166fe6",
   "metadata": {},
   "source": [
    "## (7) The feature importance chart\n",
    "\n",
    "### Learning objective 4: feature importance\n",
    "\n",
    "The feature importance chart visually represents the relative importance of each feature in determining the target variable. It quantifies the contribution of each feature to the decision tree's predictive ability.\n",
    "It helps to understand which features are most influential in the decision-making process.\n",
    "It Identifies less important features that could potentially be removed without significantly impacting model performance.\n",
    " \n",
    "What the Chart Represents:\n",
    "- X-Axis: Typically shows the importance score for each feature (ranging from 0 to 1).\n",
    "- Y-Axis: Lists the feature names.\n",
    "- Bar Length: Represents the magnitude of the feature's importance.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "4fe2363d-5460-4829-86d6-774c62b6eb85",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA8MAAAIlCAYAAADxHyodAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuNSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/xnp5ZAAAACXBIWXMAAA9hAAAPYQGoP6dpAAEAAElEQVR4nOydd5xU5fX/3wsW1KDCYiHRiInJh2+SXzTF2A0W7C3GmKJGLLF3TeyKvWOPGo3dqIndgBWF2LvGeqyQqBEFFkVEBHZ/f5znwuUyuzuzOzu7sOf9es1rZu597nPPc+7s7Jx7Wl1TUxNBEARBEARBEARB0J3o0dkCBEEQBEEQBEEQBEGtCWM4CIIgCIIgCIIg6HaEMRwEQRAEQRAEQRB0O8IYDoIgCIIgCIIgCLodYQwHQRAEQRAEQRAE3Y4whoMgCIIgCIIgCIJuRxjDQRAEQRAEQRAEQbcjjOEgCIIgCIIgCIKg2xHGcBAEQRAEQRAEQdDtWKCzBQiCIAiCzkDSEOCqMob2MbNJHSzL14FPzWxKR56nUnI6OsHMhnauNO1D0nfM7K3OlqNaSGoCHjOztas03wDgvRK7pgGfAE8AF5jZo9U4XyuyjAJ+DixoZjMqOO5qYGfgO2b2dgfJNgh4uMzhY81sQEfIUQ6SFgF2An4LDATqgXHAaOAsM3upMH4MsICZLVdjUecg91m8wcx2zG3fEzgC+Ab+mdwFuA84xcyO6QRRg/mAMIaDIAiC7s7twG0t7O9QA1XSrsAFwA86+lzdFUnHAMcBC3W2LFVkJ+DjDpj3DeCU3PuvAd9K59tO0kFmdkEHnDfPKcAVwMwKj7sMeBD4qOoSzeZ1XBd59gDWAU5N+zM+70A5WkSSgFuA7wPDgXOBSen9EODXkn5nZv/oLBlb4BNcx+9mGyT9ELgUN5IPxL8rX0rjXu4EGYP5hDCGgyAIgu7Ov83s+k48//rAYp14/u7AJsCCnS1ENenAz+y4UnNLOg33KJ4n6SUzG91B58fMHmjjcU/gHuwOw8zGAXPoR9KGuDH8gJmN6sjzl4Ok3rgB3B/YyMweLOw/B3gc+JskM7N/d4KYzZIiZIqfwZXT8/lmdklue2d+dwfzAZEzHARBEARBELSImTUAv0tvT+hMWYJWORL4NnBE0RAGMLP/AH/CnWL71Vi2trJwev60U6UI5jvCMxwEQRAEZSLpG8DxwGbA0sD/gDvxnNoJhbG/BPYEfgwsgf+IewIYambPpTFjgBXSIe9JGm1mg5rLfZS0EvAWcI2ZDUnbRgHLAmcApwO9gYvM7E9p/++AA4D/BzQBz+P5gne3UQdDkw5+APwR2AJYBHga/2H9EXAmsDX+O+MJ4EAzezMdPwjPudwFD7/dPennVeAMM7u1cL4+wDHAL4Dl8FDPkcCJZvZ6btzVwG/SuEuBZfAQ+N/kxjQVdLc+HnK5OtAXD2t9Hjgtb0Sk6/QGHgZ7EvATPIT3IdzgsILM6yfd/Czp4HVgmJn9vTCuzdemmDOcW7/wz8JgYFHgxaSre1qbszXM7BVJTwHrSOqTDGQk9QD2BXZL55+GX/eTzeyxgtxfA44CtgOWx0O978X/Lv6XxoyikDMsaXv8Wv0fbhi9BVwHnGtmjTkdzPF3I6knsE9OtunAs7ieZ+kklx+/AR5J8Bv8M/Qe8BczG9YWneU+7wcAW6Z1fQKsYWb/rfA7RcDQJOMSwH+Am4BTzWxqGlMH7AhMBS5vQbS/Ay/k/4aakf87wOHpnF8HZgBvAleY2cW5cT2Bo4Ff4X/X04EX8M/93blxSwGnAevhf88NeMTBiWb2ahozgFzOcOF78ipJV+HfH2Nw3c6RM1yOntK4pqSjacCu6Xl3M2spbSaYzwjPcBAEQdDdWVRSv1KP/CBJK+I/orfDf4Tvj4ci7gU8mR8v6WA8X28B3Iu2H26YbQw8nBt7EB6uCHAwc+ZqVsI3gbOBYel8w5McZwA3AJ/h3qITcWP5LkkHtfFcGffgYZhH47ma6wJ3A6NwI+JY3LjYCLgtGUx5jseNlL/g+byLA7dI2icbIGkZ4BlcN//CjaGrcQP8WUnF4lELAn8DrsF/wN+C5xS+mfbvlGTNblY8iP8gPx3YO829GnCPpO8X5v5BWvPrSZ4bcIP/vmQIZDLvnOYdiOdpHokbujdL2js3riOuTU/g0TTPsbjx/n/A3clAqAYv4r8ff5Tb9jc87/0t4FD8s/hdYLSk7bJBkhbFjeQj8ZsnBwM349dllKQlS51Q0ra4MTMZ/7wdCkxI5zmtOUHTZ+62JNtEvPjSmbhhNULSISUO+ytumJ6P39AAOEfS7s2dp0xOxQ3E/YGrkiFcyXfKz/C/hXWAi/HvjidwfTwkqVca+nX8JsOzZvZlc8KY2YwyDOEV0zk3w/829sH/VvoCF6WCVhnD8L/pR/G/05Pxv607JW2W5uuJ3/jYFv/s743nhm8CPCZp2WZEOQi/LuDfFzvh3welZC5XTxm/xY3mw9I5Oiz8P+iahGc4CIIg6O78kdk/eovU5V5fjHvafmxm72QbJd0GPIAbM/ukH3xH4UbDYDPLigBdJqkhnWsQcIuZ3ZGMhTWBO8xsTBvXsAiwn5ldmZPrZ3go5J/NbN/c9nPxCqxnSLrFzN5v4zlfAzY1s6Y077eBrfB1/CJ3vuWBXwIrAu/kjl8G+GHOg/cX4JUk1w1m9iluQHwb2K2wtutxI+JqedJjpuMewIVmdlxeUEl7Ad8t5MIejVfWXTdfxVvSW/i13hT3Vmd8A9jBzP6WG7sIXoxofeABSYsBF+JG4apm9lka91fcSzZU0uV4tEBHXJsFgHvMbI/cnP/BDZnfpzW3l8xbuVSaf3vg18CfzOys3HnPw42SSySNMLMvcCP2B8DeZnZpbuwr+A2MnXEjtMiueMGkzXJe4Mtxz/z/tSDrDvhn8lpgSO6zegH++TlT0p35v2c8OuCnZjYtjb0L91LughtubeUTYKvcZxXK/06pA67EoyJWMbOJaeglkkYnuQ7ADf2vp30ftkPWjP1xz+oGWTRLku9W/G9jS9LNJdzzfp+Z5W/43Ix7bn8KjMBvoPwYONzMzsyN+zduSP+EdCMvT/qe7JfO8UT2dyzpm/lxFeop42vAFmb2LkG3JIzhIAiCoLtzHf5juVlSqO7GuGfw04LX+EW86um2wD5mNjOFPi6W/+GbDKWv0tvFqyf+LIq5gb9NzzcXvdy4N2493MN6KW3j5sy4SLyOGx5/L4zL2hl9gzmN4WvzIeBmNlnSxXiI78aSbsGN6HcptMAys39L+htuPP0E9zJmzJUj2Qw/A5YsGMILA43pbfEaTQOKlXefxY3hzKO1Ee6VPSEzhJO80yRtld7OpGOvTbGg0LPpuTmvW6VkFbmza5+t5dYSa7kVN8DXxT2C2+GGSjF890Y8DN0ozX9xo+X8FCL7Qvrb+nkrsm6fno/Lf1bN7DNJp+Kfq18yp3H0j8wQTmPHSBpP+/U3qvB9UPZ3CvBDvAr0pUCPwth/Al+msWfiYczgUQLt5VA8dWFcTu4ezLYf8n8j/wV+nqJibjezMWb2X2Cl3JgP8c//HpL+C9xrZg0pfaD4vdEWKtFTxnthCHdvwhgOgiAIujvvlioyU+A7uNdxc9zDUxJJvczsSzP7StLayWsm3Cu6PLM9zR2RpjSu8D4Li20p7G9AO85XbF8zo5ntea9tnlLtUN5Iz98G+uFeqUcLRnfGK+l5ReY0hot6KImZzZC0gqRjge/hulgxJ2dR3olmNr2wLTOaMsPjW4V15M+Xz/3uyGtT1H9RxvayVHrO2jpla3mnxNiMAen5W8AbBe8oSa9PFw/KMRT3Ku6XHp9Iegi4A4+waK4X8beBKWY2tsS+/OcnT6m2TNNov/6Kn8uyv1OYreO90qMUA9LzB+m5f5ukzGFmTZIWlJR5bVfEdZqFGuf/RnbDDdphwDBJ7wD3AzeZ2b/SfB9K2h84Bw+tb5T0PH6j5Fprfx/wSvSUUdb3RTD/EsZwEARBELRO9qPvDjy0sTmyYj9/wz1mr+H5anfj3h4Bf26HHC393y72ZM1k3hbPtSzFf9ohS9EwzChluJZiWolt2fqmM2eIeiky46Q4T1m9aeWtgo7AQ2AfwYty/TvJcGeJQxpLbCuStW9qTQcdeW3KkbM9rJrO8UJ63wP4As+fbo7M47sg5X8+Zh/snsnVJf0UNx7Xxwul/Ro4UNK6JW5UQMufoeY+Px2lv+b+Pu+g9e+UbOyluLe9FNMBzOxjSW8AP5W0SL5gVB5JC+AhzC8CB5S64ZSiGf6OF+Maidc9eAV4DJgjhN/MHpf0LfzabIJHN+wF7C1pmJkdmsZdIukmPA95ozTuGOAISdub2e0t6KI1ytZTjkp7WQfzGWEMB0EQBEHrvJeeFynlRZa0Ne45nJGKOv0W/xH5m/yPTElrlHm+zNO1cGF7JaGamcz/M7MnC/KuhBd4+ryC+arNd0tsG5ieDfeWfQZ8T1JdiR/rWYGrio3GlGt4OP6jfn0z+yq3b4dK58uR6Vx4jmT+nL/BjYTj6frXpiSSVsH1fl/K6QZfi4BXzOyjEuP74/m+2diVJPXIcn/TuJ64p/ARM7uoMEddOuciZvYMHvZ9gqTF8RSHrfBw43+WEPkdYKCkFUp4h9v8+akSlXynZGPrimNT2HKWTpBxI15I7w948bBSbA2sjXvOm7tBMQy/WfA9S5W+0zm/UZChFx6iPNHM7sU9vVkBrpHAQZJOwG+G/AB4ycxuwItoZdXX78dD6ttjDFeqpyCIatJBEARB0BrJM/UosJGkdfP7JG2Ke3eOSJuyPLVXCoZwVgAG5rwZXSqMOCt+89OCKDtVIPYt6Xlo8gJlciyI50rejefxdha7as5quUviIbDjgQeSsXQ7Hpq5S/5AST/AW9+8y2wPZUvMTMdlOu6Lew2tYAgvihfYgbY5DO7HDb8/pBzxbN6F8ArK2+Ctc7r6tZmLZHxejnt2T8rtytZyUonxf8e97FlY7e1AHzzXO892eH7vosXzpr+h2/GK2Evktn/G7FDn5sKkM9lOTEZ1JtvX8JshM2mf8dVmKvxOeRZvI/R7ScWbSHvget41t+0c3HN7sqQNiueWNBD3ns7AK7k3Rz/8plQxdPzw9Jx9dpcCnqRgeJvZe/jnvQnX9SZ4tfl8FepsfdNp/jqWS6V6CoLwDAdBEARBmeyDt/N4QF75+GXcg7cXXmH3sDTu0fT+iGRcvY3nSu6K58ACLJmbN8tZ+6Ok+8zsDrwI0lHABfKem//DK7d+j9lFuFrEzEbKqxjvhrdpuQn38uyIF4/6c/K0dRaL4e2RLsF/LO+J/6j+tc1uCXMEXnn7imQwPIkbx/vgP5x3bcGrlSfT8Qmpquxo/LrsLGkK8BJehXcIs3Mtl6x0QWbWIG+L9BfgeUlX4sbxjrjnbMdkfHfla7OMpB1z7xfF81t/h+vmIJuzd/DVeG/Z3VOY7J24B3D3dNyfzCy7uXM67pG8IkVQPI1HCOyNh+s2Fy58Au4FfiIV0GoAVsENnBdovmjadUm23wPLS7oT/9ztiue+Hp4Mts6irO+UVJTvD7j3+xlJl+Kf31XxtbxD7maEmU2RtzO6B7hf0nA8JPorPPd6J/xm0O5m1lKu9p247u6U9E/8s/BLYC3887pkOt9/02d9N0n34jdzGnHjd0287/kUSbenNZ4srz7/DF4YbQgeBXN2G3Q4i0r1FAQQnuEgCIIgKAszexkvIvM3/AfhRen5H8Dqlnp2mtl4PBfuUfzH+vlp3C3MNmY3yU19EZ5XvCupyqmZvYnn1L2CG4SnAZ/ivTOby9UtxR/SoxE3KE7G//fvjnthO5PzcF0ehucMvouHLN+WDUhht6viOhqEe552wr1mPzazcnuCnorr8nDcAJqOX4M78LzTC3Fv5SN4+OwHuMeutbzluTCzK/Br9yHe6/dk3HDYJIWGZnTVazMQNyKzx4W45/ZhYC0zK3r/ZuI3av6E38w4A7+RMx74peXaLSVv7lr438QG+PXcBrgEv/ZTKEFqpfMLvGjXH3GjeZM0z/rNFdBKsm2djslkOww3ijbNt/fpDMr9TkljHwRWx6MPdkljN8BrEKxdDFFPc6+Mhx73xyMTzsW/m24EfmRm17Qi4r7pmJXxa3UonuO+Hp6T+90UCg1+Q+OwdK5TccN2Obw904FJpi+Awfj1Ww+/fsfj13VTM8s8+W2mUj0FQV1TU8V1DIIgCIIgCNqEpEG4YXWKmR3TyeIEQRAE3ZjwDAdBEARBEARBEATdjjCGgyAIgiAIgiAIgm5HGMNBEARBEARBEARBtyNyhoMgCIIgCIIgCIJuR3iGgyAIgiAIgiAIgm5HGMNBEARBEARBEARBt2OBzhYgCIJgHqIO+DreZzEIgiAIgiDomvTG+723mBMcxnAQBEH5fB14v7OFCIIgCIIgCFplOeCDlgaEMRwEQVA+kwEmTpxMY2NnizJ/U1cH9fW9mTBhMlHnseMIPdeO0HXtCF3XhtBz7QhdV0amL8qI5AtjOAiCoEKamoh/RjUidF0bQs+1I3RdO0LXtSH0XDtC19UnCmgFQRAEQRAEQRAE3Y4whoMgCIIgCIIgCIJuRxjDQRAEQRAEQRAEQbcjjOEgCIIgCIIgCIKg2xHGcBAEQRAEQRAEQdDtCGM4CIIgCIIgCIIg6HaEMRwEQRAEQRAEQRB0O8IYDoIgCIIgCIIgCLodYQwHQRAEQRAEQRAE3Y4whoMgCIIgCIIgCIJuRxjDQRAEQRAEQRAEQbcjjOEgCIIgCIIgCIKg2xHGcBAEQRAEQRAEQdDtCGM4CIIgCIIgCIIg6HaEMRwEQRAEQRAEQRB0O8IYDoIgCIIgCIIgCLodYQwHQRAEQRAEQRAE3Y4FOluAIAg6H0l1ZtbU2XLMK/To0YMecSuxJvTsGYquBaHn2hG6rh2h69oQeq4d86quGxubaGzsmj8z65qauqZgQfdFUhNwgpkN7WxZ5nckLQlcAFxhZv+q4LihwPFmVtdBonVVFgc+7WwhgiAIgiAI5hUaG5toaJhSM4O4rg769esNsATwWUtjwzMcBN2bVYCdgCsrPO4K4N6qSzOPMGLsZMZNndHZYgRBEARBEHRp6nstwFYDetOjR12X9A6HMRwEQcWY2fvA+50tR2cxcdoMxk2d2dliBEEQBEEQBO0gjOGgyyOpP3AKMBjoB7wMnGxmd+XG9ANOALYA+gOfA6OBg81sTBozCngbeAvYF1gaeC6NeboCeQYBDwMbA8cAq+KG4TAzuyQ3rgfwJ2B3YHlgLHChmV2YGzMqHdsL2BR43MwGS1o8rXlbYEngNWComQ3PHbs7cDCwEjAO9+6eZGYz0/6rgeWAG4AjgRWA14EjzOze3DoAHpY02swGlamDoeTCpMvVraTVgROB1YFpwIPAYWb2QdpfzrVuAvZOc/wCmAlcDxye5h6CFwe8HdjPzL5Mx7V6PYIgCIIgCILuw7yZhR10GyQtAzwDrAscBfwSGAPcIWmHNKYOGA5shBtEGwFDgQ2ASwtTbgdsA+wP/BZYFrhVUs82iHcz8Hya7wHgz5L2zu2/BDfOrge2BP4BnCfp2MI8vwYmA1sBZyZZ7gd2AE4DtgbeSGteJ635SOAvuDG5JXBRWvtfCnP/FPgjcFyScwZwm6Q+SfZ907h9gX3aoIM8LepW0o/wGxS9gN8DeyX57pO0QDnXOseZwJe4MXxNOucLwDdxvV0A7Ja2Z5R7PYIgCIIgCIIqU1dXu0e5hGc46OocAiwFfNfMxqZtIyQ9CJwt6Ubc6JoCHGpmj6YxoyStBOxRmG9BYGMz+wxAUm/cmFoF92RWwm1mdlB6fZ+krwPHSroU+A7wB+BIMzsjjblfUiNwlKQ/m9mEtP0rYC8zm5Zk2gJYDdjGzO5M2x4Cvg2sL+nfwLHAZWZ2YG7uCcAVkoaZ2atp+xLAT8zsnTTPFNwgXd/MbpX0Whr3mpllr9tKa7o9GpgAbJTz1n4I/A34AW5At3itzawxJ+9eaY7RuK4XAnYwsxlJH9sBawFnSfou5V+PIAiCIAiCoIr06bNYZ4tQkjCGg67OIDx0eGxh+/XAVcDAZMStL6lO0gDcEB2IG0ILF457NTPWElnea1v+Qq8pvL8V9+J+F1gPqAPulpT/O7sLD61eB7gjbXs9M4QTawPTgbuzDckIXBNA0ibAIsBdhbmz8YOBzBj+JDOEE+1Zb2u0ptu1geGZIQxgZk8AKwJIuoxWrjUeLg7weG6OmZLGA88lQzhjAh5iDrA+5V+PIAiCIAiCoIo0NExh5szG1gdWgbo6qK/vXdbYMIaDrk5f4N0S2z9Kz0sCpDDa0/Bc0Il4yOwXJY4rbsv+KtuSMvBB4f3H6bkvUJ9ev0ppvp57/XlhXz0wIecFLZLNPaKMuau53tZo7Vz1zNZRKcq61olSZfKntDB3JdcjCIIgCIIgqDJdsaNvGMNBV2ciHgZdpH96Hi9pbeBaPE/07FwxpjNxb2RH0Q/Ie12XSc8fA5PS6/XxfOAi/2lh3klAvaQ6M5v1tZFybutyc+8AvFni+HGtyN1ZTMLDoOdA0mb4zYtWr3U7zw1tux5BEARBEATBfEgU0Aq6OqOBNSWtUNi+I+4xfBsPH+6BV1vODOGeeLhwVkW4I9im8H47YGwKS/5X2tbPzJ7NHrgxeBKzPZWleATPv90k25CKhF2FF5Z6Es8z/kZh7hm4d3zFCtZQy/5AjwAbSVoo25AM/OHATyjvWreV9lyPIAiCIAiCYD4kPMNBV2cYsBMwMrXzmQDsjHv4djWzRklZ656LJF2Jh9vuC6ycti9GaW9gezlE0pfAE3jl4y2B3wGY2cuSrgcuT3nMzwICTgXeo7RHN2N4mvMaScfgocM7Af8H7GFmE5LX+6TUgmkU8A3cqGsCXqpgDZPS8+aSGsyskmMr5SR8XcMlnY/nPZ8MPI1Xz36WVq51W0/czusxF30XXoDptUl7CYIgCIIgmGep79W1zc2uLV3Q7TGzjyStCZwOXIhXDH4J2DrrPWtmoyTtCxwK/AoPE34Y79F7O14cqbn82vZwEN7T9ki89dF2ZnZrbv8uad9eeC7zOOAm4JisF3ApUkGoTfE1n4Qb8y/hVZifTmOOlfQ/3Oj/E9CAt1k6ysw+rWANrwI3AvvhfY5/UMGxFWFmL6TexqcBf8fzfocDh5vZV0Cr17qdtOl6lGKzFcoryhAEQRAEQdDdaWxsorGxCyYMA3VNXTGTOQi6MMmgexhYz8xGda40QY1ZHPi0oaGlWl1BtejTZzFC1x1P6Ll2hK5rR+i6NoSea8e8rOtaG8N1ddCvX2/wFqOliq7OIjzDQZBIecattemer+8eFdoONUdje0KWgyAIgu5HLX8M16X/5DNnNnbJ6rXzC6Hn2hG67jjCGA7ahKRRAGY2qHMlqSrvAMXiTUVGA0M7XpT2kfJi3wN2MbOrWxg3BhhlZkNyx7TGCbSig5Tze3yJXV/g/YdvAY7P+gK3MD7PImb2ZW7sIWZ2bolzXw0MMrMBkobghcdaxMxauwkyB121cfz8SOi6NoSea0d31XVjYxMNDVO6bKhkEATdkzCGg2A2WwILtzJmspkZrXuQ5xV+wezwkQ+BVcs45sMK5l+j8L4f8Fu8KvYCwOGtjM8zrfD+FEl3m1lLVaaHF+bcHDgGzyf/XwvHtciIsZMZN3VGWw8PgiDoVtT3WoCtBvSmR4+6MIaDIOhShDEcBAkze7mzZag1ZvZC7vVXeJXlas7/ZInN/5T0Lbyg1eFljG+OacCVkn6e78dcmO8T4JPsvaSB6eULZjamgnPNwcRpMxg3tZZdqYIgCIIgCIJqE8ZwFUkhp9fj1X+HAI24Z+ogM5uYxqyDt5NZFfgSuBs4LP1oJ4V1XoFXvD0Zr6i7Nv7D/1xgLbwlzUvASWY2q0qypJ/m5l4QD+k9wsxeTfsH4YWfNsSNkLVxr+A1eBXiSn/d10n6E16JeCngReAAM3umjTIdA6yOGy8nJt1dDGyEV0s+x8zOy83dF69MvA2eIP8icLSZjaxwHUj6NfBHYCDwOXAHcKSZNUg6ADgPWMrMJqTxxyYZN8zOJ2kb4DZgOWAPvD/ugUlGAWPxa3ZdJWuQ1ISHJW8JfD+NPzmdfwfg67i39ibgODObnltaf0n/wHsWT8fDkw8xs8/T3GOYO0z6t2neDYDxwOXAKVXOE/6U9udfHwJcCRwAnN9uiYIgCIIgCIJuRY/OFmA+ZF/cYB0CHIGHZQ6XVCdpXWAknje5Pd6aZxDwsKRFcnP0xNsE7QYcDBjwT9zI3gnYGu/BepeklQAkrQc8jofv7gLsjrePeTznDcu4AXgE2AL4G96aZ/c2rHVtPNx0P9zw+zpwd1aEqUKZbsRvDGyR1nspbiS/AmyF96I9V9LP0ty9gIeSLo5OcrwP3Ctp/UoWkXr53gg8ifcLPgHYDhiVrsvwtIb8vBuk53Vz2zbFPY5ZGHF/4CLcUNscNzSvzdZe4RqOwq/VdsCt+M2MfXCDeCPgEtyYP6Zw3EnAf9M5zgX+QOs5z5fgxuq2wLVp/GmtHFMSSQvkHgtJ+ka6gbJRmrul8fnHXN9VZnYVcA9wqqRvt0W+IAiCoLbU1dXmUctzdedH6Dl03VUf5RKe4erTCAzOer1K+gTvdbsxcCxu6G2ReWElPQm8BuyKe0EzTjGz4WnMsrjHcpYnWNLTeBGhLMf1dOAtYLPc3PfjRaFOxI3vjMvN7KT0+qHk0dwCuKzCtU5L58u83kviXu3vAf+uUKYrzWxYGvM5bpg+bWbHpW0v4cbZmrhhvBOwMrC6mT2VxtwDjALOoLzcVyT1wQ3Iv5jZfrntrwD/wgtQ/VmS4d7rf0haFM9DfQ74eW66TZizWNOiwO45z/GbuHd4c7wvcSVreCTTTxp3DvBsMggBRkv6AphUWOItZnZIev2QpI2Y06gvxXNmtmN6fa+krwEHSTrFzFosT1+C6SW2/Qf/7J5e5njwv439SmzfA79hcqWkQc2FSwdBEASdT62Lh9XXR0/4WhB6rh2h6+oTxnD1uTMzhBN3ATNwY3h14CygLtfC5l3gdWAwcxrDL+Zej8MN5sslbQzcB9yTGTmSFsMNpxPyoc5mNknS3cBmBRmfKLx/H/c6V8qrmSGcyCoRL9kGmR7PvR6Xnp/KHTdBEsCSadMGwEfAc4V2QHcDZ0nqY2YNZaxhdfyGwo35jWb2iKSxuOf+z7h3eJu0e23gK+AC4DJJCwPfBr6Je/Dz5HX9fnrOdF3JGl4szPswcLqkR/DP2HAzu6jE+h4pvH8vyd8SRY/trXi49xr4Z68SMoN+MTzKYT1gfzO7q5XxRT4utdHM3pd0KH4TZn/8mgRBEARdkIaGKcyc2fGd+erq3GiYMGFytKHpQELPtSN0XRmZvsohjOHq80H+jZk1ShoPfA0PSz+cuSvoAkwtvP88N0eTpMHMroL7e2C6pNvx3OJFgTrcsCryEbMNyIwvCu8baVvIfLHzd/Yfrkc6ZyUylfI4ttRZvB5YluY9if3xPOPW6JuTqUhezuHAISmvdgPgMeBBoBewGvBTvDrxc/kJzOyL3OvGZNBnuq5kDZ8X9p2Vtu2Ke5HPlPQqbmg+nBtX6hq1dq0/KLzPDNG+xYGtYWazCnIlw/1B4BZJG5hZ0VCfY3wF5/irpF8Bp0kq3owIgiAIuhC1/CHf1FTb83VXQs+1I3RdfcIYrj798m8k9UzbPscLBp1LwQuZKBqoc5DyUPeRtC8eWrsdnpM8Hs/5bcINqyL905haM4mOlWkSHoL9u2b2l9MvFyDzbC+Lh7Dn6Y977sE9rJ/hodLrA7ea2Ycp9HkQsA7una3kK2oSbVxDKmZ1MXCxpKVxT/vRwG2SlqlAhlL0K7zP5ivpnS2XdDNgFzzK4WpJ3zezL9szZ44/kMKl8VD0IAiCIAiCIGiRKKBVfTaTtFDu/db4TYc7geeBgWb2bPYAXsULNg1qbkJJa0gaJ2lVM2sysxfN7BjgZWAFM5uCt8TZPhnf2XFL4LnAj1Z5ja1SA5lG48W4Pi7ocyP85kC5TWCfwnOff5vfmKp+fzOTM1VofgC/nj/C83rBC2BtgRvDd9dqDZIel3R+ku1jM7saL9a1JLB4hXIU2abwfjv8Zk0lbY9KYmZj8Xzxb1E6QqKt8/4XOAzP4d66WvMGQRAEQRAE8y/hGa4+y+NVni9Ir08D7jWzUZKOAkZIugGv6NwT/wG/Gl71tzlewI2R6yQNxcN3NwRWYXZLmSPxfM4Rki7GWzIdiefDnljNBVZAR8p0FV5Q6QFJp+JFmQbjBtaFhfZCzWJmEyWdDhwnaTpu0K6IX4/X8LZTGcNxz+PnzO7H+zAeqv4lHgJcqzWMBg6TNA7Pt/4GXoF8tJmNT0Wv2sr2ad4R+E2affF2Ty2FrVfCuXhl8cMlXZ0MZAAkrd7CcdZSHriZXZ7CpQczdyGxqtJ34QWY3vFpb0EQBPMF9b3i52YQBF2T+HaqPjfheZ434/maV+Phq5jZ/akA1vF4v9ev8BzTDc2sWa+bmX2ZqgCfjhu/S+LhtXsmjyBmNlLShriReRPu7fwX8Pusp2+t6UiZzGxKalV1GnAm3qN3DB46fk6Fcw2V9BFegGkPvG3VP4BjCgbgCDz0+zEzy7y2o9K2h/P5wTVYw7G4PncFjsNbId2Vjm0vx+JG8J64gb6vmV1ahXkBMLOvJB2EFxs7B/c8ZxSLu+X5Bd7/uSV2x8OlO5TNVohqjkEQBJXQ2NhEY2MkOwZB0LWoa4os7KohaQwwysyGdLIoQVAxqTjYe3g7qas7V5ouy+LApw0N1XKSBy3Rp89ihK47ntBz7ejOuq6lMVxXB/369Wb8+Ki825GEnmtH6LoyMn3hjqYW24KGZziYhaQ6PHS7NWZ29X6u89Naugrt1amkulrrujPOGQRB0J0JD3AQBPMSYQwHeXbG81hbYz1mF5DqqsyTa5HUhPdmHtrZspTg53iOdGvsgqcHAJD6MJ+O51nf0CGSFZC0HHAZnu88ptrz9+nTlrbcQVsIXdeG0HPtmN913djYREPDlDCIgyCYJwhjuIqY2YDOlqGd3A2sWsa4Yguirsj8tJaaYGZj8N7QzfEcnku8Ih5O3VysX7ElVH/gINxIrhUb4u2mOoQRYyczbmq5BcuDIAi6B/W9FmCrAb3p0aMujOEgCOYJwhgOZmFmE/DiUfM889NaugpmNhmvYj26s2XpbCZOm8G4qTM7W4wgCIIgCIKgHYQxHARdGEn9gVPwdkH98N7SJ5vZXbkx/fBe1VvgXtjPcYP14OTtRdIo4G28Cvm+wNK4p/dgM3u6AnkG4aHS66V2YUOBHYED8arYAsYCJ5nZdbmiXABXSRpabgSFpCHAFXjrqpPx1lxr4978w4CdgG8DjcBLePunh9NxWYj8e5KuyYraSdodOBhYCRiHt8o6yczCsg2CIAiCIOhmhDEcBF0UScsAz+A9jI/CPd1DgDsk7WRmN6SiVsOBvnh/4o+AH+LG46XAJrkptwNex1tI9QDOBm6VNKCdxmB/4KJ0zrHAH4FrJT2DG8LbArel/bdVOHdPvH/ybvjNgNfxNlT74G2k/o33WD4OuEXS8rg+TgaOSef+N4CkI/EbCxfiBvEq+E2E5dP8QRAEQZWoaynppkbn7kwZugOh59oRuq6MSvQUxnAQdF0OAZYCvmtmY9O2EZIeBM6WdCOwLJ67e6iZPZrGjJK0Et4zOc+CwMZm9hmApN7ANbhR+Fw75FwU2N3MRqZ538SN4s3N7BxJL6Rx75jZC81N0gKnmNnw7I2krwNHmdmFuW1fArcCPzSzJyW9k3a9YGZjJC2B90++zMwOTPvulzQBuELSsM7qxx0EQTC/0VWKhNXXR0/4WhB6rh2h6+oTxnAQdF0GAY/nDOGM6/Ew4IFm9hqwvqS6FJL8HWAgsBawcOG4VzNDOPF+eq7Gr5YnOmhegBfzb8xsBwBJS+Fh2d8Btky7i2vOWANYBLhLUv577+70PBgIYzgIgqAKNDRMYebMxk47f12dGw0TJkRP1o4k9Fw7QteVkemrHMIYDoKuS1/g3RLbP0rPSwJI2gHP110emAi8AHxR4rjituyXSo/2CmpmX+ReN0qqyryJz/NvJP0U+DNeLfwL3Ij9T9rdXGBMfXoe0cz+r7dTxiAIgiBHV/jB3tTUNeSY3wk9147QdfWp1o/VIAiqz0Q8DLpI//Q8XtLawLV4iPByZlZvZhsyp6d2vkHS4sC9uIH8faC3mf0ML4TVEpPS8w64EV18XFj6sCAIgiAIgmB+JYzhIOi6jAbWlLRCYfuOuHf4bWBN/O94qJl9ACCpJx72i6Su8DdezUrNA3Ev7/lm9pqZZd7tTdNztt7iOZ8EvgK+YWbPZg9gBu5VX7GKMgZBEARBEATzABEmHQRdl2F4+6CRqYXRBGBnYH1g1xSOnLVFukjSlXho9b7Aymn7YsDkmko9N5+m5w0kvW5mT7VjLgM+A46WNAOYjlfJzqpBZ3nKk9LztpJGmNkbks4ETkre5VF4FeqTgCa8NVPZ9F14AaZ3XjpcEARBl6S+V/ysDIJg3iK+tYKgi2JmH0laEzgdD+NdCDfats76DKdev/vi7Yd+hffOfRhvKXQ7sA7N58nWBDP7TNIwYE9gc0nLmNn0Ns71qaStgbOAf+CG/gvAusA9+HrvxnXwIO713QCvbH2spP/hNwv+BDSkMUeZ2afFc7XEZitENccgCIJSNDY20dgYSY1BEMwb1DVFFnYQBEG5LA582tAwpbPl6Bb06bMYoeuOJ/RcO7qDrruCMVxXB/369Wb8+Ki825GEnmtH6LoyMn0BS+ARhc0SnuEgCLI849ZalDeZWbvzfwutjZqjMZcPHARBO2jJOKlLf/UzZzbGD6wOJnQdBEHQ9QhjOAgCgHeAYqGuIqPx3sdIGgVgZoPacK5yQqSvAYa0Ye6a0KdPtVooB60Rum4/jY1NNDRM6XRvXRAEQRB0NcIYDoIAYEtg4VbG5Atx7dOOc61axpjx7Zi/wxkxdjLjps7obDGCoFXqey3AVgN606NHXRjDQRAEQVAgjOEgCDCzlysc/1o7zvVsW4/tKkycNoNxU6vZMSoIgiAIgiCoNWEMB0GVkDQGuB5v7zMEaASGAweZ2cQ0Zh3gZNw7+iVe+fgwM/sk7R8CXAHslcYtBKwNTAPOBdYCFsGrSp9kZrMqRUv6aW7uBfGw5iPM7NW0fxBeZXlD4PA072d4SPJRleQDF8OkJTXhVZp/jFeyXhCv7ry/mY3LHbcTcDDeL3g8cANwvJl91YY1HAOsDnwCnJh0fTGwEV4p+hwzOy937r54delt8IIKLwJHm9nIctcdBEEQBEEQzD/06GwBgmA+Y1/cYB0CHAFsDgyXVCdpXWAk8AWwPXAQnoP7sKRFcnP0xFsl7YYbjgb8EzeydwK2xnsO3yVpJQBJ6wGP40WwdgF2B5YHHpc0sCDjDcAjwBbA3/A2Q7tXYe2nJtl/A/wRD70+L9uZWkBdCzwH/AI3TA/A20ZVuoYb8RsJW+D6uRQ3kl8BtgKeBs6V9LM0dy/gIVx3R+MG+/vAvZLWr8LagyAIgiAIgnmM8AwHQXVpBAZnfWslfYL3+90YOBY33LbIvLCSngReA3bFvZoZp5jZ8DRmWdyTOssTLOlp4Hhm5/meDrwFbJab+368MNaJuPGdcbmZnZRePyRpG9yovKyda3/ZzHbJ3iRD9FfpdQ/gOOAOM/tDbsxiwG8lLVjhGq40s2FpzOfAk8DTZnZc2vYSbvCuiRvGOwErA6ub2VNpzD3AKOAMystjDoJ5mroS9eKzbaX2BdUldF07Qte1IfRcO0LXlVGJnsIYDoLqcmdmCCfuAmbgxvDqwFlAXa690LvA68Bg5jSGX8y9HocbzJdL2hi4D7jHzA6BWQblqsAJ+VBnM5sk6W5gs4KMTxTev497ndtLS/N+F1gauC0/wMzOBs5uwxoez73OwrCfyh03QRLAkmnTBsBHwHOF1k53A2dJ6mNmDeUsMgjmRVqryl1f37tGkgSh69oRuq4NoefaEbquPmEMB0F1+SD/xswaJY0HvoanJRyeHkWmFt5/npujSdJgPEd2W+D3wHRJt+O5xYviocUflZj3I2YbhBlfFN43Up2UiVLzZvfm6tPzx80cuySVraFUA/UpLchWDyxL822d+uN5xkEwX9LQMIWZM+du3V1X5z+uJkyYHL1vO5jQde0IXdeG0HPtCF1XRqavcghjOAiqS7/8G0k907bPgSa8CNaNJY4rGpJzYGYfAvukvNuVge3wnOTxeM5vE27sFelP12hTNCk9L5XfKKkeL7r1OB27hkl4CPbvmtn/XjvnD4IuT0s/oJqaWt4fVI/Qde0IXdeG0HPtCF1XnyigFQTVZTNJC+Xeb43fdLoTeB4YaGbPZg/gVeAEvJBWSSStIWmcpFXNrMnMXjSzY4CXgRXMbArwLLB9Mr6z45bAc4EfrfIa28IbuEG7ZWH774EReNXsjlzDaLwY18cF/W+E30yIpsFBEARBEATdjPAMB0F1WR6v8nxBen0acK+ZjZJ0FDBC0g14ReeewGHAasBJzU0IvIB7jq+TNBQPG94QWAU4P405Es8lHiHpYty4PBIvsHViNRfYFsxspqTjgYslfYznUgu/EXCRmTVI6sg1XAXsBzwg6VTgP3ie9uHAhWbWXPh0SfouvADT5444DYIuR32v+DcfBEEQBM0R/yWDoLrchOee3oznsF6Nt/LBzO5PBbCOB24BvsLbDG1oZk82N6GZfSlpI7za8vl4/uxbwJ5mdnUaM1LShrjReBPel/hfwO+zHr2djZn9WdIUvO3SHniBrTPSo0PXYGZTUmur04Az8T7DY/BQ83MqnW+zFaKARTDv0NjYRGNjxNUFQRAEQZG6pgg8D4KqIGkMMMrMhnSyKEHHsTjwaUNDS7W6gmrRp89ihK7bT0vGcF0d9OvXm/HjoyhLRxO6rh2h69oQeq4doevKyPSFOz9KFV2dRXiGgyAAQFIdHrrdGjPNLL6Kgy5BeD2DIAiCIGgrYQwHQQchqa6jjMYOmntnPLe2NdYDRlX53PMUrfVsDapHa7pubGyioWFKGMRBEARBEFRMGMNBpyKpCTjBzIZ2tiylkDQIeBhYz8xGtTTWzAakYxbG83ufxQtlVVumY/B82rMqOGYAs9sH7WlmfykxbBSex7wQ3r/4Obyt0V2FcQ9Lyr/f28wuLZwjYzqeQ/0kcIaZPV6QawwlQsslfRc4CNgY+DrwCfAYcJqZ/buZNZ4CHIUX5Nq/xP6hwPFmVlfcVykjxk5m3NQoQN3Z1PdagK0G9KZHj7owhoMgCIIgqJgwhoOgZZ4H1gBeq+CY/rght0tHCIRXnj6hjcc2Ar8CShnDg3BDGMDM7Nlk4AKcDAxvZs53C+/zY3sBywEHAI9I+qWZ3dGSgJK2Ba4DXklzvZfmOAh4StJWZvZA4ZgeeJuml4GdJB1uZi32bm4PE6fNYNzUmR01fRAEQRAEQVADwhgOghYws89wr+b8wmPAepL6mdn4wr7fAC/iLZuKvNNSxevWxkr6O14Z+q+SHkp6nQtJ3wauBe4Ftjezmbl9tyX5r5G0oplNyx26EW4w/yad57fAX8uUNwiCIAiCIOiGhDEcdCkk9QdOwXvA9sM9fSeb2V25Mf1wz+gWuBf2c2A0cLCZjUljRgFv4y2I9gWWxsN+DzazpyuQZxC5MOkUarsjcCDepkfAWOAkM7uuECp8laShufDpdXBP56rAl8DdwGFm9knaPwS4AlgLOA/4ETAO74N7dhqTxYIeL6ktIb+3A6sD25LzDkuqBzbA20CtUuGcrWJmX6U+w/finunmDNX98b7C++cN4TTHF5IOA9YH+uD9ljN2BV4xs8ckPQzs2cI5giAIgiAIgiCM4aDrIGkZ4BncUDwKmAAMAe6QtJOZ3ZAqHg8H+gKH4wbRD3Ej81Jgk9yU2wGv4wZWD+Bs4FZJA4qGVoX0By5K5xyL9829VtIzuCG8LXBb2n9bWtu6wIPASGD7JP9JeP7tqmY2Nc3dA/g7MAw3THcDzpL0spndh4dsP4Ebele0QfYG4H7mDpXeLq2luRsFPSSV+r5oqkCXI/Ew7bVp3lDdBHjezD4stdPMRqZ5ZiGpL7AVcEzadDVwnaQfm9nzZcoWzOPUtTsTvHuS6S301/GErmtH6Lo2hJ5rR+i6MirRUxjDQVfiEGAp4LtmNjZtGyHpQeBsSTcCywJTgEPN7NE0ZpSklYA9CvMtCGycheRK6g1cg3s+n2uHnIsCuyfDDElv4obk5mZ2jqQX0rh3zCx7fRpgwBaZ8SjpSTwXeVfg4jSuDjjRzP6axjyGG9dbAPeZ2ZOpeNX7FYQtF7kZ91rnQ6V/A9zUwjF/pbQBOwX4WjknNbMZksbj17A5lsdDtSthB7wl1HXp/W24Pvdi7s9EMB8S1b3bT319784WodsQuq4doevaEHquHaHr6hPGcNCVGAQ8njOEM67HW/4MNLPXgPUl1aWQ5O8AA/HQ4oULx71ayE19Pz1X45fzE+XOK2lRPDT5LKAu52F9F/dcD2a2MTzH3GY2TdInVZI5405gBilUOoWmrwvsh9+MKMUJwD9LbK/Uw14HtFT2dwbl9TrOsyseyj5N0pJp213AbyUdamaTK5wvmMdoaJjCzJmNnS3GPEldnf+4mjBhMk1RkLtDCV3XjtB1bQg9147QdWVk+iqHMIaDrkRf5q5MDLNzQ5cEkLQD7mldHpgIvACUqhxc3Jb9Wu7RXkHzlYrNrDF5a5ubt0/ad3h6FJlaeF9K7nbLnGFmn0m6h9mh0r8CXjOzV1OOdCnGmNmz7TlvuinQl9k3D0oxFlihhTkWBPqa2bj0/kfMznFuKHHIjsAlbZE3mLeIHwfto6kpdFgrQte1I3RdG0LPtSN0XX2q9gM7CKrAREqH0PZPz+MlrY1XG74VWM7M6s1sQ+b01HY1PsO9ocPw4lnFx5BOkOlmUlVp4NfAjTU45yDc6zu6hTH3AT+W1Fwo9ebAR5J+kd7vghdQ2wBYr/B4Ey+kFQRBEARBEARzEZ7hoCsxGjhQ0gqFUOkdce/w28A2+E2coWb2KYCknnioMZJ6mFlnx0sWqyBPlvQ8HuY9y7sqaRHgFrwgWCV9jKuxvruBaXhxsTWAnaowZ7Ok0PBj8erYt7cw9GK8+vf5kn5XaK20GB6uPR64R9JCwO+Au8zsoRLnvBY4WdLq7civLknfhRdgemd/ygLqe8W/sCAIgiAI2k78kgi6EsNwo2xkamE0AdgZb6WzawpHzqodXyTpSjzsdl9g5bR9MaCzc0Q/Tc8bSHrdzJ7Cq2OPkHQDcAPuIT0MWA2vKl0Jk4C1UoXqR8ys4oAZM5siaThwJPC0mZUKT8/zbUmrN7Nvopm92czYhYAV8WJWPwZ+kQ8xLyHXGEl748W6/iXpMuA/wEp4gbVv4UXRvpS0PVBP817t63Dd7kWuV7Skg0qMnWRmVzcnV5HNVogCFl2FxsYmGhsjZiwIgiAIgsoJYzjoMpjZR5LWBE4HLsQNqZeArbM+w6nX777AoXiu6zi8eNK2uMdxHWBEJ4g/i5STOwwP0d1c0jJmdr+kjYHjcW/wV3hF6w3b4LU8Bfey3gP8H24stoWbcR22VEU64xhmty4qcifusS81dgbwMfAIsG85rY7M7BpJbwEH4e2plsYjAx4Ffmlmr6ehu+B5wvc1M89/JI0Gtpd0cG7XuSWGv4O3ZCqLhoYp5Q4N2kGfPou1quswhoMgCIIgaCt1TZGFHQRBUC6LA5+GMdw81TJO6+qgX7/ejB8flTM7ktBz7Qhd147QdW0IPdeO0HVlZPoClsBr9zRLeIaDbknKM26tJXdTPme1KzK/rGNeI/raNk9jYxMNDVPCWxsEQRAEQZcnjOGgu/IOLbTwSYzGKyBXDUlNwAlmNrRKU3bKOqqNpKuBQWY2oMrzDgDeK2yejodXPwmcYWaPVzrviLGTGTd1RvsFnM+o77UAWw3oTY8edWEMB0EQBEHQ5QljOOiubAks3MqYzi7EVQ7zyzo6mpPxqt0AvYDlgAOARyT90szuqGSyidNmMG5qONuDIAiCIAjmZcIYDrolZvZyZ8tQDeaXddSAd4qFyiT9HfgX8FdJD5lZizklQRAEQRAEwfxFGMNB0IlI6o9Xhx4M9ANeBk7OqmenMf3w/rpbAP2Bz/HQ54PNbEwaMwrvw/wW3mpqabxa9cFmlrWjKlemgXibq7WBqcAV6bzfMrNBaUwTMBT3TH8fOM3MTkztno4Gfoa3ufoAuAY4Mev/LKlPmn9rPN/5L3jv6KIcW+NVs3+At5O6GTjKzKpSvcrMvpJ0PHAvXlX7r9WYNwiCIAiCIJg3CGM4CDoJScsAzwBf4n2IJwBDgDsk7WRmN0iqw8N7+wKH4y2GfoiH/V4KbJKbcjvgdWB/3Lg8G7hV0oByC2glw/tfeDukXfDviBPxvORiC6ij8D7FBoyRtDIwEvg78Gvc0N0Bbyf1BnCTpB648TkAb481AfgTbjx/mJPjd3g/5hvwNk0DgFOB70sa3Jbeys0wEmjEDf8whqtIXWtl3co8vr3zBC0Teq4doevaEbquDaHn2hG6roxK9BTGcBB0HocASwHfNbOxadsISQ8CZ0u6EVgWmAIcamaPpjGjJK0E7FGYb0Fg4yzcV1Jv3Cu7Cu4lLocDgN7AKmb2YZrnSeDNEmMfMbNh2RtJOwEPADvlvMAPAFvhBbxuAjbFDd9NzezeNGYkMCY3Tx1wBnCvme2Y2/4W8CCwGbPzf9uFmc2QNB7Xc1Alqlltu76+d9XmCpon9Fw7Qte1I3RdG0LPtSN0XX3CGA6CzmMQ8HjOEM64HrgKGGhmrwHrS6pLlZG/AwwE1mLuwlmvFvJe30/PlVgm6yeZZnlpzWyspMeZu4XTi/k3ZnYdcJ2kXpK+m2RdBf+eyWRdB/gKuC933BRJI4Cfp03CC1ydKin/HTUa7xU3mCoZw4k6IEofV5GGhinMnNnYrjnq6vyf/oQJ0VOxIwk9147Qde0IXdeG0HPtCF1XRqavcghjOAg6j77AuyW2f5SelwSQtANwGrA8MBF4AfiixHHFbZk1Mlc+bgssBTxfYvs45vaefp5/I2kR4EJgJ9xL/R7wON7KKDOk+wITS4Q5/y/3uj49/zk9iny95SWUj6RFk0zvtzY2qIxq/bNuaqreXEHzhJ5rR+i6doSua0PouXaErqtPGMNB0HlMpHR4bv/0PF7S2sC1wAXA2Wb2AYCkM/E812rzPrBMie1Ll3Hs+Xje8vbAg1mhK0kf58aMB/pJ6lnIY67PvZ6Unv8IjCpxnoYyZCmXQUBP3OscBEEQBEEQdCPCGA6CzmM0cKCkFQqh0jvi3uG3gW1wz+5QM/sUQFJPPFQYST2y/NwqynSkpGXN7KN0jv7AGsBTrRy7NvCwmd2ZbZD0E9zbnHmnR+JFt7YBbk1jFgI2Ynao8ht4Aa8Vzezs3Fz9gevwwmHvtH2Js+ZbAK9WPQ64vZJj+y68ANOrqfX5hPpe8S8lCIIgCIJ5h/jlEgSdxzA8pHikpKF4ZeWd8bzdXc2sUVLWFukiSVfiIb37Aiun7YsBk6so0wXAfsB9kk5M244FFmJ22HVzPA1sL2kvvKr1yngl6KYkJ2Y2UtJ9wBWSlgbG4kW7lsINYMxspqSjgcskzQTuxkPGj8VzicstBpbn25JWT68XAlYE9gJ+DPzCzEqFnTfLZitEAYvmaGxsorExYriCIAiCIOj6hDEcBJ2EmX0kaU3gdDzXdiHgJWDrrM+wmY2StC/ehuhXuBfzYWBb3Ju5DjCiijJNkrQeHvJ8HW5oX4znI3/e0rF4dewF8bZPC+M5wyfjfYi3zIVGb4tXiz4R6IX3D/4L7i3O5LhC0md426U90rkfA3Yws/fasLRj0gNgBm54PwLsa2alcqRbpKGhKq2O50vCGA6CIAiCYF6hrimysIMgSEhaDehrZvfkti0A/Ae4ycwO6TThugaLA5+GMTw31TaC6+qgX7/ejB8flTM7ktBz7Qhd147QdW0IPdeO0HVlZPoClsA7kTRLeIbnMSTVlajE2+XnDjqXlGfcWgvyJuCbwM0pRHoUHt68Bx6mfHkHilgR5a6nUKSralSzj+78QmNjEw0NU8IrHARBEATBPMN8aQxLagJOMLOhnS1LKSQNwkNd1zOzUWUeszAeTvsscEMHyHQMMA04q4JjBuChsHmm49V+nwTOMLPHC8e09kv5DDM7opmxM/G82oeAI7KiU5JGMbtHbXNcY2ZDcnL8FDgwHbcU8CFe3Om0UmG4ktbCw4DXwg3DbPwwM3u9MHYMntv7AzP7T4m55vp8pvmPwAtV9cbDoR8ATjGzudovtUGefpTXb3hFYB9cN8cX9r0kqdlrmzvf4ngBsAWB5XOFuAYw9+elFOul8PAxwKj8dUvz/D/giTLWM1oSeGGv1c3s2RKyljxHa4wYO5lxU2dUcsh8TX2vBdhqQG969KgLYzgIgiAIgnmG+dIYngd4Hjd6XqvgmP7AQcAuHSEQcBJwQhuPPRkYnl73woscHQA8IumXZnZHYfxfgSuameuDFsYuBAzAcz9HSvq+mU3DjbfFc8dkvWn3yW37JHuRcnDPw29IHIEbkt/BW/n8UtL6ZvZSbvzheJ/f+/Br8D9gpTT/85J2MbObCnL3TnJv1Mw6ZyFpA+Be4DZgd7y10LeBw4CnJa1mZu/kxrdFngfx69QcW5CMXzO7VNK9zM75reTaAvwW+BRvWbQbcEra/j/8c5/RP605fw5o4e9C0o7AlXiBrtvSnEsDWwM/wguA/S0NnwxcluS4WtKPzeyrFnRQNhOnzWDc1A5xOgdBEARBEAQ1IozhTsDMPsO9a/ML75jZHOuR9HfgX8BfJT2U1pzxfnF8CxTH/kvSf3Hv8IbAcDObw3hKhZcodY7kUT0fuMjMDsrtGiXpDuAF3Nj6SRq/Be6RH2pm+ZsFoyVdC9yIG1ovm9mruf2TgMGS/mBmrYUXHwU8ZWa/LsgzAm8hdAheQbpd8pTyjGZI+kEzuyq9tuA3bO7FIw3+IOk0M2tMNy6ezM0zoLlzNCPjj/Brcy2wR6Gl1MmSzsNvDowwswfTMeCG+fdxY//o1s4TBEEQBEEQdA96tD5k3kdSf0lXSvqvpKmSnpa0VWFMP0kXSxor6StJEyXdnvvBjqRRkq6QdLik/0j6UtJjkn5WoTyDJDWlcGkkDZX0tqTNJf1b0jRJb0raKe0fwOzw0qtSaGc21zqSRkv6Isl8jaSlcvuHSJohaTVJTySZx0o6LDcmi2s8voww5rJIHrjj8XDhX1VjzhwN6bktsv4RN1SPKu4ws09ww/MOSVkI7vF439sTS4yfjufTzgQOL+y+C8+5PVvS8q3ItCwl/hbN7H/A/ni4dEZb5akaLV1bSd8DVgP+CVwPrABsUqVTH4VXlT6gmd7KfwL+CxxX2P4ibkD/Sd73OAiCIAiCIAjmf8+wpGWAZ4Av8R/TE4AhuMGzk5ndIKkOD9PsixsRHwE/xMM3L2XOH/Pb4SGa++MGzNnArZIGtLNYT3/gonTOsbjRdq2kZ3BDeFtmh5Telta2Lh7+OhLYPsl/EvCwpFXNbGqauwfwd7yv7dF46OpZyXt4Hx66+gQthy+3hZF4b9q109wZPVKF4rkws2IiZn5sT9y4Og03CB+sRJh0nTcG7mqur6yZ/T03vh/wU+Cs5gqLmdlESQ/gYbp5mnA9/xsvPNWSQfhP3FB7GG9nNCrLEzazWXprpzzVprlruyswEfinmU2T9Dbez7dd7Z8k9cBDzu9r4dp9Jel24ABJ9WY2Ibf7IGAwfjPpp9UKlw7mpq61smYVzlOt+YLShJ5rR+i6doSua0PouXaEriujEj3N98Yw7ulbCvhuVnAJGCHpQdxrdyPumZsCHGpmj6YxoySthHva8iwIbJyFhkrqDVwDrAI81w45FwV2N7ORad43caN4czM7R9ILadw7Zpa9Pg0wYIvMEJf0JJ5zuSveHxa86u6JmWEl6THcuN4CNy6eTOGklYQvt4qZzZA0HtdvnmPTYy4kLWVm41sZOw3YtA0GTT8877XcPrUD0vOYVsa9DWwtqY+ZZV5rzOxdSUcCF0ja3cyau9FwLF4EazdgEICk93EDcpiZWTXkqSalrm26abEj8LcUEg1wNXCCpOXN7L/tOGVfPC98TCvj3sY/79/Eb3xl8jZI2hP32B/H7J7DQRXpiCrb9fW9qz5nMDeh59oRuq4doevaEHquHaHr6tMdjOFBwOM5QzjjeuAqYGDKOV1fUl0KSf4OMBCv1Ltw4bhXi/mv6bkavwKfKHdeSYsCq+PVn+ty3tN3cc/1YGYbw3PMnTx2n1RJ5taoY+5w5suBvzQzflILY3viHvTdgfskbZ3vh1sGmde5Z5njs/tK08uct9R9qIvwaIJzJN1rZu8XBySjfk9JxwObAesD6+E3YnaR9Bszu61K8lST4rXdHFgGuF3SkmnbXXi0wu7MXZ260nNBO9ZuZndLuh44XNJtZvZ8O+QJStDQMIWZM0tFsFdOXZ3/058wIXoqdiSh59oRuq4doevaEHquHaHrysj0VQ7dwRjuixuIRT5Kz0sCSNoB97Quj4d5vgCUCscsbst++bU7/zof/mlmjclb29y8fdK+wymdHzq18L6U3B2aM54M9r7MNuwzPmypmFNrYyXdDbwKnAGUbQwn7+BkPNS6OZkXAxZKHtXsBsqAVqb+FjDZzCaWOGeTpF2ZHS69aQvyfYQXiLoyybIeftPmEnlxr3bLUy2auba7pueRJQ7ZTdJJJcLgy2U8Hr0xoJVx30rPc7W0ShyAF167St5eK6gy1f4n3dRU/TmDuQk9147Qde0IXdeG0HPtCF1Xn+5QQGsic4fpgnsYAcZLWhsvsHMrsJyZ1ZvZhszpqe1qfIZ75YYBq5Z4DOk0yWYzCPfCjq7mpCkk/AXcg18p9wHrSerVzP4/4J+JH5vZx3j141+mnNW5kPfU3Qj3gDYn7zt4vvomyTDOH7+apHGSBpc47mHc87800K9a8lSJQeSubcrN3wxva7Ve4XEU8A1gy7aeLOVI3w1sKulrpcZI6gn8AnisEGqfn6cBz2H+Ic2E6gdBEARBEATdg+7gGR4NHChphUKo9I64d/htYBv8xsBQM/sUZv2wHpxe92imem0tmaM4l5lNlvQ8HuY9y3MqaRHgFrwgWCV9jKu6vhS2fSwwDri9ynMviPeUfasNh58D/BIvRHZYfoekZdO213IhtEPxNkGn4j2J8+N74gXWFsGN1pa4EA+XHlbY/iYern6gpJElPmfCP6dZn+RqydNmmrm2O+HfJ+eZ2VuF8U8lWfekfZ+FU3Fj9zJJvy9RsO5UvN/yAS1NYmZ3SvobcCTQpkJafRdegOmd/Y3Qhajv1R3+lQRBEARBML/RHX7BDMN/qI+UNBQvqrMznpe5awpHfjqNvUjSlXj4577Aymn7YsDkmko9N5+m5w0kvW5mT+EetxGSbgBuwD11h+GtbU6qcP5JwFqpQvUjzVUrboZvS1o9vV4IWBH3vv0Y+EWJ6r/L5cYXmWJmL7cwtg9+bQTsUIGMgPcelnQs3pf2//DiZ+OBH+AVvBch3QRJ4++TdChefXsVPM/8w7TGvfHCabuZ2UutnLdR0i54uHR+e0Oa/1LgEUmX42H9S+CG3xBgh+x6tEOe70k6qIRoj5vZ0yW2Z5R7bXcBnisawknmqZJuwfOfVzSzcguYFed5WdIQfM3flvRnvBha/3T+jYDDy8wj3x/YAM9xrpjNVogCFkUaG5tobIzYrSAIgiAI5h3me2PYzD6StCZwOu6dWwh4CdjazO5KY0ZJ2hc4FO+bOg54GK+4fDuwDu1sDdNezOwzScNw79rmkpYxs/slbYwXJroF93I9B2zYhqrQp+DevnuA/6P5nMtSHMPs6rwzgI+BR4B9mylStFt6lOIl3KArNbYJvynxMrC9mf2jAhlnYWanJK/6fsB5+M2P/+Itjk4tVj02s2GSHsfb85yNVyf/H97/d7dUgK2c874t6WgK3mEzuyy1IDoAz1uvT+t8CljfzEZVQZ4sfL7IsUBLxnCr11bSasD38JsJzXEtnlO8JwWPdiWY2U2S/g0cDJyAG8KfJJnWKvdzn1pQ7U1qU1YpDQ1T2nLYfE0Yw0EQBEEQzGvUNUUWdhAEQbksDnw6PxjDXd14rauDfv16M358VM7sSELPtSN0XTtC17Uh9Fw7QteVkekLj7T8rKWx871nuJaknM3W2tk0lch17FLML+sIgo6iI/rp1prGxiYaGqZ0aYM4CIIgCIKgIwljuLq8QwttexKj8Uq8XZn5ZR1dDklNwAlmNrSzZelKSLoaGGRmAzpo/h54XvHOwPeBBfHieVcBl6Vez2UzYuxkxk1ta5eozqe+1wJsNaA3PXrUhTEcBEEQBEG3JYzh6rIlsHArYzq7EFc5zC/rCIKsJ/LdwOrAJcCZeH79+njV7U0lbVOJQTxx2gzGTY3AiCAIgiAIgnmZMIarSKEK8jzL/LKOIEgMA9bCPc/5Alv3S3oJ+BteIfuCzhAuCIIgCIIg6BzCGA6CTkRSf7yS92CgH14p++Ss0nka0w+vnLwFXj35czxM/WAzG5PGjMLDft/CW08tjVcWP7iV1kmlZBqIG5BrA1OBK9J5v2Vmg9KYJrzn8ZZ42PFpZnZias11NPAzvCXZB3j7qhOzHsqS+qT5t8Zz0/+C9/kuyrE1Xu36B3jrr5uBo8ys7OpVkpbCq5FfXqrStJndKOknSc4gCIIgCIKgGxHGcBB0EpKWAZ4BvsR7Rk/A+wrfIWknM7tBUh0wHG//dDjwEfBD4GS8N/EmuSm3A17He+j2wNsu3SppQLnFzpLh/S+8hdIu+HfEiXgOedGYPAo4EjBgjKSVgZHA34Ff44buDnjrrzeAm1Lu7r3AALyV2QTgT7jx/GFOjt/hvbNvwFs7DQBOBb4vaXAFfbA3SGu4u7kBZnZYmXPNl9S1Viqvk8jk6qryzS+EnmtH6Lp2hK5rQ+i5doSuK6MSPYUxHASdxyF4j+DvmtnYtG2EpAeBsyXdCCwLTAEONbNH05hRklYC9ijMtyCwsZl9BiCpN+6VXQX3EpfDAUBvYBUz+zDN8yTwZomxj5jZrJ7JknbCex3vlPMCPwBshRdbuwnYFDd8NzWze9OYkcCY3Dx1wBnAvWa2Y277W8CDwGb4DYJyWD49v1fm+G7FvFAVu76+d2eL0C0IPdeO0HXtCF3XhtBz7QhdV58whoOg8xgEPJ4zhDOux6scDzSz14D1JdVJGgB8BxiI58AWi5y9mhnCiffTcyUWz/pJplleWjMbK+lx5m639WL+jZldB1wnqZek7yZZV8G/ZzJZ18GLV92XO26KpBHAz9MmAcsBp0rKf0eNxnvFDaZ8Yzgr+dyzzPHdioaGKcyc2djZYpSkrs7/6U+YED0VO5LQc+0IXdeO0HVtCD3XjtB1ZWT6KocwhoOg8+gLvFti+0fpeUkASTsAp+FezonAC8AXJY4rbsusnLnycVtgKeD5EtvH4V7qPJ/n30haBLgQ2An3Ur8HPA5MZ7Yh3ReYWCLM+X+51/Xp+c/pUeTrLS9hDrIbDSsAr5YakPK2PzGzebdXUjvo6v9Um5q6vozzA6Hn2hG6rh2h69oQeq4doevqU8mP5CAIqstE5jYwwYtVAYyXtDZwLXArsJyZ1ZvZhsATHSTT+8AyJbYvXcax5+N5y9sDvc3s22a2E24MZ4wH+kkqemrrc68npec/AquWeBxZhiwZD6Xzb9bCmHuAZyuYMwiCIAiCIJgPCGM4CDqP0cCaklYobN8R9w6/DayJ/50ONbMPAJIhOTi9rvbf8GhgDUmzjPTkOV2jjGPXBh42szuzis+pUvNSzP6uGYlHpGyTm38hYKPcPG/gBbxWNLNnswde8fl04EflLsbMJuHVsP+QZJmDlOe8Mh6aHgRBEARBEHQjIkw6CDqPYXhI8UhJQ/HKyjvjebu7mlmjpKwt0kWSrsTDjPfFDTjwfODJVZTpAmA/4D5JJ6ZtxwILMTvsujmeBraXtBde1XplvBJ0U5ITMxsp6T7gCklL42HMB+AG88dpzExJRwOXSZqJV4JeMsmxHOUXA8s4Cvcoj5J0ETAKD+PeFC9C9k/gvEom7LvwAkzvmqm2ZVHfK776gyAIgiAI4hdREHQSZvaRpDVxb+eFuMH5ErB11mfYzEZJ2hdvQ/QrPHf3YWBb4Ha8INWIKso0SdJ6eMjzdbihfTGej/x5S8fi1bEXxNs+LYznDJ+M9yHeUlLP1OJpW7xa9IlAL7x/8F/IeYvN7ApJn+Ftl/ZI534M2MHMKqoMndY0CG859WtgbzyH+c207a+V5gtvtsK8X82xsbGJxsZIPAqCIAiCoPtS1xRZ2EEQJCStBvQ1s3ty2xYA/gPcZGaHdJpwXYPFgU8/+2xqZ8tRMY2NTeS/77u6MVxXB/369Wb8+Kic2ZGEnmtH6Lp2hK5rQ+i5doSuKyPTF7AE3omkWcIzHATdgJRn3FoL8ibgm8DNKUR6FB7evAcepnx5B4pYEeWuJ3miq87iiy/SEdN2KI2NTTQ0TOnSBnAQBEEQBEEtCWM4CLoH7+DthVpitJkNklQP7INXc/4KeBJY18xeL+dEqR/ye8AuZnZ1myVumbLWg/dyRlITcIKZDa3GyUeMncy4qfNOJ6b6Xguw1YDe9OhRF8ZwEARBEARBIozhIOgebInn8bbEZAAzuxS4tMMlah8trWcP4A/Anh118onTZjBuaoc4nYMgCIIgCIIaEcZwEHQDzOzlzpahmrS0HklbpDFWO4mCIAiCIAiCeY0whoN5Hklj8D6xiwFD8BZAw4GDzGxiGrMOXtl4VeBLvF3PYWb2Sdo/BO9Hu1catxDeN3cacC6wFrAIXu35JDObVcFZ0k9zcy+Ih+ceYWavpv2D8ArQGwKHp3k/A64Bjqo0r1XS1niboR8Ak/BqzEflevsOBX4DHAmcBKyE9+7dG88LPh/4IR5qfKCZjcwdNwRvrXQ2nj/877SWUZXIWELmb+IVpDfGK0g/gev/hbR/AB5avT1e8XljYDpwK34ds7UtmNa0I1CP6/oG4FpgxST/8WlsMTR6cUlX4NWsFwTuBfYzs3HtWVsQBEEQBEEwb9KjswUIgiqxL26wDgGOADYHhkuqk7QuMBJvD7Q9cBCeS/qwpHwlpJ54C6PdgIMBw3vQLob3A94a7wV8l6SVAFIbosfxYk67ALsDywOPSxpYkPEG4BFgC+BveNug3StZpKTfAXfgxu02wNAk252S8gWllgfOAU7BWzL1AW4BbsSN/m2SzDcVdLAUblj+OR33Bd5zeJVK5CzI3A/X0U9wQ/u3+HfPvyT9X2H4ZcCYJN9Z+LU4prD/ILwV1TZ4q6l8Ya8rgL+m12uk9xkH4jc5foXfKNgKbxvVrairm3ce85q88+oj9By6nh8foevQ8/z2CF1Xrq9yCM9wML/QCAw2s08BJH2C9+HdGPeiGrBF5oWV9CTwGrArcxpEp5jZ8DRmWWAgOU+wpKdxz2OWr3o68BawWW7u+3Gv64m48Z1xuZmdlF4/JGkb3DC+rJwFJmP3DOBeM9sxt/0t4EFgM9wjDrAosI+Z3ZvGfC/JupuZXZm2HYcbyAJezB23l5ldl8Y8BLyL32D4TTlyluBg3Iu7lpmNTfPeA7yO6+hXubHDzeyw9HqkpMG4jo6U9G38ZsdhZjYsjblP0jL4dcbM3pf0fnr9ZEGOZ8zs97m5V8NvmnQb+vRZrLNFqJj6+nm/p/O8QOi5doSua0foujaEnmtH6Lr6hDEczC/cmRnCibuAGbiRtDruZaxLPXPBDbzXgcHMaQy/mHs9DjeYL5e0MXAfcE/Wa1fSYnho9An5UGczmyTpbtw4zfNE4f37uNe5XAQsB5yaWwd4qPBnaS3Dc9sfL6wF4Knctgnpecncthm49xgAM5sqaQRzr6USNsD1+kFO7kbgHjzcOU8pHQ1Ir9cD6oB/FMbcSDKGW+GRwvv3mHPt8z0NDVOYObOxs8Uoi7o6/6c/YUL0VOxIQs+1I3RdO0LXtSH0XDtC15WR6ascwhgO5hc+yL8xs0ZJ44Gv4SG5h6dHkamF95/n5mhKnslj8DzT3wPTJd2O5xYvihtnH5WY9yPmNrS+KLxvpLJUhfr0/Of0KPL1/BszK9VkfEor5/jIzIo9gz4G+pYlYWnq8bzl6aV2Slo097YlHS2VkydPuTm/xbU3Qqu9iuc75rV/ok1N857M8yKh59oRuq4doevaEHquHaHr6hPGcDC/0C//RlLPtO1zvGjUueQ8njmKxtccmNmHwD6S9gVWBrbDQ4bH4zm/TcCyJQ7tn8ZUk0np+Y/AqBL7G6pwjvoS25ZhbgO0Eibh3uvDmtk/rcx53s/J85/c9qXbJlYQBEEQBEHQnYkCWsH8wmaSFsq93xq/2XMn8Dww0MyezR7Aq8AJeCGtkkhaQ9I4SauaWZOZvWhmxwAvAyukCsfPAtsn4zs7bgk8z/XRKq/xDdwoXbGwlg/wfOAfVeEci6SQcABSca3N8AJkbWU0HuL9ZkHunfAc5nKraT8GzAR+Udi+beF9NAAOgiAIgiAIWiU8w8H8wvJ4lecL0uvT8EJToyQdBYyQdANe0bkn7qVcDW/T0xwv4J7j61LboY/w9kir4O2JwKsS35fmvxivVnwkXmDrxGou0MxmSjoauEzSTLw91JJ4gbDlgOeqdKqr03k+xr3Qi+Gto9rKMNzwfVDS2Xiu8q+BP+DFtcrCzN6VdCVwWrrx8RJuGG+ZhmTJsJMAJP0WeNLM3muH7CXpu/ACTJ83Um8BqO8VX/VBEARBEARF4hdSML9wEx4mfDOeG3o1cDSAmd2fvJ3H49WTv8INxw1LVByehZl9KWkj3Ot6Pm54vgXsaWZXpzEjJW2IG7434SG//wJ+n/UZriZmdoWkz/AQ7T3wMPDHgB2qaPTtjYeVL53mXtvM3m7rZGb2oaQ18RsUl+J9ht8kV9m6AvbH13wYsDjusT4ZOI7Z+d634sb3NXhrpX3aKntzbLbCvFfNsbGxicbGSDQKgiAIgiDIqGuKLOxgHkfSGGCUmQ3pZFHmaZL3+3gz65JFpST1BTbFPf4TctvPAnY1s1L5ztVmceDTzz4r1l1rG42NTdTqO3heM4br6qBfv96MHx+VMzuS0HPtCF3XjtB1bQg9147QdWVk+gKWwDuuNEt4hucjJNWZWYf8iXTk3N2d1D+4Z6sDYWZnXgNJPSijzkCJatTV4gvgAuAFSefhnuA1cG/xaR10zpIsvvgiVZmnsbGJhoYp85SRGgRBEARBML/Q7YxhSU14X9ihnS1LKSQNAh4G1jOzUWUeszAeyvssnhNbbZmOwcN/z6rwuGZ13dw6Uy7onnj/2f9Lm9/G13WJmX1RYg4otBXKjRmI9xMGLzw1pnBcc2xqZveWWoekUcDPgSfMbM1mznsTnhd7TeaxTh7sFQpDpwGfUl5F5CZJn+MhxueZ2fUlzrslHha8Kp7r+1/gn8C5ZvbfNGYRPP/5UTPbvBn5l8GrN59mZsfl1twqkkbTNv20do6n8J7FJwO3499f7+Ah0/le0XNEC0i6Gti5FbFHm9mgVsbMYsTYyYyb2j6bv77XAmw1oDc9etSFMRwEQRAEQdAJdDtjeB7gedzb9VoFx/QHDgJ26QiB8CJTJ3TQ3LNIVZjvwVsY/RnPA20C1sF7/e4saTMze79waCMwtplpf9PCKffF9V2K15vZnj/n6pKWK8ojaTFmF3UqMoI5i3b1wqs1HwY8QMpzBi7DjdnTc2M/wFsfHYwX9ZpoZiNy570YN4RvwvOJG4DvAwcAQyT90sweNrOpyRjdVdJSZvYJQDL2h6bpdsC91fmc3leBs5tZ1xfAu+n12bRdPy/QfI7v5JSHvUXOcP4S+EsrHvOT8FzljGOBHzNnVeoWQ2iKTJw2g3FTo2h1EARBEATBvEwYw10MM/sMaLao03zOFbjxtoaZ/Tu3/X5J1+HFnG6QNKhg/DwG/ELS3iVCdH8NvIhXgC7yWksFtFrh+STrr/BiU3m2xIt4ler7+0mJc46SVI/fzBhiZv+TNBk3/q4uTiDpHrzS8xDcuCb1Qd4nHX9NbvjDkq7BbzL8XdIPzGwc8FfcYN6eglc1sTMw0szG5LaNLyVPCfmg7fr5rIJr8mk6x/HMvokwF2b2Du5BzuT7BJjWjmsfBEEQBEEQzAd0+z7DkvpLulLSfyVNlfS0pK0KY/pJuljSWElfSZoo6XZJA3JjRkm6QtLhkv4j6UtJj0n6WYXyDJLUlEJ5kTRU0tuSNpf0b0nTJL0paae0fwCQVRG+KoWHZnOtI2m0pC+SzNdIWiq3f4ikGZJWk/REknmspMNyYzKj8/jc66oj6fvAdnhY7r+L+83sTdyjty6wXmH3zbjHdP3CnCsD3wX+3gEiTwGG48ZekV/jVasriaN9FqgDvlnG2Kl4eHUTgLzH8THAfQVDGAAzmwzsDvTDveGY2dO4p3eH4nhJqwA/xA3mtlJt/ZTiReBa4E+SftLOuYIgCIIgCIJuRrf2DKe8yGfwUMuj8P6nQ4A7JO1kZjek4kbDgb7A4Xiu5Q/xvMVLgU1yU26Hh9fuj99oOBu4VdIAM2tPTGV/4KJ0zrF479drJT2DG8LbArel/belta0LPIi3ntk+yX8S7ilc1cyycrg9cGNxGO5d2w04S9LLZnYfHrL9BG4YXdEG2XtIKvU5KxaMyvR4Vwtz3YyHT28NPJTb/mp6/Aq4P7f9N8Ao4H/NzNezGdmayrxeN+Pe1lmhwJIWxyseD8bDn8tF6fmd3La6gnwL4DnHxwG9gevS9lWAZWmhZ7KZvSHpJVx3x6XNVwLnSPqWmb2bG/57YCKel5unKE+eUsW92qKfSs9xUJrrKkk/NbOvmjm2S1PXJet3dy6ZTkI3HUvouXaErmtH6Lo2hJ5rR+i6MirRU7c2hoFDgKWA75pZlnM6QtKDwNmSbsSNjCnAoWb2aBozStJKeJhpngWBjVOoM5J6471OV8H72raVRYHdzWxkmvdN3Cje3MzOkfRCGveOmWWvTwMM2CIz7CQ9ieci78rs0Ng64EQz+2sa8xhuXG+BexqfTGGv77cxrPTY9GiNFdPzmOYGmFmDpInAgBK7bwYOLIRK/xo4tYVzPtjM9leBH7QorTMc/2zkQ4F/gYcwP9rMMUVjb2ncKNwLuNnMxuf2rQtMLxzfBLwM/MrM/pm2taq7xNu44ZhxHZ6T/Dv8RgpJth2A681sWuH4UvJk/Ar39uZpi34qOkf6TOyJ30Q5DveQz1P06bNYZ4vQpamvn/d6Os+LhJ5rR+i6doSua0PouXaErqtPdzeGBwGP5wzhjOuBq4CBZvYasL6kuhSS/B1gILAWsHDhuFczQziRFQ6qxq/dJ8qdV9KiwOp49ee88fUu7rkezJx5orPmNrNpKaeyWr/QLwf+UmL7T5izqFF2D6c5QyhjRm5snpuBE/FQ6fslrQZ8A7gV94aWYi9K36Qoq4lsKkR1N3Mae7/BjdqmdBOhyO/TI88M3KNfLBz1PF5ZG7xa9in4DZftzcxy49qkOzP7JMm/A8kYxj30S1M6RDovT5F3ihvaqJ+KzpHOc7ek64HDJd1mZs0VReuSNDRMYebMxs4Wo8tRV+f/9CdMiJ6KHUnouXaErmtH6Lo2hJ5rR+i6MjJ9lUN3N4b7MrsCbp6P0vOSAJJ2wD2ty+Phoy/g1XOLFLdlv3DbnZudbylkZo3JkGhu3j5p3+HpUaRo7JWSu1r55B+a2bPFjZK+Vtg0Jj0PAN4qNVHytC9FicrRZvampBeZHSr9a+D+5DlsTjYrJVuF3AzcLmk5XK8b0rJ38p/MrszdhOt+TC5sPc/kvHySngL+DTwg6cc5L/KY9DygFVm/xdy6uxL4Z5rvedxQf6ZU3nZRnjKpVD9tOQd4xewNSeHSbTi+U4l/bM3T1BT6qQWh59oRuq4doevaEHquHaHr6tPdC2hNxMOgi/RPz+MlrY0X6bkVWM7M6s1sQ+b01HY1PsMNrWF4v9niY0inSdY8Wa5wqYJLGdvin9k7m9l/M15VesE0z43VE69Z7gUm4/ni2wLvmVlLIfETzOzZ9HjOzF5vxhCei1QFel/8pswFuV3PAR/Sgu4kfQtvJ1TU3b3p2N9JWhLYivYVzipSqX7ahJk14J7+H1JeWH4QBEEQBEHQzenuxvBoYE1JKxS274h7h98G1sT1NNTMPoBZ1XsHp9ddQYdzFHtK1YOfx8O8M8PrWTwX9gQ8PLwSOjyGM4X93ggcVaoysKQVgTPwmxAPFfcn/o5XlT4a9/o3ZzRXjZRXewdu7G1PBxvgZnYLbmD+VtLP07ZG/LoOlrRX8RhJi+Ae4E/xAmT5+Wbiee2/xA3hmdVcQy31Y2Z3An8DjsQjCIIgCIIgCIKgWbp7mPQwYCdgpKSheDXpnfG8011TOPLTaexFkq7Ejax9gZXT9sVwz1dn8ml63kDS62b2FF4de4SkG4Ab8OrNhwGr0ULV4WaYBKyVKlQ/UqKib7XYG8+N/Zeki4EHcONsTeBg/AbFb5LxNxdm9m6qsH0UcJuZTWnlfN+T9GUz+/5XIpe8OW7Gw58b8UriHc1BeBGtC1J480wz+4uk/wMuSUbyzXjkw8A0vj+ea/xhifmuwg3Io4F/FPLe8ywuafUW5HqmmSrcleinrefI2B/YAFimlfO0i74LL8D0dt4iqu/V3b9+gyAIgiAIOpdu/WvMzD6StCZeUfdCYCHgJWBrM7srjRklaV/gUDwMdRzwMB7yeTuwDjCiE8SfhZl9JmkYXnhoc0nLmNn9kjYGjscr8H6Fh9Nu2Iaq0Kfgoaf3AP8H/Kd60s/GzD6VtCFe7XoI8AfciH8Lv0YX53Onm+FmPBT8pjJOeXEL+87HjchyeAC/YfAfM3ujzGPajJmZpPPxmxt74223MLODJd0L7Adcgue8/xc3RM8zs5LXzczekvQvvJLz7i2c+ke0nB7QB9dDkUr009ZzAGBmEyXtTWox1lFstkJ1qjk2NjbR2BjJP0EQBEEQBJ1BXVNkYQdBEJTL4sCnDQ2tBR2URxjDzVNXB/369Wb8+Kic2ZGEnmtH6Lp2hK5rQ+i5doSuKyPTF7AEXkupWbq1Z7iWpDzj1lpAN7USAtrpzC/rCIJaEMZuEARBEARB1yWM4drxDlAs1FVkNJUXt6o188s6uh2pT/Z7wC5mdnUL48YAo8xsSAfKcTiwMZ4jPhEP4b/QzO7PjTsTT0/oa2af5rYvhacrAHzdzD7K7esHfAwcb2YnpbX0BX5QKkxcUhNwgpkNrWQNffqU14a7sbGJhoYpYRAHQRAEQRB0QcIYrh1bAgu3MqazC3GVQ0vruCw971kjWYKO4Re0ElLSViRtgOfavw+cCbyOV37+HXCfpPPM7OA0fCTwR2B14L7cNBsDnwO90utrcvvWwSMX7s9t6w1cAWxUrXWMGDuZcVNntDimvtcCbDWgNz161IUxHARBEARB0AUJY7hGmNnLnS1DNWhpHZImpzFWO4mCamNmL3TEvJK+gRdzewz4hZnlK3nfIulgYJikV8zsr8AjeOG3tZjbGH4MWBTYhDmN4XXxAlvP5rZNwttO/cHMLq/GWiZOm8G4qZEJEARBEARBMC8TxnAHk8I0r8dbMA3B28sMBw4ys4lpzDrAyXgV5C+Bu4HDzOyTtH8I7tnaK41bCFgbmAacixsLi+CVsE8ys1nVrSX9NDf3gngI8xFm9mraPwivjr0hHrq6Nu4VvAY4qg25v3WS/oRXNF4KeBE4wMyeaaNMx+CewU+AE5PuLsa9fA3AOWZ2Xm7uvsBpwDZ40vyLwNFmNrLCdSDp17hnciDuibwDONLMGiQdAJwHLGVmE9L4Y5OMG2bnk7QNXtl4OWAPvIf1gUlGAWPxa3ZdJWtI4b1DcU/999P4k9P5d8DDjz/Eq2ofZ2bTc0vrL+kfuCE5HTdQDzGzz9PcY0hh0rnQ6t+meTcAxgOXA6c01+aqGQ4Cvgb8oWAIA2Bm50raHjhW0pVm9oWkJ/DPd7buOvzan4kbwwdK6pGTYx3gocLn9i7gm8DZku41s/9WIHMQBEEQBEEwn9KjswXoJuyL/6AfAhwBbA4Ml1SXeveOBL4AtscNhkHAw5IWyc3RE8+f3A3vuWt4y5zF8F7JW+N9ku+StBKApPWAx/Gw0V3wtjnLA49LGliQ8QbcE7cF8DfgT7TcZqc51sbbTu2HG35fB+6WtEAbZLoRvzGwRVrvpbiR/AqwFfA0cK6kn6W5ewEPJV0cneR4H7hX0vqVLELSMen8TwK/BE4AtgNGpesyPK0hP+8G6Xnd3LZNgRdy/X37462Qzsc/B+8B12Zrr3ANR+HXajvgVvxmxj64QbwR3l7pj/gNhTwn4S2XtsZvpvwBN6xb4hK8n/W2wLVp/GmtHFNkE1wX77cw5mY8J32V9H4ksFr2+cFbLy2Ne4rvA+qBnwJI6p2Oy4dIAzThfzc9cSO+5tTVxaMtj9Bd6Hl+e4SuQ9fz2yP0HLruqo9yCc9wbWgEBmdFgCR9gudNboz37zVgi8ybJelJ4DW8326+F+4pZjY8jVkW91jO8gRLehrvK5zl9J6O9+jdLDf3/XgRrBNx4zvjcjM7Kb1+KHk0t2B2HnC5TEvny7zeS+Je7e8B/65QpivNbFga8zlumD5tZselbS/hxtmauGG8E7AysLqZPZXG3AOMAs7APdGtIqkPbkD+xcz2y21/BfgXXoDqz5IM917/Q9KiwBp4Iaif56bbBLgq935RYPec5/hN3Du8OfBGhWt4JNNPGncO8KyZZecbLekL5u7Le4uZHZJePyRpI+Y06kvxnJntmF7fK+lrwEGSTjGzcvOLV6T1ntxvp+cBwAu4MXwirpPncH1+YGavSOqBF9/aBL/+a+EG7wPFSc3sXUlHAhdI2t3MrihT5nZTbrGtoDT19dXp6Ry0TOi5doSua0foujaEnmtH6Lr6hDFcG+7MV8PFwzZn4Mbw6sBZQF3O+/UuXlhoMHMawy/mXo/DDebLJW2Me8nuyYwcSYvhhtMJ+ZBRM5sk6W5gs4KMTxTev497nSvl1cwQTryXnpdsg0yP515n1YOfyh03QRLAkmnTBsBHwHM5XYJ7l8+S1MfMGspYw+r4DYUb8xvN7BFJY3HP/Z9x7/A2affaeH7rBcBlkhYGvo2H5/6zMH9e15mXNNN1JWt4sTDvw8Dpkh7BP2PDzeyiEut7pPD+vSR/S1xbeH8rHu69BnPm87ZEHR6W3RJZVarsnt7TeGG5tXBjeGOS59fMGiWNxG9InIiHSL9rZu82M/dFuBf9nBQu3ZKHumo0NExh5sxKoskD8Lu69fW9mTAheip2JKHn2hG6rh2h69oQeq4doevKyPRVDmEM14YP8m/Sj/jxeP5kDzy89fASx00tvP88N0eTpMG4B3Nb4PfAdEm347nFi+IGxUfMzUfMNiAzvii8b6RtYfRTSsxDmmvJCmUq5XEszp+nHliW5g2u/niecWv0zclUJC/ncOCQlFe7AV7U6UG8yvFqePju/3AjbhZm9kXudWMy6DNdV7KGzwv7zkrbdsW9yGdKehXY38wezo0rdY1au9YfFN5/nJ77Fge2wBjc49sS30rPYwHMbIak0cBakq7Gje8/58bfD1ycQtfXYe4Q6Vmkv5ld8QiFy/EQ9poQ/7jaTlNT6K8WhJ5rR+i6doSua0PouXaErqtP5AzXhn75N5J6pm2f4/mMw3CPafExpKVJzexDM9sHN5B+hBcV+iVeSGlSmnvZEof2x4sg1ZpJdKxMk/AQ7FK6XJXZXurWyDzbrcn5CG6wb4iHGY9KucFv4t7jTXHvbCVfW21eg5k1mtnFZvaTJPsuuIf7NkkLVSBDKfoV3i+Tnj8uDmyBu4CfSWqpT/Wv8HzmfEXrkbi3fl08DPrB3L778YJyPwd+RokQ6Txm9g6ea71JMoyDIAiCIAiCbkoYw7Vhs4IxsjXulb8TeB4YaGbPZg/gVbxg06DmJpS0hqRxklY1syYze9HMjgFeBlYwsyl4e5ntk/GdHbcEngv8aJXX2Co1kGk0Xozr44I+N8ILgrXcGHY2T+G5z7/Nb0xVv7+ZyZkqND+AX88f4Xm94AWwtsA9lXfXag2SHpd0fpLtYzO7Gg8NXhJYvEI5imxTeL8dHk3wZAVzXIDfPLiqUBwOAEl745/5UwtVqh/E9f4rPCd6QrbDzP6D59zvhv9NPVSGHBfi13BYawODIAiCIAiC+ZcIk64Ny+NVni9Ir08D7jWzUZKOAkZIugGv6NwTOAwPsz2puQlxz9kXwHWShuLhuxvi1XTPT2OOxPM5R0i6GPegHYl7C0+s5gIroCNlugqvYv2ApFOB/+B514cDFxbaCzWLmU2UdDpwnKTpuEG7In49XmPOvrbDgStxL3/W2/ZhPFT9S+b0Ynb0GkYDh0kah+dbfwOvQD7azManoldtZfs07wjcYN0Xb/fUUtj6HJjZ/yRlla+fS4b763io9fbAb4CLzezSwnGvpHP/Bg//LnI/ru9nzGxSGXI0StoFD5duE30XXoDpraQB1/eKr9cgCIIgCIKuTPxaqw034XmeN+P5mlfjbXMws/tTAazj8X6vX+E5phuaWbNeNzP7MlUBPh03fpfEw2v3TB5BzGykpKy40E24t/NfwO+znr61piNlMrMpqVXVaXjI+BJ4nuoRwDkVzjVU0kfA/nh/4AnAP4BjCgbgCDz0+zEzy7y2o9K2h/P5wTVYw7G4PncFjsNbId2Vjm0vx+JG8J64gb5v0WgtBzN7WNIqeHuwQ/GbQ5PwQlmbmllzxbgewj31pfbfh1+nFkOkC3K8Lelo2ugd3myF8ooyNDY20dgYyT1BEARBEARdkbqmyMLuUCSNwXNJh3SyKEFQMak42Ht4O6mrO1eaLsHiwKcNDeU5xMMYbjt1ddCvX2/Gj4/KmR1J6Ll2hK5rR+i6NoSea0foujIyfeFOpRZbgIZnOGgRSXV46HZrzKywUFTNmZ/W0lUInc5JGL9BEARBEATzDmEMB62xM57H2hrrMbuAVFelS6xFUhPea3loR52jhvwcz5FujV3w9IBmSa2TBpnZgHZLNffcrVmoZ5hZ2eHkffqUbsHd2NhEQ8OUMIiDIAiCIAjmAcIY7mA64od9jbkbb+nTGtbRglSB+WktNcHMxuC9oZvjOcrTabltrTqSvwJXNLOv2Ee5RUaMncy4qXMW9q7vtQBbDehNjx51YQwHQRAEQRDMA4QxHLRIamMzodWB8wDz01q6CmY2mdlVtLs677dUlK4SJk6bwbipM6sxVRAEQRAEQdBJhDEcBJ2MpP7AKXgLpX54r+iTzeyu3Jh+eO/pLYD+eCun0cDByXuLpFHA23hV8X2BpXHP7cFm9nSFMg3EKy2vDUzFPar9gW+Z2aA0pgkYCmwJfB84zcxOTNWwjwZ+BiyGe12vAU7M+gdL6pPm3xr3PP+FEn3PJW2NV7L+AV51+mbgqEpaOgVBEARBEARBKcIYDoJORNIywDN4T+KjcM/1EOAOSTuZ2Q2pSNVwvB/v4XhP6R8CJwOXApvkptwO7927P25cng3cKmmAmZXlykyG97+Aj/Fc3wXwVlgrAEXP6lF4n2gDxkhaGRgJ/B34NW7o7oC3DnsDuElSD+BeYADeXmkC8CfceP4wJ8fv8N7bNwDHpPGnAt+XNLgNBbl6SCr5nZdri1UV6loKLA/KItNh6LJjCT3XjtB17Qhd14bQc+0IXVdGJXoKYzgIOpdDgKWA75rZ2LRthKQHgbMl3Qgsi/enPtTMHk1jRklaCe+BnGdBYGMz+wxAUm/cK7sK7iUuhwOA3sAqZvZhmudJ4M0SYx8xs1m9eiXthPf73SnnBX4A2ArvU3wTsClu+G5qZvemMSPxfsrZPHXAGcC9ZrZjbvtbwIPAZvgNgko4Nj3mQtJSZja+wvlK0lxxraBt1NeX19M5aB+h59oRuq4doevaEHquHaHr6hPGcBB0LoOAx3OGcMb1eOXrgWb2GrC+pLrU9/c7wEBgLWDhwnGvZoZw4v30XImFtn6SaZaX1szGSnqcuYtpvZh/Y2bXAddJ6iXpu0nWVfDvmkzWdYCvgPtyx02RNAKvTg0gYDng1II3dzTeL24wlRvDl+Ph2KWYVOFczdLQMIWZMxurNV23pa7O/+lPmBA9FTuS0HPtCF3XjtB1bQg9147QdWVk+iqHMIaDoHPpC7xbYvtH6XlJAEk7AKcBywMTgReAL0ocV9yWWWVz5eO2wFLA8yW2j8O91Hk+z7+RtAhwIbAT7qV+D3gcmM5sQ7ovMLFEmPP/cq/r0/Of06PI11teQkk+NLOaFPuKf1TVo6kp9FkLQs+1I3RdO0LXtSH0XDtC19UnjOEg6FwmMreBCV6sCmC8pLWBa4ELgLPN7AMASWfiBa6qzfvAMiW2L13GsefjecvbAw9mha4kfZwbMx7oJ6lnIY+5Pvd6Unr+I6V7PjeUIUsQBEEQBEEQNEsl3qIgCKrPaGBNSSsUtu+Ie4ffBtbE/1aH5gzhnnioMKkgVbVlWkPSLCM9Vbxeo4xj1wYeNrM7c4bwT3BvcybnSPxG3Da5+RcCNsrN8wZewGtFM3s2e+CVqU8HftTGtQVBEARBEAQBEJ7hIOhshuEhxSMlDcUrK++M5+3uamaNkrK2SBdJuhIPM94XWDltXwyYXEWZLgD2A+6TdGLadiywELPDrpvjaWB7SXvhVa1XxitBNyU5MbORku4DrpC0NDAWL9q1FG4AY2YzJR0NXCZpJnA3HjJ+LJ5LXG4xsDzLSVq9mX1TzOzlcifqu/ACTC9oor5XfJ0GQRAEQRDMS8SvtyDoRMzsI0lr4t7OC3GD8yVg66zPsJmNkrQv3oboV3ju7sPAtsDteEGqEVWUaZKk9fCQ5+twQ/tiPB/585aOxatjL4i3fVoYzxk+Ge9DvGUuNHpbvFr0iUAvvH/wX8h5i83sCkmf4W2X9kjnfgzYwczea8PSdkuPUryEF/oqi81WKF2UobGxicbGSOYJgiAIgiCYF6hriizsIAhySFoN6Gtm9+S2LQD8B7jJzA7pNOE6n8WBTxsappTcGcZw9airg379ejN+fFTO7EhCz7UjdF07Qte1IfRcO0LXlZHpC1gC70LSLOEZDoJuQsozbq0NeRPwTeDmFCI9Cg9v3gMPU768A0WsiHLXUyjSVXXCAA6CIAiCIJg3CWM4QNIoADMb1LmSBKVIvYXfA3Yxs6tbGDcGGGVmQ5oZ8g5QLNRVZLSZDZJUD+yDV3P+CngS+DVwgKSN8dZGE/Hc3QvN7P6cHEOB41s5z1gzGyBpCN5PeUUzG1NiTVcDg8xsQHqfjS8bScVNX+LFyYYDR5pZxfnWffrMbtvc2NhEQ8OUMIiDIAiCIAjmMcIYDoL5h1/QcijIlngeb0tMBjCzS4FLs42SNsDzk98HzsSLYy0F/A4vtHWemR2chl8B3Jubc3c8VzdfjXpaa4tphW2BRfH85CJv4gb8FrhRvi1z9jDuA2zC7KJdv6705CPGTmbc1BnU91qArQb0pkePujCGgyAIgiAI5jHCGA6C+QQze6GV/WVXS84j6RvALXjxql+Y2Ze53bdIOhgYJukVM/urmb2PG83Z8Zuk8z/ZlvM3wwulPMkFuX/Qwth7JC2DV77ezcxaKww2BxOnzWDc1A6Nvg6CIAiCIAg6mDCGmyGFnF6P50sOwVvKDAcOMrOJacw6eKXcVfHQy7uBw8zsk7R/CO4l2yuNWwjvwzoNOBdYC1gEr2R7kpnNqggs6ae5uRfEe78eYWavpv2D8IrCGwKHp3k/A64BjmpDnmSdpD/hLXWWAl4EDjCzZ9oo0zHA6sAneMXg4XhF4o2ABuAcMzsvN3df4DS8mvAS6fxHm9nICteBpF/j4b0D8QrEd+DhsA2SDgDOA5Yyswlp/LFJxg2z80naBrgNb+OzB97398Ako/B2QCeZ2XWVrEFSEzAU99J+P40/OZ1/Bzz8+EPgJuA4M5ueW1p/Sf/AvZrTcQP1kMyQy4dJ50Krf5vm3QAYj+f8nmJmrbVIynMQ8DXgDwVDGAAzO1fS9sCxkq40s3nFRToJz5GeV+QNgiAIgiAIqkgYwy2zL/AWbgwvjbe/+U5qhbMO8CAwEtge7/16EvCwpFXNbGqaoyfeEmc3oB9gwCu4wbMTbtQcCNwlaaCZvZ3a2tyHG5a74K1njgIel7Samb2Rk/EG3Mg8HQ8L/RPwLnBZhWtdGw+h3Q83dIcBd0tazsxmVCjTjUmek4Ej8HDbt4G/AxclvZ4r6XEze1pSL+AhYFng6KSbXYF7JW1sZg+VuwhJx+CG5Z/TXN/Cr8saqcfscLxl0PrAP9JhG6TndfHrCbAp7lH8MOWc9k+yn4wbwn8ErpX0jJm9UeEajgKOxD8LY/CbGfvgn5N3gdWAU/FQ33zu7Ul4D+Ct8RspJ+I3QA5rQSWXpDVvi1/jobhhe3gLxxTZJOni/RbG3Izf4FkFaNFD3Qw9U8XqIs0VyGpufGMJQz8/tg4Pk94C/7u+zcxKl4aukLrWSnkFFZHpM/TasYSea0founaErmtD6Ll2hK4roxI9hTHcMo3AYDP7FEDSJ3je5MbAsbgxs0XmhZX0JPAabgRdnJvnFDMbnsYsi3ssZ3mCJT2NGz1ZPufpuBG+WW7u+/ECSCfixnfG5WZ2Unr9UPJobkHlxvC0dL7M670k7tX+HvDvCmW60syGpTGf48WXnjaz49K2l3DjbE3gafymwMrA6mb2VBpzD17J+AzcE90qkvrgHum/mNl+ue2vAP/CC1D9WZLh3ut/SFoUz2V9Dvh5brpNmLNQ06LA7jnP8Zu4Ubw58EaFa3gk008adw7wrJll5xst6Qvcc5nnllxbo4ckbYQb9S3xnJntmF7fK+lrwEGSTjGzFkvN51iR1vsYv52eB9A2Y/jtFvaNrWD8cPzz39rYcfgNk+NaF6118gW1gupSX1+6p3NQXULPtSN0XTtC17Uh9Fw7QtfVJ4zhlrkzM4QTdwEzcGN4deAsPLw40+O7eGGhwcxpDL+Yez0ON5gvT1V57wPuyYwcSYvhhtMJ+VBnM5sk6W5gs4KMTxTev4+HdlfKq5khnHgvPS/ZBpkez70el56fyh03IXlbl0ybNsCr+z5X8PbdDZwlqY+ZNZSxhtXxGwo35jea2SOSxgKDcANoOB7KDO4t/Qr3uF4maWHg23h7oX8W5s/rOvOSZrquZA0vFuZ9GDhd0iP4Z2y4mV1UYn2PFN6/l+RviWsL72/FIxHWwD975VCHRzC0xIzc2LawFXMWuco4Hvh/FYyf1MLYhfCoht/jIeh/aZOkJWhomMLMmZVEngetUVfn//QnTIieih1J6Ll2hK5rR+i6NoSea0foujIyfZVDGMMt80H+jZk1ShqPh5n2wENNS4WbTi28n1Wcx8yaJA3GPZjb4j/Mp0u6Hc8tXhQ3KD4qMe9HzDYgM74ovG9MslVKMVQ0+2XfI52zEplKeRxbCkWtx8OLmzO4+uN5xq3RNydTkbycw4FDUl7tBnhhqAfx0O/VgJ/ixtNz+QnM7Ivc68Zk0Ge6rmQNxWJNZ6Vtu+Je5DMlvQrsb2YP58aVukatXesPCu8/Ts99iwNbYAzu8W2Jb6XnUl7ccni5mdZKEyoZX8bYxyUtiN/4+MzMbqpY0maIf04dQ1NT6LYWhJ5rR+i6doSua0PouXaErqtPW4ym7kS//BtJPdO2z/GiO8Nwj2nxMaSlSc3sQzPbBzeQfoS3qvklno86Kc29bIlD++NFkGrNJDpWpkl4CHYpXa7KbC91a2Se7dbkfAQ32DfEw4xHmdmHeEueQXi+8PAKC0G1eQ1m1mhmF5vZT5Lsu+Ae7tskLVSBDKXoV3i/THr+uDiwBe4CfiappR7FvwL+S9tCpGvNAXhO9yWponQQBEEQBEHQDQljuGU2KxgjW+Pe9DuB54GBZvZs9gBeBU7ADaqSSFpD0rhUZKvJzF40s2OAl4EVUjGfZ/GWLz1zxy2B50I+WuU1tkoNZBoNLA98XNDnRnhBsBktHj2bp/Dc59/mN6aq39/M5EwVmh/Ar+eP8Lxe8AJYW+DF0e6u1RokPS7p/CTbx2Z2NV6sa0lg8QrlKLJN4f12eDRBJW2OLsBvHlwlaZHiTkl745/5UyusUt0ppFzpQ3D9nt650gRBEARBEASdRYRJt8zyeJXnC9Lr04B7zWyUpKOAEZJuwCs698Sr+q6GV/1tjhdwY+Q6SUPx8N0N8Sq856cxR+L5nCMkXYznOh6JewtPrOYCK6AjZboKr2L9gKRTgf/gedeHAxcW2gs1i5lNlHQ6cJyk6bhBuyJ+PV7D205lDAeuxL38z6ZtD+Oh6l/iYdO1WsNo4DBJ4/B862/glaVHm9n4VPSqrWyf5h2BG6z74u2eyq6gbGb/k7Qdnm/8XDLcX8dDrbcHfgNcbGaXtkPOSvlRKkZXijFmVipUfhZmdrOkfYCdJV1iZk9XcvK+Cy/A9Eao7xVfoUEQBEEQBPMq4RlumZvwask34x7fq/E8X8zsfryQ1vJ4v9frcO/fhmbWrNct9WndCPcin48bmNsAeyaPIKli8YZ4D+Kb8N6w7wOrmdkr1V1ieXSkTMkwWxf33J4J3IPr+Qjcg1fJXEPxNkXr48bw8XgLpbULBuAIPPT7MTPLvLaj0raH8/nBNVjDscAppFZMePj9fXjofHs5Fq8Ifmeab18zq9gbmnKXV0lyHZqeL8ELiG2ar95dI27DC5qVevymzDn2x/OuL5JUUeGvzVbozS4D+7DVgN40NjbR2BgJPEEQBEEQBPMadU1tzMKWtDMeEnqPpB/i3tEVcMNjHzObVj0xa4+kMXgu6ZBOFiUIKiYVB3sPbyd1dedKM1+xOPBpQ8Ps+yphDHcMdXXQr19vxo+PypkdSei5doSua0foujaEnmtH6LoyMn0BS1C6sO8s2hTjJ+lQ3Pt1HO4BuwQv1HMFXjzqE9wjFnQSydPVs9WBMLPCQlE1Z35aS1chdDobSXVtXWMYwkEQBEEQBPMubQ2T3h0408xOSR6oNYATU6/cIygUMAo6hZ3xNj+tPX7eWQJWwPy0llqzTTPbf055Ot2540XsPCStheePV0SfPovNevTo0dbWykEQBEEQBEFn0tbqLyviHmGAzfE8y6z67hvA0u2Uq9MxswGdLUM7uRtv6dMa1tGCVIH5aS01wczGpD7ILzYz5DnK02m5ba3mVf6A51RXxIixk5nRBFsN6E2PHnXhHQ6CIAiCIJgHaasx/Amz+5VuBrxhZu+n9z/EKyQHnYiZTQAmdLYc1WB+WktXwcwmM7uKdlAhE6fNYHqXbyIVBEEQBEEQtERbjeG7gdMlbQBsChwNIOkQPI/4quqIFwRBtZDUH69aPRjP8X8ZONnM7sqN6YdXTt8C6I+3nhoNHGxmY9KYUcDbwFt4q6alcU/zwZW2KErF94bivZ2XBD7GWzgdbmZT05gmYG9gdeAXwEzgerxt1Yl4nYIewO3Afqlie3bcvsCP8creC+IRLfub2ThJV5PCwNPYKDYWBEEQBEHQjWhrzvAheB/WnwOXAmen7XviLWuOab9oQRBUC0nLAM/g7Z+OwtssjQHukLRDGlOH589uhBuaG+GG6gb433me7fB85P3xGgHLArdKKqcoVyZTf+ARvD3TEPzG2k1pzgMLw8/E+z//Au8XvT/es/ubwA7ABcBuaXueU/FCYb8B/ghsCZyX9p2Ef199hNc9qDh3OAiCIAiCIJh3aZNnOHle9iyxa+XMKxMEQZfiEGAp4LtmNjZtGyHpQeBsSTfiBu0U4FAzezSNGSVpJWCPwnwLAhub2WcAknrjRuoquJe4HP4fntO8XQrbBnhQ0mBgEJDvh/yame2VzjUaz/VdCNgh9Ym+X9J2wFrAWbnjXjazXbI3kn4G/ArAzN6R9AkwraXe4OVQFzW0qk6m09BtxxJ6rh2h69oRuq4NoefaEbqujEr01NYwaQAkbYqHXH4dOBL4kaTncj+2gyDoGgwCHi/xt3k9ntYw0MxeA9aX/j97bx5v13z9/z8PNQuRAdEiOr3yrX5Kf59q0SBFqKlUVavkY2wpqqZWzZGYaqp5nkNRsxBjSEqJWavUUkOioUEuIWKM3N8f672TnZ1z7z3n5Nx9c5P1fDz2Y5+z93u/93qvc+6w9ppUSVXivwYMwA3MxQrXPZcZwomsZsBStQpkZvfgRuwikr4BfBU3kJdnzhzxh3PXfS5pMvBkMoQzWvBQ6zyPFN5PrEfGWlhuuaZOFxTo3btHV4uwQBB6Lo/QdXmErssh9Fweoevm02if4SWBW4CN8UbGPfAwxl/jBvEGZvZcs4QMgmCu6QW8UuV4VuyuJ0AKmT4BWBl4Bw9F/rDKdcVjWTmpmlMvJC2EhzHvAywN/Ad4DPgIKD7Tq9YwfVoNt6kmZ1Ofq7777jQ+/zyqaTWbSsX/6Le0TKU1inV3GqHn8ghdl0fouhxCz+URuq6PTF+10Khn+Hjgf/FcwgeBT9Px/wPuwnPxtm1w7iAIms87eBh0kX5pP1nSQOBKPP/2FDN7HUDSScDATpDpD3j49p7ATWb2XrpfXUW45gXiD1Pn0doa+i2D0HN5hK7LI3RdDqHn8ghdN59GC2j9DDjUzB7AewwDYGb/BY6lc/5xDoKgccYC60patXB8J9w7/BKwLv47YWjOEF4YT4XIPLnNZCAebn1ZzhD+Ih4q3ex7tcXnJd0nCIIgCIIgmMdo1DPcE69EW4138ZDHIAjmHU4DhgCjJQ3F82t3BjYEdjOzGTmP7NmSLsVDq/cB1kjHlwKm0jweA46U9Ac8t/ereKXrxWhyXm87TAFWSPUPnkkP9Dqk12JfYHo8mQ2CIAiCIOjWNOp9+SfezqQaW6XzQRDMI5jZJNzz+yRwFnAD3pZoazO7LI0Zgxu/6+L9eE8DXmNWysN6TRbrBOA8vI3SnXjroxF4O6fVJfVs8v2qcRn+YO9WUs/hWth81R78qH8PZsxoZcaMsIqDIAiCIAi6I5XWBgLPJW0N3Iz36BwJnAscDHwZ2AvYwcxuaKKcQRAE8wLLAO+9+67X7gpjuPOoVKBPnx5MnhzFQjqT0HN5hK7LI3RdDqHn8ghd10emL2BZqhdhnUmjfYZvlbQT3gd083T4VOAtYK8whINgwSXlGXdUsbnVzLp1vm4YwkEQBEEQBN2bRlsrDTCzPwN/liSgN55794KZRY+RIFiweRkoFuoqMhbvfdwtWW65pZgxo5V3350WBnEQBEEQBEE3pdECWg9JOsDMRpiZNVWiIAi6O1vhRbDao5mFuEpn3JsfsvYKS7LQQpUwhoMgCIIgCLopjRrDnwGTmylIEATzB2b2bFfL0Nm8/2m3jvAOgiAIgiAIaNwYPgI4JVV7/TvwQXGAmb02F3IFQdAGksYDV+Hth3YBZgB3APub2TtpzHp4z++1gI/xQncHm9nb6fwuwMV4wbtjgUXxvr+fAH8Cvg8sgf98DzezUbn7fyc39yJ4yPMfzOy5dH4Q8ACwMXBImvd94ArgsHpyhVP+8cF4W6ivpLX+HTg89TnPxm0BHAOsDvwHOBoYDlxlZkPTmF54Bett8IIKz6R5RtcqTxAEQRAEQTD/0GhrpfOB/4f/Q/4s8GqVLQiCzmMf3GDdBfgDsAVwh6SKpPWB0cCHwPbA/nh+7gOSlsjNsTBwELA7cABgwO24kT0E2BrvR3ybpK8CSPoB8DBeIGtXYA9gZeBhSQMKMl4NPAhsCfwZ+H0aXw8nAkcBFwA/BH6J9z++QdKSOZluxY3gbYGz8d9RK2eTSFocuD+t6fA0biJwl6QN65QpCIIgCIIgmA9o1DNc7z+0QRA0lxnAYDN7D0DS23i7s02BI3HDdsvMCytpHPA8sBtwTm6e48zsjjRmRWAAOU+wpMdwL2uWA3wi8G9g89zc9+BFs4bhxnfGRWY2PL2+X9I2uGF8QR3rXAn3Jp+VHZD0MXAj8C1gHO4R/iewrZm1AndKegu4JjfPEGANYG0zezTNcycwBvgj7uVuiEpHdbODhsj0GvrtXELP5RG6Lo/QdTmEnssjdF0f9eip0dZKVzRyXRAETePWzBBO3AZMx43htYGTgYqk7Gf8FeBfwGBmN4afyb1+EzeYL5K0KXA3cKeZHQggaSncaDwmH+psZlMkjWRWm7WMRwrvJ+Je55oxsx3TvfsCAr6GF+gCWEzSYsC6SaZ8JavrgRG59xsBk4AnczoBDx8/WdJyZvZuPbKBV5UOOpfevXt0tQgLBKHn8ghdl0fouhxCz+URum4+jbZWWr+jMWb210bmDoKgJl7PvzGzGZImA0vj6Q+HpK3IR4X3M/P9zaxV0mC8JsC2wP8Bn0m6Gc8tXhIPj55UZd5JQM/CsQ8L72dQZ2pGyk8+FzfCPwSeA7J6BBU8ZHphvMf5TMzsc0ktuUO9gRXx4n/V6AfUbQy/++40Pv88usl1BpWK/9FvaZlKaxTs7jRCz+URui6P0HU5hJ7LI3RdH5m+aqHRMOkxQCv+z2hG8aNZuMG5gyDomD75N6nQVB/cuG3Fi2BdU+W6ooE6G2b2BrC3pH3wsOLt8JzkyXjObytuVBbpR5MrzEtaBrgL+AdeGOuFZPRvDvwkDXsLN3BXKFy7EG4AZ0zBw7t/0cbtGq5zEH+UOpfW1tBxGYSeyyN0XR6h63IIPZdH6Lr5NGoM/6DKsaWB9fDcvJ9UOR8EQfPYXNKiZvZper81/vN8K/5zOMDMnsgGp8JZN+BVp5+vNqGkdYBb8Fzjx/EQ6mdSpeZVzWyapCeA7SUdm8sZXhbPBW52VeYBuEF7hpnlZd4s7RdKHuCH8ArRw3JjfsTsv9/GJhnfyle6l3QYsCawY5NlD4IgCIIgCOZxGs0ZHtvGqTskfYCHWW7ZsFRBEHTEyniV5zPT6xOAu8xsTDLwRkm6Gq/onLUn+h7ebqgtnsY9xyMkDcVDnzfGjcUz0phD8VziUZLOwVsyHYoX2BpGczG8JdPhkqbjHuDt8OrXMCv/+GhgjKTrgUuAVZm1ziyG+TJgX+BeScfjodaD8VDys8ysrfDpqiyzaAS+BEEQBEEQdHcaba3UHg/ibVyCIOg8rsUrOF+HV1O+HM/zxczuwQtprYx7g0fgxbU2NrNxbU1oZh8Dm+B5uWfgRu82wJ5mdnkaMxo3kJdIMlyEF8b6npn9s5kLTAXCtsbTMbKCWKsA6wNTcQ84ZvYgHo0i3DN+IG74QsqJNrNp6bqHgJOAO3F9/SGNr4u1V1iSGTNamTEjYpWCIAiCIAi6K5XWJgeeSzoV2MHMVmrqxEEQACBpPDDGzHbpYlHmCST9CJhoZk/ljq2Ot1va2sxua+LtlgHee/fdaWEMdzKVCvTp04PJk6NYSGcSei6P0HV5hK7LIfRcHqHr+sj0BSyLRxm2SaPVpO+vcnhh4EtAf7xvZxAEwRxIqlBbgb3PC+2S2mJT4OeSfg+8CHwRT9V4AbinYUHbYcaMGcyIItJBEARBEATdmkYLaC3EnNWjPweexXMXL50boYIgmK/ZGc/h7Ygf4JXrO+JgvGXUEcBKwDt4GPShKfS76VQqFeb8FRgEQRAEQRB0JxotoDWovfOpzUsQBICkVuAYMxvajPnMrH8z5ulCRuJ9g48G/hev/FwNq2UyM/sIN4gPrlUAST3wlk3HZPnQ9RDGcBAEQRAEQfen0TDpV4BtzOwfVc59FxhFoQ9qEAQBgJm1AC2SWoBP8y2gykDScnihrf5l3jcIgiAIgiCYt6jZGJa0A7BIetsf+ImkNasM3QhvtxIEQTBPkYptnQn06GpZgiAIgiAIgq6lHs/wWsD+6XUrcGQ7Y09tVKAgmN+R1A84Du9z2wfPtT82X/VYUh+8ZdKWQD+8RdBY4AAzG5/GjAFeAv4N7AMsDzyZxjxWp0wDgNOAgXj+7cXpvl/O0iJSuPdQYCtgdeAEMxsmaX3gcOC7eO/f14ErgGFmNiNdu1yaP2uVdCFVWrtJ2hr/3fJNYAreOuqw1BpprpDUE7gZuAo4C3h8bucMgiAIgiAIui/1GMN/wHuPVoBX8B6dTxfGfA68Z2ZTmyNeEMxfSFoBN8I+Bg4DWoBdgFskDTGzq1O15TuAXsAhwCTgW8CxwPnAD3NTbgf8C/gNblyeAtwoqb+ZfV6jTH2AvwJvAbvivxeGAasCxb7EhwGH4vm84yWtAYwG/gL8DP/9sCOeD/wCcK2khYC78IiSg9Kaf48bz2/k5PgFcHXajkjjjwdWlzS4xsrS7fEh8A0zM0n952aiSsW3oPPI9Bt67lxCz+URui6P0HU5hJ7LI3RdH/XoqWZj2Mw+BSYASFoNeMPMPqtXuCBYwDkQ6At83cwmpGOjJN0HnCLpGmBFYBpwkJk9lMaMkfRV4FeF+RYBNjWz92FmYagrgDVxL3Et7IeHDa9pZm+kecbhbYqKPGhmp2VvJA0B7gWG5LzA9+JFsQYB1wKb4YbvZmZ2VxozGhifm6eCt2S7y8x2yh3/N3AfsDn+gKBh0u+wmopydUTPnks1Y5qgBnr3joj2Mgg9l0foujxC1+UQei6P0HXzabSa9ARJa0n6AbAY7g0C90wtBaxnZms3ScYgmJ8YBDycM4QzrsLbDQ0ws+eBDSVVkgfza8AA4Pv4z1ue5zJDODEx7eux1jZMMs300qaf8YeZ9bOd8Uz+jZmNAEZIWlzS15Osa+K/WzJZ1wM+Be7OXTdN0ihgg3RIeJ/y4yXlfy+NxZulD6ZGYzhVs8/LPSMz1JvFlCnTmD49Gg13JpWK/9FvaZlKaxTu7jRCz+URui6P0HU5hJ7LI3RdH5m+aqHRatJ74zl31ZzQM8j90xsEwWz0wtMMikxK+54AknbEe3avjPfNfRoP8y1SPJZZaHPk47ZDX+CpKsffxL3UeT7Iv5G0BP67YAjupX4VeBj4jFm/H3oB71QJc/5v7nXvtD83bUVWan8Js/EyHuKdcQUeit40WluJP0YlEbouh9BzeYSuyyN0XQ6h5/IIXTefhoxhPD/xTvwf4EOBZYAD8FDGy3EvVxAEc/IOcxqY4MWqACZLGghciVc9PsXMXgeQdBJe4KrZTARWqHJ8+RquPQPPW94euC8rdCXprdyYyUAfSQsX8ph7515PSfvfAWOq3OfdGmTJ2IrZPeiT67g2CIIgCIIgWECox3uUZzXgXDN7F3gCD4v+yMxuBE4EftssAYNgPmMssK6kVQvHd8K9wy8B6+I/m0NzhvDCeKgwqSBVs2VaR9JMIz1VvF6nhmsHAg+Y2a05Q/h/cW9zJudo/MHbNrn5FwU2yc3zAl7AazUzeyLb8MrUJwLfrnUxZvZsfo6s+nYQBEEQBEEQ5GnUM/wps8IzXwK+JmmRVFDrIbxibBAEc3IaHlExWtJQvLLyznje7m5mNkNS1hbpbEmX4mHG+wBrpONLAc2s2H4msC9wt6Rh6diReL/wjhJjHwO2l7QXXtV6DbwSdGuSEzMbLelu4GJJy+OF+PbDDea30pjPJR0OXCDpc2AkHjJ+JJ5LXGsxsFJojRilIAiCIAiCbk+jHqZn8FBE8OqsCwFZwawvzaVMQTDfYmaTcM/vk3iu7Q3AKsDWZnZZGjMGN37XxdMRTgNew9uZgRekaqZMU4AfAG8DI/Cc3ZuARynkCFfhQLx377HA7cAe6fVFuLd54TRuWzx9YhjeO3gi3ms4L8fFwA74ukcC5+E5yBuY2atzs8ZmE8ZwEARBEARB96fSyD91krbB/1m+zMx2l3Qj8L/AjXiP0UfNbOtmChoEQecg6XtALzO7M3fsC7gBfq2ZHdhlws17LAO819IylRlRTLpTqVSgT58eTJ4clTM7k9BzeYSuyyN0XQ6h5/IIXddHpi9gWbwrSZs02lrpFklbAf8vHfoVcA2wFx42uW8j8wZBUBuSKlWqMxfHFFsMVaMV90xfl0Kkx+Dhzb/Cw5Qvmmthm0St6ykU6eoUKpUKrrogCIIgCIKgu9JozjBmdgep76eZtTB7MZygRCRdDgwys/5dLMp8QcrlPdrMOjK8itftD/wBfwp1nJkd2yR5dsF7EK9mZuMlrY4bqet2cGmxxVA1xprZIEm9gb3xas6fAuOA9c3sX3Mh9//gVbG/kWQ5qbCOMQBmNqjGKWtaD97LuSPZvo0/uPtaIwW2whgOgiAIgiDo/jRsDANI2gyvcLsS3mLp28CTZjahCbIFQbdB0jLAqXje7Kl4rmtn8VNqq/RcbDFUjakAZnY+cP5cylXkaNx4/TFeKGsCLvd/27uoHWpeT3tI+ib+IG+ufv8FQRAEQRAE3ZuG/hmUtCRwC7AxHofdA/f6/Br4tqQNzOy5ZgkZBN2A5fBCcreY2V+7WhjwFkNdLEJv4FkzG5U79najk83telI7p9/gRbw+npu5giAIgiAIgu5Po56R4/GCWRsBD+JhlQD/B9wFDGdW5dugCUiqAPvjuZz98f6r5+NeyGzMr/C2Nn2Bh4GDzezpOu7RH/do7oAXQtsImIyH5B5nZjNyY/cADgC+CrwJXAoMz/I1U+j2ysCLaa6JwP/gLYSGA98EPgP+ChxiZi/k5v4ZHq47AK9mfAtwaOprnYUx74T3sz4BEO51HG5mI2pdb5prcfz7/AtgaeAvpHY/hXHr4VWS18INqZG4ft/OhTEDXCrpUjOrpBzXg/FWSl/B2xT9HTjczB7I6Wm2EPfc57CrmV1ekGMo7nFFUitwjJkNrWO9peg2yZZ/vWt6OzNMuso1CwG/xytSr5zue5aZnVXrfTtgc1x3x+Pf2XkmHzoIgiAIgiAon0ZbK/0M/wf6AXKJc2b2X9xgGNgE2YLZOQk4GbgNDxe9BPgjnqMK3tLqaNwY3gHvTTtG0ioN3Os84D38gcaVwFDcMAJA0qF4W5z7kixnA4dQaJUDrI8XZ/pxknNV4FbgiXTd7rixNSoZQkg6Ai/GNg74CXAMsF1ayxK5uful+54BbIEbj1dKGlDnWq8CfokbSD/F9TZb9WRJ6wOj8d7a2+MPJQYBDySZ7mDWw59jmRXCfCJwFHAB8MN0n17ADSm6ohEuxj970n0urvXCknW7DvB02tYh1RfogPNwr+1V+PfjeuB0SUfWcd/2eBzob2bHAdPnZqJKJbYyttB16Hl+20LXoev5bQs9h67n1a1WGvUM9wTGt3HuXdzDFjQJST1xA+wsMzskHb5P0oq4wfkmsDCwjZk9nq4ZB7wC7Id7J+vhSTPbKb2+S9LSwP6SjgMqwJHABWb22zTmHkktwMWSTsuFyH8B2NPMJiaZfg4sARxvZm+kYxOBrYGlUjufI4ALzWxmRXJJ/8Q9yLviPXABlgT2MLPRacyLuCdxC2Cml7k9UiGqnwC/TjmzSLobeBYv+pRxAt5Pe8uc53sc8Dywm5mdIynzwL9sZuPS65WAw/KeTUkf4y3IvoUbpXVhZhOTzsjdp5a1LkeJujWzcZLez8spqT35vo4/LDjUzP6YDt8jaQZwmKRzU6G+hjGz1+fm+jw9ey7VrKmCDujdu0dXi7BAEHouj9B1eYSuyyH0XB6h6+bTqDH8Tzz09Z4q57ZK54PmsTb+Wd2UP5gZoynU9pXMEE7nJkl6BDeW6+XKwvsb8bDZdXBjeAngtmS8ZoxM+8FAZgy3ZIZwYhweYvy4pOuBO4ExZvZYWsdmeIGkawrrfFDSBNwbe27u1CO519l96rFS1ivIjpnNkHQD7tHN8uPXxr3yldyaXwH+ldZ7TrXJzWzHNEdf3AP+NfznAzouBNVs1qZc3dbLhvh3a2The3UbbsSvh4d0d0jheoDPO2pDVS9Tpkxj+vRoNNyZVCr+R7+lJXoqdiah5/IIXZdH6LocQs/lEbquj0xftdCoMXwscHNqxzISD5XeQNKueK/hHRqcN6hO77SfI5c1x6Qqx97Cw5TrpehBy+7bi1mh9aOozkq51x/kT6R2OhvgIdN74Ab2FEnn4N7mXmlotbVMwiMS8vN9mHs9I3ke6wn9z+43uXA8X+14uTTnIWkr8lFbk0v6Dm5groWHWD8HvJZO1xHA0RTK1m29ZN/xtgrvrdTG8dnI5Vvn2RW4vCGp2qC1lfhjVBKh63IIPZdH6Lo8QtflEHouj9B182nIGDazWyXthOdEbp4On4obTXuZ2Q1Nki9wpqR9XzxcF4CUD/wVYBFmGTt5VqR9A7ot+hTer5D2bwGLp9c74sWxirzZ3sTJC7xtquw7ENgTOBwvLPVOGrYiuXUm+uHe2GaSGcErMMtIhVmGGXi19FbgTxS8qokPqxzLWi3dBfwDWB14IRmVm+Oh2RmteIh7ns5IMyhbt/UyJe03pHp7pNeqHKvGG/jDhzyd2eYqCIIgCIIg6KbUbAxL2ha438ymAJjZn4E/y11GvfF/Zl/IVxwOmsajeOXlrYCHcscPAn4O3A1I0lfM7GX8zcrAunh4b71sA1yXe78dbvSNw43hT4Evpu8A6X5rpnsNB/5TbVJJ++MVqL9uZp8A90t6Ei9KtSpekfoTPLJgbO669XAP9x+Lc84l96f9T8lV5WZWKDNmNlXSU8AAM3siJ9MSwA14Yajnq8w9AP+5OMPM8uc3S/vMy/o+0EfS4maWtfvpqADd5x2cr8ajlKvbesnaUfXJKm3DzND5/fCiZh0+2DGzT/ECbUEQBEEQBEHQLvV4hq/Hc0Yfyw5I+j1wuZkVPU1BEzGzyZJOBw6U9AluzHwP2BsvjvVtPBf3NkmH457G4UALXhG4XraX9CYeCj0I2AdvBzQNmCbpJGB48n6OAb6Y7teKe3jb4n7c6LpZ0tl4Rd+9cCNtpJm9I+lE4ChJn+Eh+KuluZ8HrmhgLW1iZi9JuhA4TtIieOXjIXhxqzyH4RWvrwauxvV7MP4ZDG9retzQPVzSdPxhxnZ4BW2YlX97O27sXSzpErz91EG0b/BOAZC0AzDOzDr0fJat23oxs2clXQVclEKdn8DzrI/HPbvVohC6jNaIUQqCIAiCIOj21JMDOFuOY+qhegLe0ifofA4BDsX74d6BG237mllm7D6F9009DxgBvAysZ2ZvN3CvI/FqyrfiIb37mNmJ2UkzOxL31G2LG8wn4f2m1zez99qa1Mz+gXtdl8FDjm/GvaebZA9UUs/cvfFw2ZF4u6jrgYHJGG82e+MG+r5JniWB4wpy3wNsive+vQHX73Rg47YqOic9bI3/3FyfrlkFL2g2lVS8y8zuxQ3r9fCCYj/DW1G11/rnRrxN0BV4z+Ca6ALd1suuuId+Lzza4XDgWmBwVsV7XiGM4SAIgiAIgu5PpdZ/6lKLk7VzlX8Xxr1d3zGzpzpPxKAscsWHdjWzy7tWmiCYJ1kGeK+lZSozIiGkU6lUoE+fHkyeHJUzO5PQc3mErssjdF0OoefyCF3XR6YvYFk8UrNNGq0mHXQj0oOLjqoXzzc/WpIWooaoBzNrz/vaLZBUYc4CXNVoSnuhrtRtlZZJ1ZhRRt2CSqXCfPQjEwRBEARBsEDSma1Sgi5A0uWSxhcOj8a9+O1tL5coZmdzKR2v97NaJpI0VFLdVo+k/SVNkvSRpCPqvb6deXeR1Jq8+OCh87WsdYMmidCQbiX9j6SnJX0i6fniOiSNkTSmrZumcbXc96jCddl9qubON/r5ujEcBEEQBEEQdGfq9QxX+6cx3CPzPnsCHXWe/sTMxlN+/9vOYChwdlfdPBUWOxUvjnUqndvaZ9m0L7YTKtKsIndDaUy3R+MVw3+MV4WegBfk+297F+Wo1jKprXHV2FfS9Wb2UBvngyAIgiAIggWMeo3hW1I14zwjJX1aONZqZl+ZC7mCJrKgVftORv34LhRhOTzq4hYz+2tHg+eSjwDybZ86k7nQbW/gWTMblTtWc3G3JrRMeh+4TNK3zOyjuZgnCIIgCIIgmE+oxxiu1nplbJVjQSeT8kT3B34F9AdeB84n1ytX0q+AI4C+wMPAwWb2dB336I97NHcAdgQ2AibjFauPy+dlStoD7x/8VeBNPJR2eFYBWNLleCXmF9NcE/EWQhvirX2+iYe4/hU4xMxeyM39M7xi8gDgA+AW4FAzezedHwrsBPwWr24u3Os43MxG1LreNNfieCufXwBLA3+hSm/b1Jv3WNxT+TFemflgM3tb0i7AZWnopZIuNbNKyts+GK8C/hVgBt6G6vCsr27S0yAz65+7V3/aKGqW1n50et0KHJMqRte63lJ0mw9DTq93TW8vA1ZLBnbxmoWA3wN74N+dCcBZZnZWrfctcBBwMf75HtDgHEEQBEEQBMF8RM3GsJnt2vGooCROwv+hPxW4FzfK/ggsks5/CTeSDsU9YkcDYyT9j5m9Vue9zsNbOW0LDMTDZJfGWz0h6VC8FdFZSaY1gWNwA2b33Dzr44bjj/Eeu6virZsuTXIuhxsqoyR91cxmpFzbYcC5eJudL+PG8zqS1s55+PrhobvH4kbT74ArJT2eN6xr4Cq8hdLhwL/x8PKd8gMkrQ/ch+dhbw/0SjI9IGmtnK5uSvLckS49EW9r9AfgH3hv5qOAGyStbGYf1iFnxsX4Z707HnI8sdYLS9btOuk+4Dp4Gdiig2vOw43m4/GHORsAp0vqaWZt9XZuj/uBC4D9JN1gZn9rYI6ZVCq+BZ1Hpt/Qc+cSei6P0HV5hK7LIfRcHqHr+qhHT1FNupshqSfuFT7LzA5Jh++TtCJucL6JVxfexsweT9eMA14B9sO9k/XwpJllBuFdkpYG9pd0HJ5ffCRwgZn9No25R1ILcLGk08zsuXT8C8CeZjYxyfRzYAngeDN7Ix2biPfmXSpVDj4CuNDM9s2t/5+4B3lXZhlYSwJ7mNnoNOZF3HDbAqjJYJO0Ot5T+ddmdn46djfwLN5zOeMEPP92y5znexzwPLCbmZ0jKfPAv5zrQ7wScFjesynpY7xn8LeAqv2K28PMJiad0Va/4zbWuhwl6tbMxkl6Py+npPbk+zrwS9xL/cd0+J7U3u0wSeeaWUuNy83zO2AzPFx6jbkJl+7Zc6lGLw3qpHfvjsodBM0g9FweoevyCF2XQ+i5PELXzSeM4e7H2vjndlP+YGaMplDbVzJDOJ2bJOkR3FiulysL72/Ew2bXwY3hJYDbCm1vRqb9YCAzhlsyQzgxDvcUPy7peuBOYEyuj/VmwGLANYV1PihpAjCIWQYbwCO519l96rFY1ivITvJO30CqUCxpSVz/JwOV3JpfAf6V1ntOtcnNbMc0R1883PhrwFbp9GJ1yNkM1qZc3dbLhvh3a2The3UbbsSvh4d014WZfSBpd9yzfxxwYKMCTpkyjenTo9FwZ1Kp+B/9lpboqdiZhJ7LI3RdHqHrcgg9l0fouj4yfdVCGMPdj95pP0cua45JVY69BazSwP1erzIPeHhw1pprFNVZKff6g/wJMxsvaQM8bHgP3MCeIukc3NvcKw2ttpZJQM/CfB/mXs9Insd6Wodl95tcOJ6vdpwVxjokbUXa9DRK+g5uYK4FfIg/JMhC1ssOeilbt/WSfcefa+P8Sm0c7xAzGy3pQuC36UFHQ7S2En+MSiJ0XQ6h5/IIXZdH6LocQs/lEbpuPmEMdz+mpH1fcu1yJK2CF2ZahFnGTp4Vad+Abos+hfcrpP1bwOLp9Y54cawib7Y3cfICbytpUTwfeU88f/XvwDtp2IrM2RaoH+6NbSaZEbwCs4xUmGWYgedftwJ/ouBVTVTN+02tlu7Cc4VXB15IRuXmeGh2Rise4p5n6VoXUAdl67ZepqT9hsDUKufrzXsvcjDwQ7yA1y1zOVcQBEEQBEHQTelM707QOTyKV17eqnD8IOBa4HNAkma2tpK0MrAu8EAD99um8H473Ogbl7ZPgS+a2RPZBkzHc2tXa2tSSftLmiBpMTP71Mzux6tjgxfXehT4BK9mnb9uPdzD3ex+sfen/U8Lx2fq2cymAk8BAwrrfQ4vGjaojbkH4Eb1GWb2fK4S92Zpn/0cvg/0SVWtMwZ2IPfnHZyvRtm6rZesHVWfgp774kW+erd9acekz3EP4Ov4A5ggCIIgCIJgASQ8w90MM5ss6XTgwNTzeSzwPbxK78HAt/Fc3NskHY57GocDLcAZDdxye0lv4qHQg4B98HZA04Bpkk4Chifv5xi8SvJw3Mv593bmvR+vgH2zpLNxA3ov3EgbaWbvSDoROErSZ3gu72pp7uep3uqrYczspRQ+e5ykRYCn8TZI3yoMPQyveH01cDWu34Pxz6CtKseGG7qHS5qOP8zYjlnVtrP829vxImcXS7oEbz91EO0bvFMAJO0AjDOzV2tYa6m6rRcze1bSVcBFqbXUE3ie9fF4m6lqUQj13uNeSRfjRnEQBEEQBEGwABKe4e7JIXg7ol/grXuGAPuaWWbsPoX3Az4PGIG3slnPzN5u4F5H4tWUb8VDevcxsxOzk2Z2JF6IaFvcYD4JeBBY38zea2tSM/sH7nVdBg85vhn3+G1iZpbGDMWN/A1xg+1o4HpgYDLGm83euIG+b5JnSbzQUl7ue/D2SysDN+D6nQ5s3FZF56SHrfHc4OvTNavgBc2mkop3mdm9uGG9Hl5Q7Gd4K6rp7ch8I/A4bsD+rtaFdoFu62VXvHXYXsDdePj8tcDgrIp3EzgI+E8jF7ZGwk4QBEEQBEG3pxL/1AXVSB65V4FdzezyrpUmCOYZlgHea2mZyowoJt2pVCrQp08PJk+OypmdSei5PELX5RG6LofQc3mErusj0xewLB6d2SYRJr2AIWlhOq5ePN/8mElaiBoiIMysPe/rPI+k7DMtFuCqxudmNtefcVfqttByqS1m5PKzm0qlUmE++jEJgiAIgiBYIAljeD4k9RoeZGb9q5weDWzQwRRZr9n5gUuBnWsY1+YDAklDgaPNrK4WSJL2x1tHLQscZ2bH1nN9O/PugldCXi21qFodD4u/MB3viB/g+d1zS126lfQ/eN/qb+Ch+ycx+zrGAJjZoPYmy0UtdMQxksbi3/lrzewXVeZaEq/yDbBGrSHiYQwHQRAEQRB0f8IYXvDYE+ioC/UnZjae8vvfdgZDgbPLvmkqKHYqXhTrVGoz3hrlp8A6eA72WjWML7ZTapSh1Kfbo/FK4T/GW3NNwOX+b3sXVeENalvnG2b2hqTzgV9LutrM7iiMORYvHrb+PJIrHQRBEARBEJREGMMLGFlxqgWFZNSP74JbL4eHEN9iZn/taHAzMLMWvGp4KTSg297As2Y2Knes7qJuZvYpXmG6Vn4PbA6cJ2n11FoJSd8DfgucbGZ/q1eOIAiCIAiCoHsTxnA3JeWI7o/35u0PvA6cj3shszG/Ao7A+7M+DBxsZk/XcY/+uEdzB2BHYCNgMh6Se1w+H1PSHsABwFeBN/EQ2uFZ5d8Uur0y3hZnR2Ai3jpoQ7ylzzfxlkN/BQ4xsxdyc/8Mr5Q8APgAuAU41MzeTeeHAjvhhs0JeBueCen+I2pdb5prcbyFzy+ApYG/4F7M4rj1cK/iWngrq5G4ft/OhTEDXCrpUjOrpHztg/Hq318BZuDtpw43swdyepotxL29YmZZCHd63QockypF17reUnSbZMu/3jW9nRkmXeWahXBDdg/8uzMBOMvMzqr1vgBm9oGkXwL3pDXsm9pnXYL3iD6qnvmCIAiCIAiC+YNordR9OQk4GbgND4+9BG8L9Id0/ku4kXQEbsz2AsZIWqWBe50HvIe3T7oSD489ITsp6VA8X/W+JMvZePunCwvzrI+3FPpxknNVvGXTE+m63XFja1QyhJB0BN56aRze2ukYvEfvGElL5Obul+57BrAFbjxeKWlAnWu9CvglbhD/FNfbgfkBktbH81A/BLbHH0oMAh5IMt2B6wrcYF4nvT4RN7wuAH6Y7tMLuCHlrjbCxfhnT7rPxbVeWLJu18F7Nz+dXhfDlatxHjAM/0y2wls/nS7pyDruC8xsW3URsJekNfDP9GvAkORprotKJbYyttB16Hl+20LXoev5bQs9h67n1a1WwjPcDZHUEzfAzjKzQ9Lh+yStiBucb+JVhbcxs8fTNeOAV4D9cO9kPTxpZjul13dJWhrYX9JxQAXvRXyBmf02jblHUgtwsaTTzOy5dPwLwJ5mNjHJ9HNgCeB4M3sjHZuI9+RdKlUMPgK40Mz2za3/n7gHeVfg3HR4SWAPMxudxryIexK3AGZ6mdsjFaL6CfBrMzs/HbsbeBYv+pRxAp53u2XO8z0OeB7YzczOkZR54F/O9R9eCTgs79mU9DHeK/hbuFFaF2Y2MemMtvoct7HW5ShRt2Y2TtL7eTkltSff1/GHBYea2R/T4XskzQAOk3RuCguvh4OBzfCHBwOAoWb29zrnAKBnz6UauSxogN69OypxEDSD0HN5hK7LI3RdDqHn8ghdN58whrsna+Of3U35g5kxmkJtX8kM4XRukqRHcGO5Xq4svL8RD5tdBzeGlwBuK7S7GZn2g/FQVICWzBBOjMNDjB+XdD1wJzDGzB5L69gMWAz3XubX+aCkCbg39tzcqUdyr7P71GO1rFeQHTObIekGUiht8uCujXvlK7k1vwL8K633nGqTm9mOaY6+uAf8a7jHE3ydZbI25eq2XjbEv1sjC9+r23Ajfj08pLtmzOz9FC59J/7dO6lR4aZMmcb06dFouDOpVPyPfktL9FTsTELP5RG6Lo/QdTmEnssjdF0fmb5qIYzh7knvtJ8jlzXHpCrH3sLDlOvl9SrzgIf4ZqH2o6jOSrnXH+RPpHY6G+Ah03vgBvYUSefg3uZeaWi1tUwCehbm+zD3ekbyPNaTCpDdb3LheL7a8XJpzkPSVuSjtiaX9B3cwFwLD7F+Dngtna4joKMplK3besm+48+1cX6lNo63i5ndlWS/O/PqN0JrK/HHqCRC1+UQei6P0HV5hK7LIfRcHqHr5hPGcPdkStr3JdcmJ+UDfwVYhFnGTp4Vad+Abos+hfcrpP1bwOLp9Y54cawib7Y3cfICbytpUWAg3vrpcLyw1Dtp2IrM2Q6oH+6NbSaZEbwCs4xUmGWYAbyPN5j9EwWvauLDKseyVkt34T1tVwdeSEbl5nhodkYrHuKeZ+laF1AHZeu2Xqak/YbA1CrnX6tyLAiCIAiCIAhqJgpodU8exSsvb1U4fhBwLfA5IElfyU5IWhlYF3iggfttU3i/HW70jUvbp8AXzeyJbAOm47m1q7U1qaT9JU2QtJiZfWpm9+PVscGLaz0KfIIXAMtftx7u4X6ogbW0x/1p/9PC8Zl6Tm15ngIGFNb7HF6AalAbcw/AjeozzOz5XCXuzdI++1l8H+iTqlpnDOxA7kY8nGXrtl6ydlR9Cnrui1cf7932pUEQBEEQBEHQMeEZ7oaY2WRJpwMHSvoEGAt8D9gbLxL0bTwX9zZJh+OexuF4D9ozGrjl9pLexEOhBwH74O2ApgHTJJ0EDE/ezzHAF9P9WnEPb1vcj1fAvlnS2bgBvRdupI00s3cknQgcJekzPJd3tTT388AVDaylTczsJUkXAsel1jtP422QvlUYehhe8fpq4Gpcvwfjn8HwtqbHDd3DJU3HH2Zsh1fQhln5t7fjRc4ulnQJ3n7qINo3eKcASNoBGGdmr9aw1lJ1Wy9m9qykq4CLUmupJ/A86+PxatbVohCCIAiCIAiCoGbCM9x9OQQ4FO+HewdutO1rZpmx+xTeSuY8YATwMrCemb3dwL2OxKsp34qH9O5jZidmJ83sSLxVzba4wXwS8CCwvpm919akZvYP3Ou6DB5yfDPu8dvEzCyNGYob+RviBtvReIudgckYbzZ74wb6vkmeJYHjCnLfA2yK9769AdfvdGDjtio6Jz1sjecGX5+uWQUvaDaVVLwrtQA6OL2/E/gZ3opqejsy3wg8jhuwv6t1oV2g23rZFe+bvRdwNx4+fy0weG7yfZtBayTsBEEQBEEQdHsq8U9d0BbJI/cqsKuZXd610gTBPMEywHstLVOZEcWkO5VKBfr06cHkyVE5szMJPZdH6Lo8QtflEHouj9B1fWT6ApbFIzPbJMKkF0AkLUzH1Yvnmx81SQtRQxSEmbXnfe0WSKowZwGuanxuZnP9GXelbgstl9piRi4/u2lUKhXmox+RIAiCIAiCBZIIk14wGY3nrLa3vdxl0jWfS+l4vZ+VJYykVklDO2n6naltrRs06X5N062kyyWNr3Fs/xrve1ThumUkfSjpM0kr1nKvargxHARBEARBEHRnwjO8YLIn0FEn6k/MbDzl97/tDIYCZ3e1ECUxEu9j3BHFdkqNMpSu0e0b1LbONwrvdwDew73nu1PIBw+CIAiCIAgWHMIYXgDJilMtKCSjfnwXi1EKZtaCVw0v637j6QLdmtmneIXpetkV7/f8CfBLSSd0Rhh1EARBEARBMO8TxnAQdDGS+uEeysFAH+BZ4Fgzuy03pg/ex3hLoB/wAd5S64BkkCJpDPAS8G+8/dXywJNpzGN1yjQAOA3vcfwRcHG675fNbFAa04p7hrcCVgdOMLNhktbHKz9/F28Z9Tpe6XpYZnhKWi7Nn1XYvpAqaRuStsarmX8TbyF1HXBYI9WuJX0Db391MvAmHiHxQ7wCehAEQRAEQbCAEcZwEHQhklbA2yJ9jPcvbgF2AW6RNMTMrk5Fse4AeuEttSbhvY+PBc7HDbqM7YB/Ab/BjctTgBsl9a+1HVEyvP8KvIV7Ur8ADANWBYqtow7DW3wZMF7SGnhO+l/wtlAVYEe8bdMLwLWp6NZdQH+8h3IL8HvceJ4Z1izpF3gf56uBI9L444HVJQ1uoADYbsA7wO1m9omkl/C2TXUbw5WKb0Hnkek39Ny5hJ7LI3RdHqHrcgg9l0fouj7q0VMYw0HQtRwI9AW+bmYT0rFRku4DTpF0DbAiMA04yMweSmPGSPoq8KvCfIsAm5rZ+wCSeuBe2TVxL3Et7IfnlK9pZm+kecYBL1YZ+6CZnZa9kTQEuBcYkvMC3wv8CBiE9wneDDd8NzOzu9KY0eTCrdMDgD8Cd5nZTrnj/wbuAzbHHxDURKo8vRPwZzP7JB2+HDhG0spm9p9a5wLo2XOpeoYHc0Hv3h2VNwiaQei5PELX5RG6LofQc3mErptPGMNB0LUMAh7OGcIZVwGXAQPM7HlgQ0mVVEX5a8AA4PvAYoXrnssM4cTEtK/HetswyTTTS2tmEyQ9zJwF1Z7JvzGzEcAISYtL+nqSdU38d00m63rAp8DdueumSRrFrCrXAr4EHF9ooTQW7xc3mDqMYWALYAXgZkk907HbgOHAHrjnumamTJnG9OmRatyZVCr+R7+lJXoqdiah5/IIXZdH6LocQs/lEbquj0xftRDGcBB0Lb2AV6ocn5T2PQEk7QicAKyMh/o+DXxY5briscxiq6eNWl/gqSrH38S91Hk+yL+RtARwFjAE91K/CjyMtznKDOlewDtVwpz/m3vdO+3PTVuRldpfwhzslvajq5zbXdLwenoht7YSf4xKInRdDqHn8ghdl0fouhxCz+URum4+YQwHQdfyDnMamODFqgAmSxoIXAmcCZxiZq8DSDoJL3DVbCbiXtQiy9dw7Rl43vL2wH1ZoStJb+XGTAb6SFq4kMfcO/d6Str/DhhT5T7v1iAL6d4r4GHV5wLXF06vg+chbwXcXOucQRAEQRAEQfenHm9REATNZyywrqRVC8d3wr3DLwHr4j+rQ3OG8MJ4qDCpIFWzZVpH0kwjPVW8XqeGawcCD5jZrTlD+H9xb3Mm52j8Qdw2ufkXBTbJzfMCXsBrNTN7ItvwytQnAt+uYz1D0v1ON7Mx+Q04HQ+73rOO+YIgCIIgCIL5gPAMB0HXchpurI2WNBSvrLwznre7m5nNkJS1RTpb0qV4mPE+wBrp+FLA1CbKdCawL3C3pGHp2JHAoswKu26Lx4DtJe2FV7VeA68E3ZrkxMxGS7obuFjS8sAEvGhXX9wAxsw+l3Q4cIGkz4GReMj4kXguca3FwMArYj9pZv8unjCzjyTdAOwqaTUze7WOeYMgCIIgCIJuTHiGg6ALMbNJuOf3STzX9gZgFWBrM7ssjRmDG7/rAnfiBvRrwLZpmvWaLNMU4AfA28AIPLz4JuBRCjnCVTgQDzc+FrgdL051LHAR7m1eOI3bFi8SNgzvHTwR7zWcl+NiYAd83SOB8/Ac5A1qNVolfQ/4Bl7Fui2uxPOZa/YOt0bCThAEQRAEQbenEv/UBUGQJxmQvczsztyxL+AG+LVmdmCXCdf1LAO819IylRlRTLpTqVSgT58eTJ4clTM7k9BzeYSuyyN0XQ6h5/IIXddHpi9gWTwdrk0iTDoIFhCSV7ajNuStuGf6uhQiPQYPb/4VHqZ8USeKWBe1rqdQpCsIgiAIgiAIgDCGg6A0JLUCx5jZ0C4S4WWgWKiryFgzGySpN7A3Xs35U2AcsL6Z/avZQkm6HBhkZv3rvLSm9QCDJG2H5w6vCfTBq3g/iFfnfqzty6tTqVTw5wZBEARBEARBdyWM4SBYcNgKWKyDMVMBzOx84PxOl2juqGU9H0r6C7NylH+Dt3ZaBfd2PyzpF2b2l3puHMZwEARBEARB9yeM4SBYQDCzZ7tahmZSy3okHQ38FNjOzG4snPszXuzrPEkjzeyjzpE0CIIgCIIgmBcJYzgIuojUu/c4vF9wH+BZ4Fgzuy03pg9wDLAl0A+v5jwWOMDMxqcxY/B+xP/Gq04vj1enPqDeEGBJA/Bq1QOBj4CL032/bGaD0phWYCjumV0dOMHMhklaHzgc+C6eZ/w6cAUwzMxmpGuXS/Nvjef7XkiVqvaStsbbKH0TmIJXnD4s611c41qWBA4Gri8awgCpbdURwNG4zibUOncQBEEQBEHQ/QljOAi6AEkrAI8DHwOH4f2FdwFukTTEzK6WVAHuwPsKHwJMAr6Ftyo6H/hhbsrt8L6+v8GNy1OAGyX1r7WAVDK8/4r3+t0V//0wDM/LHVcYfhhwKGDAeElrAKOBvwA/ww3dHXFD8wXgWkkLAXcB/YGD0pp/jxvPb+Tk+AVwddqOSOOPB1aXNNjMao1P3hhYGrimrQHJu7xdjfPNpFLxLeg8Mv2GnjuX0HN5hK7LI3RdDqHn8ghd10c9egpjOAi6hgOBvsDXzSzzSI6SdB9wiqRrgBWBacBBZvZQGjNG0lfxfNc8iwCbmtn7AJJ64F7ZNXEvcS3sB/QA1jSzN9I844AXq4x90MxOy95IGgLcCwzJeYHvBX4EDML7/G6GG76bmdldacxoYHxungrwR+AuM9spd/zfwH3A5vgDglr4StrPJn8yyove6BmZ3LXQs+dStQ4N5pLevXt0tQgLBKHn8ghdl0fouhxCz+URum4+YQwHQdcwCHg4ZwhnXAVcBgwws+eBDSVVJPUHvgYMAL7PnIWjnssM4cTEtK/HatswyTTTS2tmEyQ9zJwtjJ7JvzGzEcAISYtL+nqSdU38d0wm63p4Zeq7c9dNkzQK2CAdEvAl4PjU2zhjLN4nbjC1G8NzhF8nhuHh3HmOwUO/a2LKlGlMnx6NhjuTSsX/6Le0RE/FziT0XB6h6/IIXZdD6Lk8Qtf1kemrFsIYDoKuoRfwSpXjk9K+J4CkHYETgJXxdkBPAx9Wua54LLPU2jIIq9EXeKrK8TdxL3WeD/JvJC0BnAUMwb3UrwIPA58xy5DuBbxTJcz5v7nXvdP+3LQVWan9JcxG9qChP/Bc7vi5wC2594/XMScAra3EH6OSCF2XQ+i5PELX5RG6LofQc3mErptPGMNB0DW8w5wGJnixKoDJkgYCVwJn4v1wXweQdBJe4KrZTARWqHJ8+RquPQPPvd0euC8rdCXprdyYyUAfSQsX8ph7515PSfvfAWOq3OfdGmTJuBfPyf4pOW9y8nznc5TrmDIIgiAIgiCYX6jHaxQEQfMYC6wradXC8Z1w7/BLwLr4z+jQnCG8MB4qnOW+NlumdSTNNNJTxet1arh2IPCAmd2aM4T/F/c2Z3KOxh/AbZObf1Fgk9w8L+AFvFYzsyeyDa9MfSLw7VoXY2bv4ZWr/0/Sj6uNkfTNWucLgiAIgiAI5i/CMxwEXcNpeEjxaElD8crKO+N5u7ultj9ZW6SzJV2KhxnvA6yRji8FTG2iTGcC+wJ3SxqWjh0JLMqssOu2eAzYXtJeeFXrNfBK0K1JTsxstKS7gYslZa2M9sMN5rfSmM8lHQ5cIOlzYCQeMn4knktcazGwjKPSdTdKuh7vK/wG7oHfEq98/TpuqAdBEARBEAQLEOEZDoIuwMwm4Z7fJ/Fc2xuAVYCtzeyyNGYMbvyuC9yJG9CvAdumadZrskxTgB8AbwMj8Nzam4BHKeQIV+FA3NA8Frgd2CO9vgj3Ni+cxm2LFwkbhvcOnoj3Gs7LcTGwA77ukcB5eA7yBmb2ap1r+tzMdsYrWS8EnISHT5+DG8T74RW9H6xn3tZI2AmCIAiCIOj2VOKfuiAIACR9D+hlZnfmjn0BN8CvNbMDu0y4eYdlgPdaWqYyI4pJdyqVCvTp04PJk6NyZmcSei6P0HV5hK7LIfRcHqHr+sj0BSyLdyNpkwiTDoL5nOSV7aj9eCvumb4uhUiPwcObf4WHKV/UiSLWRa3rKRTpCoIgCIIgCILZCGM4CLoASa3AMWY2tITbvQwUC3UVGWtmgyT1BvbGqzl/CowD1jezf3WyjABIuhwYZGb92xlW03rwXs75udt7ljrNzJauQUQAKpUK/vwgCIIgCIIg6K6EMRwE8z9bAYt1MGYqgJmdD5zf6RLNHTWvpwqXABdXOV6XFzmM4SAIgiAIgu5PGMNBMJ9jZs92tQzNZC7XM9HMxjVNmCAIgiAIgqDbEsZwEMwDpH6+x+E9hPsAzwLHmtltuTF9gGPwlkD98ArPY4EDzGx8GjMG71H8b7wS9fJ4xeoDzCxr1VSrTAPwCtYDgY9wj2o/4MtmNiiNaQWG4t7a1YETzGyYpPWBw4Hv4rnHrwNXAMPMbEa6drk0/9Z4DvCFVKlwL2lrvLXSN4EpeBXqw7J+xkEQBEEQBEHQCGEMB0EXI2kF4HHgY+AwvOfwLsAtkoaY2dWSKsAdeK/hQ4BJwLfw9kXnAz/MTbkd3uv3N7hxeQreZ7d/rUWlkuH9V7z/767474pheK5u0bN6GHAoYMB4SWvgfXv/gvfxrQA7AkcDLwDXSloIuAvoDxyU1vx73Hh+IyfHL4Cr03ZEGn88sLqkwWZWb6zyQqlC9myY2fR6JqlUfAs6j0y/oefOJfRcHqHr8ghdl0PouTxC1/VRj57CGA6CrudAoC/e73ZCOjZK0n3AKZKuAVYEpgEHmdlDacwYSV/FKz7nWQTY1MzeB5DUA/fKrol7iWthP6AHsKaZvZHmGQe8WGXsg2Z2WvZG0hC8l++QnBf4XuBHeFGra/G+v98FNjOzu9KY0cD43DwV4I/AXWa2U+74v4H7gM3xBwT1cGTaZkNSv9T7uSZ69lyqztsGjdK7d4+uFmGBIPRcHqHr8ghdl0PouTxC180njOEg6HoGAQ/nDOGMq4DLgAFm9jywoaSKpP7A14ABwPeZs5jUc5khnJiY9vVYcBsmmWZ6ac1sgqSHmbOt0TP5N2Y2AhghaXFJX0+yron/vslkXQ+vVn137rppkkYBG6RDAr4EHF/w5o7Fe8YNpn5j+CI8HLvI5HommTJlGtOnR6PhzqRS8T/6LS3RU7EzCT2XR+i6PELX5RB6Lo/QdX1k+qqFMIaDoOvpBbxS5XjmqewJIGlH4ARgZeAd4GngwyrXFY9lVtsc+bjt0Bd4qsrxN3EvdZ4P8m8kLQGcBQzBvdSvAg8DnzHLkO4FvFMlzPm/ude90/7ctBVZqf0lVOUNM3uigetmo7WV+GNUEqHrcgg9l0foujxC1+UQei6P0HXzCWM4CLqed5jTwAQvVgUwWdJA4ErgTOAUM3sdQNJJeIGrZjMRWKHK8eVruPYMPG95e+C+rNCVpLdyYyYDfSQtXMhj7p17PSXtfweMqXKfd2uQJQiCIAiCIAiqUo+nKAiCzmEssK6kVQvHd8K9wy8B6+I/r0NzhvDCeKgwqSBVs2VaR9JMIz1VvF6nhmsHAg+Y2a05Q/h/cW9zJudo/GHcNrn5FwU2yc3zAl7AazUzeyLb8MrUJwLfbnBtQRAEQRAEQRCe4SCYBzgNDykeLWkoXll5ZzxvdzczmyEpa4t0tqRL8TDjfYA10vGlgKlNlOlMYF/gbknD0rEjgUWZFXbdFo8B20vaC69qvQZeCbo1yYmZjZZ0N3CxpOWBCXjRrr64AYyZfS7pcOACSZ8DI/GQ8SPxXOJai4EFQRAEQRAEwRyEZzgIuphUxXhd3Lg7C7gBWAXY2swuS2PG4MbvusCduAH9GrBtmma9Jss0BfgB8DYwAs/ZvQl4lEKOcBUOBG7G2z7dDuyRXl+Ee5sXTuO2xYuEDcN7B0+kUNzKzC4GdsDXPRI4D89B3sDMXp2bNc4NrZGwEwRBEARB0O2pxD91QRAUkfQ9oJeZ3Zk79gXcAL/WzA7sMuG6lmWA91papjIjikl3KpUK9OnTg8mTo3JmZxJ6Lo/QdXmErssh9Fweoev6yPQFLIt3IGmTCJMOggWI5JXtqBV5K+6Zvi6FSI/Bw5t/hYcpX9SJItZFrespFOkKgiAIgiAIgjCGg6BsJLUCx5jZ0C64/ctAsVBXkbFmNkhSb2BvvJrzp8A4YH0z+1dnCCbpcmCQmfWv47Ja1vNo8nTnmY63iboDONzM6uozXKlU8GcGQRAEQRAEQXcljOEgWLDYClisgzFTAczsfOD8Tpdo7qhlPcvg1auPxY1fgMUBAccA36DOnOswhoMgCIIgCLo/YQwHwQKEmT3b1TI0k1rWI6l/evmymY3LnRoj6VPgUkmrm9lznSFjEARBEARBMG8SxnAQdDGpf+9xeM/gPsCzwLFmdltuTB/ci7kl0A+v6DwWOMDMxqcxY/CexP/GK08vj1eoPsDMstZMtco0AK9YPRD4CLg43ffLZjYojWkFhuLe2dWBE8xsmKT1gcOB7+K5xq8DVwDDzGxGuna5NP/WeM7vhVSpbi9pa7yV0jeBKXjV6cOy/sVN4N20DzdvEARBEATBAkYYw0HQhUhaAXgc+Bg4DO8xvAtwi6QhZna1pAoe3tsLOASYBHwLD/s9H/hhbsrt8N6+v8GNy1OAGyX1r7WIVDK8/4r3+90V/z0xDM/NHVcYfhhwKGDAeElr4CHJfwF+hhu6OwJHAy8A10paCLgL6A8clNb8e9x4fiMnxy+Aq9N2RBp/PLC6pMFmVq8Bu1CqiA2wCPD1NO/9ZvZ8PRNVKr4FnUem39Bz5xJ6Lo/QdXmErssh9Fweoev6qEdPYQwHQddyINAX+LqZTUjHRkm6DzhF0jXAisA04CAzeyiNGSPpq3iF5zyLAJua2fsAknrgXtk1cS9xLewH9ADWNLM30jzjgBerjH3QzE7L3kgaAtwLDMl5ge8FfgQMAq4FNsMN383M7K40ZjQwPjdPBfgjcJeZ7ZQ7/m/gPmBzZuX/1solacvzDrBBnfPQs+dS9V4SNEjv3j26WoQFgtBzeYSuyyN0XQ6h5/IIXTefMIaDoGsZBDycM4QzrgIuAwYkr+WGkiop//VrwADg+8xZPOq5zBBOTEz7eqy3DZNMM720ZjZB0sPM2cbomfwbMxsBjJC0uKSvJ1nXxH/XZLKuh1envjt33TRJo5hlmAr4EnB8zpsLHhr+Ph5SXq8xfAxwe3q9CLAysD/wsKRBZvZUrRNNmTKN6dOj0XBnUqn4H/2Wluip2JmEnssjdF0eoetyCD2XR+i6PjJ91UIYw0HQtfQCXqlyfFLa9wSQtCNwAm7AvQM8DXxY5briscximyMftx36AtUMwzdxL3WeD/JvJC0BnAUMwQ3OV4GHgc+YZUj3At6pEub839zr3ml/btqKrNT+Eqoy3syeyL1/JBng/8Fzn39U60StrcQfo5IIXZdD6Lk8QtflEbouh9BzeYSum089/yAHQdB83mFOAxO8WBXAZEkDgSuBG4EvmVlvM9sYeKSTZJoIrFDl+PI1XHsGnre8PdDDzL5iZkNwYzhjMtBH0sKFa3vnXk9J+98Ba1XZDq1Blg4xsw/wXOavNWO+IAiCIAiCoPsQxnAQdC1jgXUlrVo4vhPuHX4JWBf/WR1qZq8DJENycHrd7J/jscA6kmYa6ani9To1XDsQeMDMbs0qPkv6X9zbnMk5Go9K2SY3/6LAJrl5XsALeK1mZk9kG16Z+kTg2w2ubTYkLYuHZP+7GfMFQRAEQRAE3YcIkw6CruU0PKR4tKSheGXlnfG83d3MbIakrC3S2ZIuxcOM9wHWSMeXAqY2UaYzgX2BuyUNS8eOBBZlVth1WzwGbC9pL7yq9Rp4xebWJCdmNlrS3cDFkpYHJuBFu/riBjBm9rmkw4ELJH0OjMRDxo/Ec4lrLQaW5yuS1s69XxGvYr0McHID8wVBEARBEATdmPAMB0EXYmaTcM/vk3iu7Q3AKsDWZnZZGjMGN37XBe7EDejXgG3TNOs1WaYpwA+At4EReM7uTcCjFHKEq3AgcDPe9ul2YI/0+iLc25yFRm+LFwkbhvcOnoj3Gs7LcTGwA77ukcB5eA7yBmb2agNLOwIPLX8E+BtwKV6le1Mze7CeiVojYScIgiAIgqDbU4l/6oIgyCPpe0AvM7szd+wLuAF+rZkd2GXCdT3LAO+1tExlRhST7lQqFejTpweTJ0flzM4k9FweoevyCF2XQ+i5PELX9ZHpC1gW70LSJhEmHQQLCMkr21Eb8lbcM31dCpEeg4c3/woPU76ojbkrVapDN4W25q51PWb2eWfIFQRBEARBEHRvIkw6CEpCUmvKC+4qXsarOre3TcfDo/fGQ5nvwMOZFwXWN7N/5SeUtJikPwG/6AyBJR0BHNzG6VrWM7qNeXtIelXSLo3IVal0ZIMHQRAEQRAE8zrhGQ6CBYetgMXaOb8U3lLpqZSnfH4Nc/YD9gd2nVvh2mA4cEwb5zpaD1QpLCZpOeBWoH+jQrkxHHFKQRAEQRAE3ZkwhoNgAcHMnu1qGZpJI+uR9CO8WnaP5ksUBEEQBEEQdCfCGA6CLiL17j0O7xfcB3gWONbMbsuN6YN7RrfEvbAf4H2ADzCz8WnMGLwf8b/xqtPL49WpDzCzrC1TLfIMAh4AfmBmY1JI907Ab4ET8H68E4DhZjZCUn+8ujPAZZKGmln/NNd6eBXptYCP8WrQB5vZ2+n8LsDFwPeB0/G+wW8CZ5nZKWlM5no9WtLRZjZXscmSeuKVrq/CK3c/PjfzBUEQBEEQBN2bMIaDoAuQtAJujH0MHIb3F94FuEXSEDO7WlIFz9ntBRwCTAK+hRuZ5wM/zE25Hd7X9zd4LYBTgBsl9Z/LAlL9gLPTPScAvwOulPQ4bghvi7ddOjbtkbQ+cB+er7t9kn848ICktczsozT3QsBf8FZRhwO7AydLetbM7gbWwdsgXYIbznPLh8A3zMySId8wlYpvQeeR6Tf03LmEnssjdF0eoetyCD2XR+i6PurRUxjDQdA1HAj0Bb5uZhPSsVGS7gNOkXQNsCLeB/cgM3sojRkj6at4dec8i+D9ct8HLxAFXAGsiXuJG2VJYA8zG53mfRE3ircws1MlPZ3GvWxm2esTAAO2zAxxSeOA54HdgHPSuAowzMwuSWP+hhvXWwJ3m9k4SQATzWzcXKwBADP7NMk11/TsuVQzpglqoHfviGgvg9BzeYSuyyN0XQ6h5/IIXTefMIaDoGsYBDycM4QzrgIuAwaY2fPAhpIqyZP5NWAAHlpcLBz1XGYIJyamfTOstkdqnVfSksDawMlAJfUnBngF91wPZpYxPNvcZvaJpLfnVuYqLZdmmFlTuwJPmTKN6dOj0XBnUqn4H/2Wluip2JmEnssjdF0eoetyCD2XR+i6PjJ91UIYw0HQNfTCDcQik9K+J4CkHXFP68rAO8DTeLhvkeKxzFKb6/ZpZvZh7vWM5K1ta97l0rlD0lbko8L7anLPrcwvA6vm3l+Bh6A3jdZW4o9RSYSuyyH0XB6h6/IIXZdD6Lk8QtfNJ4zhIOga3sHDoIv0S/vJkgYCV+LVj08xs9cBJJ0EDCxFyvp5H+859CfgmirnqxnyzabYcmlyCfcMgiAIgiAIuhlhDAdB1zAW+K2kVQuh0jvh3uGXgG1wL+lQM3sPZoYAD06vF2p2+G8DzFacy8ymSnoKD/N+IjsuaQngBrwg2PN1zF/3+ua3FlJBEARBEARB5xDGcBB0DacBQ4DRqYVRC7AzsCGwWwpHztoinS3pUjy0eh9gjXR8KWBqqVLPyXtpv5Gkf5nZo3h17FGSrgauBhYGDga+h1eVrocpwPdTheoHzSyCg4IgCIIgCIKmMNf5hEEQ1I+ZTQLWxSs9n4V7TVcBtjazy9KYMbjxuy5wJ25Av4ZXXAZYr1yp5yQV7ToN+DFwp6RFzOweYFM8z/kGYAQwHdi4garQxwHfwde/ctMEn0taI2EnCIIgCIKg21OJf+qCIAhqZhngvZaWqczo6gD1+ZxKBfr06cHkyVE5szMJPZdH6Lo8QtflEHouj9B1fWT6ApbF69m0SYRJB8FcIqnSWeG7zZi7SquharRmPYHnVeaXdQRBEARBEATzBmEMB6UgqRU4xsyGdrUs1ZA0CHgA+EEKT67lmsWAE4En8NzYZst0BPAJ3rO3lvErA+OB881sn9ypYquhtq6vdvg6M/t5Oj8ez1v+ppm9VuX6mZ+xpDHABh3c8goz2yWNxcwGtSHXeGAM3pu5o3V8IOnXZnZV7vqOZHnUzNbuYN7ZqFQqeNHsIAiCIAiCoLsSxnAQOE8B61BfpeN+wP7Arp0hEF5s6phaB5vZfyTdB2wv6bdmNj2dyrcaOhjYEvgh8DFwG97v+Ew8H7lIsS1RD+BiYJMOxNkbDynOODd3POPtDuYokq3jArx42Im5cwsDKwA/A0ZIesfMRuXOP124d566i5CFMRwEQRAEQdD9CWM4CJhZCKre4k7zIpfghuqmeBujma2GJC0CbARcY2YPpWOfAi+Z2V9qnH8KMFjSL83sorYGmdlsDxUkvZ+ON6zj3DqmAlPN7PLiGEnnAG8BuwB5Y/j9ubl3EARBEARBMP8RxnDQJUjqh1cKHgz0AZ4FjjWz23Jj+uCe0S1xL+wHeH/eA8xsfBozBu/J+2+88vLyeIXmA8wsa01UizyDyIVJp3ZHOwG/BU4ABEwAhpvZCEn9gVfT5ZdJGmpm/dNc6wHHAmvh3teRwMFm9nY6vwvuXf0+cDrwbeBN4CwzOyWNydyOR0s62sw6ypXNuBV4B9iRZAzn2ALX9SU1zlWN2/Cq16dIusvM/jMXc3UGH+Gh5eG2DYIgCIIgCNoljOGgdCStADyOG4qH4T12dwFukTTEzK6WVMGNuV7AIcAk4Fu4kXk+HuabsR3wL+A3eLuwU4AbJfWfy2JK/YCz0z0nAL8DrpT0OG4IbwvclM7flNa2PnAfMBrYPsk/HHhA0lpm9lGaeyHgL3hbosOB3YGTJT1rZnfjIduP4IbrxbUKbGafpP6+u0ta2sw+yJ3+P+C5Kh7SiqSqvwtyodYZrUnWfwAXMfvnUCZFmb+A5xMfhYdyj+hgfJ7Po39xEARBEATBgkcYw0FXcCDQF/i6mU1Ix0alfNdTJF0DrAhMAw7KQnqBMZK+CvyqMN8iwKYp1BlJPYArgDVxL3GjLAnsYWaj07wv4kbxFmZ2qqSn07iXzSx7fQJgwJaZIS5pHJ6LvBtwThpXAYaZ2SVpzN9w43pL4G4zG5cKWk1sILz3EvzBwDbAVWn+3rhn+A9Vxv9f2uYgGfBP5I+Z2SuSDgXOlLSHmdVsrDeR9YHPCsda8QiDn5rZ7TWMz/gp3g+5ZioV34LOI9Nv6LlzCT2XR+i6PELX5RB6Lo/QdX3Uo6cwhoOuYBDwcM4QzrgKuAwYkHJON5RUSSHJXwMG4KHFixWuey4zhBMT036pJsj6SK3zSloSWBuv/pz3RL6Ce64HM8sYnm3u5NF9uxkym9nfJT2Fh0pnVZV3SPuixxTgdtou1NVWQbGzcY/8qSlcemIb42qhlRpaJhXePwXsmV6vhIfcLwJsb2ZW5fr8+CIv1yjnTHr2bMZXK6iF3r17dLUICwSh5/IIXZdH6LocQs/lEbpuPmEMB11BL9xALDIp7XsCSNoR97SujOfBPg18WOW64rEZab/Q3ApqZh/mXs9I3tq25l0unTskbUU+KryvJvdcy5y4FDhd0vJm9hbu+b3VzIrVoQFait7fjjCzVkm7MStcerO5kHUa0Lud84ulMXmm5mWW9GiS5V5J/1+VdU6td43tMWXKNKZPn9HxwKBhKhX/o9/SMpXWCGLvNELP5RG6Lo/QdTmEnssjdF0fmb5qIYzhoCt4Bw+DLtIv7SdLGghcibf8OcXMXgeQdBIwsBQp6+d93IP5J+CaKuerGfKdxdV47vT2Kfx8LeDIZt7AzF6WdBhudO82F1NNAv6n2onUy7kvsx6UtCXLm5L2Aa7HvzO/mAt5OqS1lfhjVBKh63IIPZdH6Lo8QtflEHouj9B182mWFyoI6mEssK6kVQvHd8KNnpeAdfHv59CcIbwwHmqMpHnhuztbcS4zm4qH4w4wsyeyDXgOD0MeVOf8DbsezWwKcDPwE7yQ12vAvY3O1w5nAQ/hhcAaZQywiqS1q5zbBu8hfH9Hk5jZDcBdwA6SNpgLeYIgCIIgCIIFgPAMB13BacAQYHRqYdQC7AxsCOyWwpGztkhnS7oUD63eB1gjHV8KmFqq1HPyXtpvJOlfZvYoXh17VKrofDVuyB0MfA+vKl0PU4DvpwrVDzZQ8fhS3DhcBbjMzNoyrvu2YYgCTG8vvDh9VrviIcqNch2wP3CHpOPxomcL4w9Efo/3RX64xrn2x4tonZnCpbMHFsu0s0aAx+ey8ngQBEEQBEHQzZgXvGvBAoaZTcINnSdxz+INuMG2tZldlsaMwY3fdYE7cQP6NbziMsB65Uo9J6lo12nAj4E7JS1iZvcAm+J5zjfgBaumAxs3UBX6OOA7+PpXbkDE0cB/gNXwwmRtsTlezKvadl9HNzGzl/D2UA1hZp8BGwAXAHvgLbVuxvV6OB4xUOtcBpyBt+H6de7Ut2l7jY/g7ZhqpjVilIIgCIIgCLo9lfinLgiCoGaWAd5raZnKjKif1alUKtCnTw8mT45iIZ1J6Lk8QtflEbouh9BzeYSu6yPTF7AsXtOnTSJMOpivSXnGHbbtmddDZOeXdQRBEARBEATBvEKESQfzOy8Dn3Wwje6MG0tqZmv0LltHMCeV6HofBEEQBEHQ7QnPcNAhklqBY8xsaFfLUg1Jg4AHgB+kXOM8W+F9aossAuwL/Atvx9NsmY4APgFOrvO6joJfrgDOTq8fL5wbKKkFz8U+08xurzJ31c9RUn/gVWBXM7u8cO4nwC/xvNul07hrgTNSBe3iXAsB4/E85++Y2ZN1rI9MBkljAMxsUBVZD8Fzs1fCW3U9CZyVcrbzYy/Hi7P92MxuqSJr1Xt0hBvDEacUBEEQBEHQnQljOJgfeApYB3i+eMLMnq12QTKofoEbXtYJMg3H2yk1wiXAxW2ce93M/gMgqTh2Ubx/8+7ASEm/NbMzG5QhM2pH4K2ZLgXOxyt4rw38DthG0sapjVOewUmOF4C9cEM6Y53C2EeYc70vtyPTRnhxrYnASfjDjL74Z3m3pNPN7IAql54v6a9m9k6bCw6CIAiCIAgWKMIYDro9qapzvZWa52Um1lF5utrYv0i6EThF0m1mNr5BOX6PG5nbmtnNueOjk0f1QeAo4MDCdbsCfwPuBo6QdFD6jCjKmgz6mtYr6Yt4he6/4Z7ej3Onb5B0AHCapH+a2SW5cx/irbnOAnbs6D5BEARBEATBgkEYw0HdSOqHt/0ZDPTB+7oea2a35cb0wT2jWwL9gA+AscABmXGWDKqXgH/jbZSWx8NdDzCzrM9wLfIMIhcmnXoX7wT8FjgBEDABGG5mI3IhwQCXSRpqZv3TXOsBxwJrAR8DI4GDzeztdH4X3Iv5feB0PHT4TTxE95Q0JoufPVrS0WbWFQmmh+FtqHYHjqz3YkmLAAcBdxYMYQDM7G+SjgImFa5bDtgGb4l0PXA8/lmcW68MVdgfD9P+ZcEQzmT6k6TtgSMlXZrry/w2Hl5+lKTr8t/TIAiCIAiCYMEljOGgLiStgOeqfowbXC3ALsAtkoaY2dWpcNQduDfuENxg+hZuZJ4P/DA35XZ4qOtv8IJupwA3Suo/l5WR++G5tcfihvDvgCslPY4bwtsCN6XzN6W1rY/31R2Nhwb3wsOdH5C0lpl9lOZeCPgL3mP4cNzgPFnSs2Z2Nx4KXC38t1YWklT1Z9PMptcygZmZpNeAgQ3cH+B/8QcdI9u5x7FVDu+I/1652swmSbof2JPmGMM/BJ42s4ntjLkO+BOwJvB07vixuJF+gaSH5jZculLxLeg8Mv2GnjuX0HN5hK7LI3RdDqHn8ghd10c9egpjOKiXA/Ecza+b2YR0bJSk+/Cw3GvwfNFpwEFm9lAaM0bSV4FfFeZbBNg0C6OV1AP34q2Je4kbZUlgDzMbneZ9ETeKtzCzUyVlhtLLZpa9PgEwYMvMEJc0Ds9F3g04J42rAMOyUFxJf8ON6y2Bu81sXD3hv1U4kja8uZL6mtnkGueZhH8WjbBy2r/a7qg52RX3Jmce48uAqySta2YPNyhLxmrAqA7GvJT2/ckZw2b2WfLqPwaciXurG6Znz6Xm5vKgDnr37tHVIiwQhJ7LI3RdHqHrcgg9l0fouvmEMRzUyyDg4ZwhnHEVbvgMMLPngQ0lVVJI8teAAXhocbGy83OZIZzIvH7NsDYeqXVeSUvihaFOBio5z+wruOd6MLOM4dnmNrNPJL3dJJkBLgIubOPclDrmaaTkcTY+80AvXOuFkr4F/H/AWZJ6psP34w9G9gTm1hiu4C2k2iOTe45ngmb2tKQT8Tzm68ysTa93R0yZMo3p02c0enlQA5WK/9FvaZlKaxTu7jRCz+URui6P0HU5hJ7LI3RdH5m+aiGM4aBeeuEGYpHME9gTQNKOuKd1Zbz1zdN4IaMixWOZhTHXPbDN7MPc6xnJW9vWvMulc4ekrchHhffV5G5W3+43zOyJJszzJeCfuffTqN5mitzxaWmfPexYta3JJfUF3jezT9Kh3dP+srTl2V7S/mb2bi2Ct8F43OPbHl9O++LDmozhwNakcOlGBWltJf4YlUTouhxCz+URui6P0HU5hJ7LI3TdfJr1z3uw4PAO1UNv+6X9ZEkDgSuBG4EvmVlvM9uY2T218xrv417R0/DiWcVtly6TrAEkfQP/TMbmDk/C+/JW40u5MQDP4IXBNm/nNhcBr0laVNKieL7wTcAPCttuwOLMvQ5vA74rqU0DHfgp8B9mzxeeiZl9iody9wXOmEt5giAIgiAIgm5MGMNBvYwF1q1ikOyEG1IvAevi362hZvY6gKSF8VDjrH9tVzNbcS4zm4r3Kx5gZk9kG/AcXhV7UJ3zd3UM7TG4N/uK3LExwA8lLVtl/HZ4D+EnwD3p+IOBLSRtVRws6QfAFsD1ycD8EdAbON/MxhS2y/CK4cV88Xo5E39ocZmkJarI9Gv8czo+yV8VM3sS71E8BK8GHgRBEARBECyARJh0UC+n4UbE6NTCqAXYGdgQ2C2FI2dtkc6WdCkeWr0PsEY6vhRueHUl76X9RpL+ZWaP4tWxR0m6Grgaz5c9GPgeHl5bD1OA76cK1Q/m2vzUwpckrd3GuWlm9mwbYxcBvoh/HpsCexYqLx8H/AR4SNKpwMvAsrghuzuwd6Fl0Z+ADYCbJF2IF6/6PB3bD/e+/iGN3Q14C88RrsYIYJikQWY2pr3Ft4WZ/VfSdnjEwZOSzsDzuXvh1b9/DpxjZufXMN0xeLj06o3I0hoxSkEQBEEQBN2eecFDF3QjUpXgdfFKz2cBNwCrAFsnDyDJ2NknjbsTN6BfwysuA6xXrtRzkop2nQb8GLhT0iJmdg9uRK6Mr2sEXpBp4waqQh8HfAdf/8odjC2yOx5SXm0b0c7YMbj39LMk80X5gWb2apLpCWAY3kbqMjzPdiszu6Aw/jPcYPwt3mrpClwvm+MPB35gZh9IWgnYBPcSt9UOawQehr5XHXqYAzN7AK80fjfeB/lu4Dz8ActmZrZvjfN8iodtN9S+K4zhIAiCIAiC7k8l/qkLgiComWWA91papjKjqwPh53MqFejTpweTJ0flzM4k9FweoevyCF2XQ+i5PELX9ZHpC4+AfL+9sREmHcyzpDzjjtpmt7bjjZybe1fqDG1ub64uW0fQOVQqjXStCoIgCIIgCOYlwhgOGkZSK3CMmQ3tpFu8TDutfRJjaaO4laRBwAN4OO+YWm4oaTHgRDyU+Ooa5eyIuV1Hf+DVwuFWvL2T4Xmyl+bGj+/gfteZ2c/bGTsDf4r2T+A4M7urIM9WwP546PTieA/n2/HCVW9VkX8rYG+8KvdSeLXn24E/mdl/CmNb0/lvFvpP5/Wwq5ldXji3EN56aWXgO6lIVlGO8cAYM9uleK5ewhgOgiAIgiDo/oQxHMzLbEXbfXEz2ivE9RSwDvB8Hffshxt6u9ZxTUfk1/E43pLowsKYWgqKHQvckV5XgB7AHsAlKec5n/M7iraLfk0uvC+O/QLwVbw41m2S1jKzvwNI2hnPMz4fL7A1DS9C9QdgK0nfyfcSlnQObghfi1eTfjeN3w/YRdJPUh5wnpWBU4FftqOLIoPxll8v4HnJ9VwbBEEQBEEQLICEMRzMsxSqJjdy/ftAvYWvmk5+HZIA3khtm+rl5WIhL0n34QWlDgDyxvDbdRT9qjb2IUnj8GrNOwJ/T8ePAq4xs71zYx+Q9CDem3gP4OQk2z64IbyLmV1RGH8FXlzsL5K+aWZv5s5PAfaQ9Bczu7fGNewK/A0vqHWEpIOKnuUgCIIgCIIgyBPGcNA0JPXDqygPBvoAzwLHmtltuTF98LY2W+Je2A/wEOEDzGx8GjMG71f8b7wq9fJ49eoDzCxr21SLPIPIhUmnVlA74dWRTwAETACGm9mIQjjyZZKGmln/NNd6uGd2LeBjYCRwsJm9nc7vAlwMfB84He9f+yZwlpmdksZkcbVHSzrazDrKI+6Q1Mrqabw9UrOZkvb5eOAVqVKF3sz+LulA3CDO8qSPAO4uGMLZ+KmS9sCN7X1wIzvjAmAb4OJkKLfrNZe0XBp/OHA9cDz+OZ/b0QKDIAiCIAiCBZcwhoOmIGkFPAT4Y7xfbwveuuYWSUPM7GpJFTzMtxdwCDAJ+BZuZJ4P/DA35Xa4ofQb3Pg6BbhRUv+5LDTVDzg73XMC8DvgSkmP44bwtsBN6fxNaW3r422IRuP9bHvhYcUPpBDij9LcCwF/wVs2HY63PTpZ0rNmdjcesv0IcAluODcL4XnJeSqSqv58m9n0DsYuCnwN9/B+BlyTO3c78HNJi+NrHWtmb6R5/5QbtyZuOLfZn9nMXpD0d7x9U94Y/hj39D6Ef+57tjVHYkf8d9nVZjZJ0v3pmk4zhisV34LOI9Nv6LlzCT2XR+i6PELX5RB6Lo/QdX3Uo6cwhoNmcSDQF/i6mU1Ix0alMN5TJF2DG0fTgIPM7KE0Zoykr+L5pHkWATbNQl0l9cD73K6Je4kbZUlgDzMbneZ9ETeKtzCzU5OXFTwkOXt9Al6oasvMEE8hxM8DuwHnpHEVYJiZXZLG/A03rrfEPaTjUpj0xAb6FgMslDNaFwa+iD8sWAP4dWHs/6VtDpIB/0QHY6fjRcQ2MbNncsd/le69Le6NRdLLwK3AaWb2ehq3WtqP72BNL+GRBLNhZo9IOh04UNL1ZnZfO3PsCtyZemCD5zRfJWldM3u4g/s3RM+eS3XGtEEVevfu0dUiLBCEnssjdF0eoetyCD2XR+i6+YQxHDSLQcDDOUM44yrcOBlgZs8DG0qqpJDkrwED8NDiYqGs5wo5nxPTvhlWyCO1zitpSWBt3Eua96C+gnuuBzPLGJ5tbjP7RNLbTZIZ3KN8SeHYe7gXu1iQ63Y8HL0axYJi+bFfBU4CXgd+nDMwATCz94Dt0ue3ObAh/tkfCPxK0iZm9gizWkl91sGaptN226kj8AcJF0v6n2oDJH0L+P+AsyT1TIfvxx+67Al0ijE8Zco0pk+PRsOdSaXif/RbWqKnYmcSei6P0HV5hK7LIfRcHqHr+sj0VQthDAfNohduIBbJjKmeAJJ2xD2tKwPvAE/jLYKKFI9llscc+ar1YmYf5l7PSN7atuZdLp07JG1FPiq8ryb3XMucOAY3XLN53wNeNbNqVllLHUW68mOfkPQP3Ct8p6S1zeyT4gUpv/tc4NzU1mgb4HLgLOA7zPII9+/g3l/GPfNzYGYfSdoN+Cv+MOLEKsN2T/vL0pZne0n756tbN4vWVuKPUUmErssh9FweoevyCF2XQ+i5PELXzSeM4aBZvIOHQRfpl/aTJQ0ErgTOBE7JQmolnQQMLEXK+nkfLyD1J2bPnc2oZsh3FuMbrEJdF2b2vKSjcAP0aDwHHEk/wXO7v29mL+bGzwBuSrnVWbj7k8AbwE/xVlJzIOnLuFe3mpGbzf03SWfiRc8eL1y/KJ4vfBNuhOdZDbgUz1v/E0EQBEEQBEFQoFkeqyAYC6wradXC8Z1w7/BLwLr4d25ozhBemJQzmjyMXc1sxblSJeOn8DDvJ7INeA731A6qc/7uElt7OvBP4CBJX0vH/gn0xvswV+PreAXxzEA+Bhgsaa/iQElL4Mbqe3Rc6OowvEDYqYXjP0rynG9mYwrbZXg18mIuehAEQRAEQRAA4RkOmsdpwBBgdGph1ALsjOeU7pbCkbO2SGdLuhQPrd4HLwAFnlvbbhudEngv7TeS9C8zexQ3xkZJuhq4Gi8gdTDwPdqpltwGU4DvJy/qg2bWWcEufSWt3ca56R15mM1suqTf4hW0T8cLjJmkE4FD00OPq/Cc6+Xxz34jcsWwzOxCSf8POE/SBsB1eATBANyg7gdsn1WjbkeWLFx6bOHUbsBbeI5wNUYAwyQNMrMx6dg3JO1fZezD9bTtao0YpSAIgiAIgm7PvOCJC+YDUqGldfHw2LOAG4BVgK2Tl45kkOyTxt2JG9Cv4ZWJAdYrV+o5SUW7TgN+jOfMLmJm9wCb4nnON+BG1nRg4waqQh+H59TemebrLDbHi3lV29qrzDwTM7sfX+/mkrZMxw7D20stgoe7j8Y9u58B3zWzvxbmOABvmbU0cB5wN/4g4S5gDTO7t0ZZHiQXCi1pJWAT4Pp2Wm2NwEPc857ptfCw6eK2SS1yZIQxHARBEARB0P2pxD91QRAENbMM8F5Ly1RmdJeA925KpQJ9+vRg8uSonNmZhJ7LI3RdHqHrcgg9l0fouj4yfQHL4vV/2iTCpINuR8oz7qiddms7HsN5gvllHQsilUoFdzoHQRAEQRAE3ZUIkw66FZLG4D1kP+tgG91FItbDy8wf65iJpP6SWiXt0sG48ZIuL0eqOe69laS5smTdGA6CIAiCIAi6M+EZDrojzwK/7mBMVxfiqoWtgMU6GNMd1tEIP6aDsJXOQNIg4M9l3zcIgiAIgiCY9whjOOiOTCuj325nY2bPdrUMXYWZPV3m/ST1AP4AHMKsiuFBEARBEATBAkwYw/MBksbjbW6WAnbBe9neAexvZu+kMesBx+LVdD8GRgIHm9nb6fwuwMV45d1jgUWBgcAneLXd7wNLAH8HhpvZqNz9v5ObexG8Bc4fzOy5dH4Q8ACwMW6MDMS9glcAhzWQE1uR9HtgX6Av8Aywn5k93qBMRwBrA28Dw5LuzsErDL8LnGpmp+fm7gWcAGyDJ+Y/AxxuZnWHNEv6GfA7vN3QB8AtwKFm9q6k/fC2Rn3NrCWNPzLJuHF2P0nbADcBX8L76u4E/DbJKGAC/pmNqGcNKZR4KO7BXj2NPzbdf0dgJeAN4FrgKDP7LLe0fpKuxytJf4ZXpT7QzD5Ic48HxpjZLpL6A68CO6R5NwImAxcBx6WexXPL7sAv8Wrm/YCjmzBnEARBEARB0I2JnOH5h31wg3UX3AO2BXCHpErqaTsa+BBvi7M/MAh4QNISuTkWBg7CDYcDAANux43sIcDWeP/g2yR9FUDSD4CH8UJQuwJ74C2DHpY0oCDj1cCDwJZ4qOrv0/h6GYi3Y9oXN/xWAkZK+kIDMl2DPxjYMq33fNxI/ifwI+Ax4E+SvpvmXhzva7s1cHiSYyJwl6QN61mEpCPS/ccBPwGOAbYDxqTP5Y60hvy8G6X9+rljmwFP5/r19gPOBs7AvwevAldma69zDYfhn9V2wI34w4y9cYN4E7xd0u/wBwp5hgP/Sff4E26IDu1AJefhXtttgSvT+BM6uKZWRgL9zeyCZkxWqcRWxha6Dj3Pb1voOnQ9v22h59D1vLrVSniG5x9mAIPN7D0ASW8DN+P9cY/EDb0tMy+spHHA88BuuBc04zgzuyONWRH3WM70BEt6DPeqZbmuJwL/BjbPzX0PXhxqGG58Z1xkZsPT6/uTR3NLoF4D5ZN0v8zr3RP3an8D+EedMl1qZqelMR/ghuljZnZUOvZ33DhbFzeMhwBrAGub2aNpzJ3AGOCPuCe6QyQthxuQF5rZvrnj/wT+CuxqZudKMtx7fb2kJYF18F7OG+Sm+yFwWe79ksAeOc/xi7h3eAvghTrX8GCmnzTuVOCJrHc0MFbSh8CUwhJvMLMD0+v7JW3C7EZ9NZ40s53S67skLQ3sL+m41P+5Yczs5bm5vkjPnks1c7qgHXr37tHVIiwQhJ7LI3RdHqHrcgg9l0fouvmEMTz/cGtmCCduA6bjxvDawMlAJfOeAq8A/wIGM7sx/Ezu9Zu4wXyRpE2Bu4E7MyNH0lK44XRMPtTZzKZIGglsXpDxkcL7ibjXuV6eywzhxKtp37MBmR7OvX4z7R/NXdciCaBnOrQRMAl4MqdLcM/jyZKWM7N3a1jD2vgDhWvyB83sQUkTcM/9ubh3eJt0eiDwKXAmcIGkxYCvAKvgHvw8eV1PTPtM1/Ws4ZnCvA8AJ0p6EP+O3WFmZ1dZ34OF968m+dvjysL7G/Fw73Xw7167SKrg0Q15PjezpvdAmjJlGtOnR6PhzqRS8T/6LS3RU7EzCT2XR+i6PELX5RB6Lo/QdX1k+qqFMIbnH17PvzGzGZImA0vj4fCHpK3IR4X3H+TmaJU0GPdgbgv8H/CZpJvx3OIlgQpuWBWZxCwDMuPDwvsZNBaqP63KPKS5etYpUzWPY3H+PL2BFfE82Gr0w/OMO6JXTqYieTnvAA5MebUbAX8D7gMWB74HfAf4L+4tnomZfZh7PSMZ9Jmu61nDB4VzJ6dju+Fe5JMkPQf8xsweyI2r9hl19Fm/Xnj/Vtr3Kg5sgw1wYz3PD3CPd1NpbSX+GJVE6LocQs/lEbouj9B1OYSeyyN03XzCGJ5/6JN/I2nhdOwDoBXP27ymynVFA3U2Uh7q3pL2wUNrt8NzkifjOb+tuGFVpF8aUzZT6FyZpuAh2L9o4/yrbRwvknm2V8RD2PP0wz334B7W9/FQ6Q2BG83sjRT6PAhYD/fO1vOrcQoNriEVszoHOEfS8rin/XDgJkkr1CFDNfoU3mfzvVUc2AZPMmeYelG3QRAEQRAEQQCEMTw/sbmkRc3s0/R+a/zzvRU3mAbk2xGlAk034J7H56tNKGkdvLrxlqlS8zPAM5K2AFY1s2mSngC2l3RsLj93WTwXuO7qynNLCTKNTfO8ZWavZQclHQasiVdDroVH8dznHdKc2Tzr4WHPf0zr+UzSvfjn+W3gN2no/UmObwFnlbUGSQ8Dj5vZb83sLeDypNvTgWXqlKPINsB1uffb4Q9rxtVysZlNBbp9y60gCIIgCIKgHMIYnn9YGa/yfGZ6fQJwl5mNSUbOKElX4xWdFwYOxsNsh7c1IfA0boyMkDQUD9/dGDeYzkhjDsXzOUdJOgdvyXQong87rJkLrIPOlOkyvIr1vZKOB17D864PAc4qtBdqEzN7R9KJwFGSPsPzdVfDP4/n8bZTGXcAl+Je/szYewAPVf8YD5suaw1jgYMlvYnnW38Rr0A+1swmp6JXjbJ9mncU7vXeB2/31F7YepfQGjFKQRAEQRAE3Z5orTT/cC1eLfk6vEXP5XieL2Z2D15Ia2XcGzwCL661sZm16XUzs4/x9jnP4cbv3bj3bk8zuzyNGY0byEskGS7CCzZ9z8z+2dwl1kZnypQMs/WBh4CTgDtxPf8BOLCdS6vNNRRvU7QhbgwfDVwPDCwYgKPw0O+/mdn0dGxMOvZAPj+4hDUcCRyH5wzfBZyGfy9+Uo8M7cz9DTya4SfAPmZ2YhPmbTphDAdBEARBEHR/KvFPXfdH0nhgjJnt0sWiBEHdpOJgr+LtpC7vWmk6ZBngvZaWqcyIYtKdSqUCffr0YPLkqJzZmYSeyyN0XR6h63IIPZdH6Lo+Mn0By1K9WO5MIkw66HLaaIlTjU5pk9NM5qe1zCvMizqtVCq4Yz4IgiAIgiDoroQxXCKSxgCY2aCulWSeY2c8j7UjOqVNTkatHsoOPPENryXlZR+NF9Za3szmeJIlaS/gPGCCmfUvnPsf4Hd42HVfvG/y34DTzezRwtgxeCuiPK14XvKL6Zqr0tharL7ZdCZpY+BXeD/lFfCnco/iOclt9QxeXNKHwCLAymaWtZ2q1jKpGn+XdEhx/hrk/6OZ/aGG+WcSxnAQBEEQBEH3J4zh+YCiUdQNGcmcLXGqMa+0yfkxbYdcNGMtiwBb4cXOivy82gWSdsKLbD2FtzoaD3wJ2B34m6Tfm9lphcuexnOWMxbG88oPwIumvWNmo4B1Ctc9AlwCXJw79nJOltPSHDfj7bdex1tIDQHuknRQXhYzGw9UJO0JvJfk2B3PTYY5WyYdgLeFegAvHvYW3jt5ULX5E0V58xT7GwdBEARBEAQLAGEMB12OmbUALV0tR62Y2dPtnGvGWv4GbE/BGJa0Et4m6xlgudzxb+OG8JXAr1Iv4IyrJZ0OnCLpH2aWrzz9frUCapLuxA3MXYBRxTGSACa2ce3OuLFazSC9XtJZwImSrjez/xTO74oX5foE+KWkE8xsRr5lUpr/F23M/8d25q8qbxAEQRAEQbDg0uXGcAo5vQpYCv/newbeSmZ/M3snjVkPOBb3Dn2Me98ONrO30/ldcK/PXmncosBA/J/qPwHfxysL/x0Ynrxd2f2/k5t7Ebx1zB/M7Ll0fhDugdoYbz0zEPcKXgEclvWxrYOKpN/jrW364obNfqmPbyMyHYGHor6Ntw26AzgHrwL9LnCqmZ2em7sX3nZpGzyp/Bm8fU3d/Xcl/QwPyx2Ah9feAhxqZu9K2g/vPds3GYhIOjLJuHF2P0nbADfhXsxfATsBv00yCpiAf2Yj6llDCo0dintYV0/jj0333xFYCXgDrzZ9VKGdUD9J1wM/BD7DK3AfaGYfpLnHk8Kkc6HVO6R5NwIm4xWsjysYprVyHXCqpGUKodI/xT3Kf8e9oBmH4frfr437/R73Zh9FbW2YPsJ/dhqJAz4KeAz/uavGMUB/oA8w01iV9A281dfJeHj3nrj+RxWub2j+IAiCIAiCICgyr7RW2gc3WHfB27tsAdwhqSJpfWA03u92e2B/3BB4QNISuTkWxvud7o57pgy4HTeyhwBb4x672yR9FUDSD/BeqRXcK7UHHib6sKQBBRmvBh4EtgT+jBsYezSw1oF4G5t9ccNvJWCkpC80INM1+IOBLdN6z8eN5H8CPyIZDZK+m+ZeHLg/6eLwJMdEPLR0w3oWIemIdP9xeBucY4DtgDHpc7kjrSE/70Zpv37u2GbA02b2RnrfDzgbb+W0BW5oXpmtvc41HIZ/VtsBN+IPM/bGDeJN8Nzb3+EPFPIMxw2prXGj65e4Yd0e5+EhvtviHtqhuAHeCDfgD6q2Khz/Oa7zmUhaCF/LfW21WDKzT/GQ5YGSeudOVSR9IbctLnf7Xgb0wFtw1YykbwFfBq5tq5CVmU02s62qeNd3A94Bbjezh4CX8IdbzZp/ocJaZ271rDGjUomtjC10HXqe37bQdeh6fttCz6HreXWrlS73DCdmAIPN7D0ASW/j/7xvivceNWDLzAsraRzwPP4P9Dm5eY4zszvSmBVxj+VMT7Ckx/ACRYul8ScC/wY2z819D57/OAw3vjMuMrPh6fX9yaO5JXBBnWv9JN0v83r3xL3a3wD+UadMl2ahopI+wA3Tx8zsqHTs77hxti5uGA8B1gDWzgoqpZDYMcAfqS3XFUnL4QbkhWa2b+74P4G/4sWUzpVkuPf6eklL4rmnTzJ74aYfMnvBqSWBPXKe4xdx7/AWwAt1ruHBfCitpFOBJ8wsu9/YVLBpSmGJN5hZ1m/3fkmbMLtRX40nzWyn9PouSUsD+0s6rlohrPYwszcljSUXKi1pVdxzOoTZjfdeeLuf8R1M+xJQAVZhVhj3+rjnO08r8CzwUzO7vR65ga+k/Yv5g21Ug56RebGTQboT8Gcz+ySdvxw4RtLKuXDnhuZPHJm2OZDU18wmt7ewIj17LlXP8GAu6N27R1eLsEAQei6P0HV5hK7LIfRcHqHr5jOvGMO3ZoZw4jZgOm4Mr42HTlZyXpxXgH8Bg5ndGH4m9/pN3GC+SNKmwN3AnZmRI2kp3HA6Jh/qbGZTJI0ENi/I+Ejh/UTc61wvz2WGcOLVtO/ZgEwP516/mfYzqwabWUvK7+yZDm0ETAKeLHjERgInS1rOzN6tYQ1r4w8UZvNSmtmDkibgnvtzce/wNun0QOBT4EzgAkmL4cbNKrgHP09e1xPTPtN1PWt4pjDvA3g+6YP4d+wOMzu7yvoeLLx/NcnfHlcW3t+Ih3uvg3/36uU64MxcqPTPcYP7pfSZZmTPvopGbZHphfHgxbb2TK9XwgtWLQJsb2aNFCtrK9JkdzxsPM8VeCQI+IOOFYCb08Mh8M9nOB4ZcfRczk86f2Eb109p43ibTJkyjenTo9FwZ1Kp+B/9lpboqdiZhJ7LI3RdHqHrcgg9l0fouj4yfdXCvGIMz1bN1cxmSJoMLI3/A3xI2op8VHj/QW6OVkmDcS/atsD/AZ9JuhkPv1wSNwwmMSeTmGVAZhRDUGfQWJj5tCrzkObqWadM1TyOxfnz9Mar+rZlOPXD84w7oldOpiJ5Oe8ADkx5tRvhhaHuAxbHvZzfAf6Le4tnkg/3Td8FmKXretbwQeHcyenYbrgX+SRJzwG/MbN8655qn1FHn3WxIvFbad+rOLBGbsIf9GRVpX9G9erSk3F5+3cw35fT/rXcsalm9kT2RtKjeHTCvZL+v3q9pbgHnyqy3MLsDyZuK5zfLe2r5a3vLmm4mU2fi/kB3sivdW5pbSX+GJVE6LocQs/lEbouj9B1OYSeyyN03XzmFWO4T/6NpIXTsQ/wsM0/UfBCJqrmSGakPNS9Je2Dh9Zuh+ckT8Zzfltxw6pIvzSmbKbQuTJNwUOwf9HG+VfbOF4k82yvyJwtgvrhnntwD+v7eKj0hsCNZvZGCn0ehFdGvqOt/M82mEKDa0hhs+cA50haHve0Hw7cJGmFOmSoRp/C+2y+t4oDMDR+dQAAG8JJREFUa8HMJksaDfw0hfevgeeBF8e1pqiBzSQtnRX5ypN+nn4M/K09AzeFZ+8DXI978NvScVs8hT8U+Cm5iI10z5n3lfRp7vUK+OdwbrpvnnWA4/EHAjc3Mn8QBEEQBEEQtMW8UkBrc0mL5t5vjRvqt+L/AA8wsyeyDXgOL9g0qK0JJa0j6U1Ja5lZq5k9Y2ZH4PmQq5rZNLxdy/bJWMiuWxbPBX6oyWvskBJkGosX43qroM9N8IcD09u9ehaP4rnPO+QPyqt+r5LJmSo034t/nt/G83rBC2BtiRvDI8tag6SHJZ2RZHvLzC7Hi3X1xPNu54ZtCu+3wx/WzE07n+vwVIHdgYfMbGIb447HIx0uyH9vCue/yqy+vW1iZjfg7Y12kLRBR+ML187Afy43kPTbamMkrczsuh6C/6yfbmZj8htejfx9Uih3g/MHQRAEQRAEQVXmFc/wyniV5zPT6xOAu8xsjKTDgFGSrsbDRBcGDsbDbIe3NSHwNG6MjJA0FA/f3RhYE69UDHAons85StI5eEumQ/F82GHNXGAddKZMl+FVrO+VdDweMjsYD0E/q9BeqE3M7B1JJwJHSfoMN2hXwz+P5/F8zYw78B64H5B6xeK5u3vhbbJqafXTrDWMBQ6W9Caeb/1FvAL52OSJXbpOWfJsn+YdhT+k2Qdv99Re2HpH3IxXCD8Q2K+tQWb2rLy92GXAVySdi3vI++EVyTcBDjGzO2u87/74Q6MzU7h0ze3DzOwiSavhVcw3wyM6xuPh4pvg6QqfMushyK54LvS/q8z1kaQbgF0lrWZmrzYwf8aXJK3dhtjTzOzZWtcYBEEQBEEQzB/MK57ha/Fqydfhnp/L8TxfzOwe3Du2Mt5yZgTu/dvYzNr0upnZx/g/x8/hxu/duPduz+QRJFUs3hjvQXwtXmRnIvA9M/tnc5dYG50pUzLM1sc9tycBd+J6/gNucNUz11C8TdGGuOFxNB7mOrBgAI7CQ7//lvI+wT3ErcADbbUD6qQ1HIl7R3fDvZ+n4d+Ln9QjQztzfwOPZvgJsI+ZnTg3E5rZFOAePI/8hg7GXgv8L27EHoN75E/F86e/b2Yn1XFfw39mvgX8ugG5D8MrmE/Cvxd34w9E/gdvOfUVM7tR0vdwnV3bznRX4uvPCn3VPH9hnt3xwmzVtrpaSAG0RsJOEARBEARBt6fS1f/USRoPjDGzXbpUkCBogFQc7FW8ndTlXStNUALLAO+1tExlRhST7lQqFejTpweTJ0flzM4k9FweoevyCF2XQ+i5PELX9ZHpC1iW6gWHZzKvhEl3W9rocVqNz+ssFFU689Na5hXmF51KqszL8lWjM2WuVCp4cEMQBEEQBEHQXZlXwqS7MzvjbX462uoqRtQZSLo8eeLbotuspRuxAbXpdOf8RZJ2kdSaPM81IWlQumZQB+NaUx59rfPuAZxS6/h6ZOksJH0fz1fP3vdP8uzSjPndGA6CIAiCIAi6M13uGTaz/l0tw1wyElirhnHFFkTzIvPTWkrBzMbjOa1t8SS16bTWtlbNYB08D71WjmBWJfDuwi/xfOQgCIIgCIIgqEqXG8PdHTNrAVq6Wo5mMD+tZV7BzKYyq4r2PEF7heeCIAiCIAiCYEEhjOH5jJSjuj/wK6A/8DrenufU3Jhf4d6+vniLoYPN7Ok67tEf92TuAOwIbARMxitfH5f6wWZj9wAOwPvcvolX/R2eteuRdDleKfzFNNdEvCrwhnirpm/iYcR/xdsDvZCb+2fA74ABeOumW4BDzezddH4osBPwW7xdl4AJ6f51VRBOfbCPTDL2w6ufn2xmV6TzY5LsiwObAQ+b2WBJi+MtsXYAlse96seZ2XW5uRcCDsM/sz54Bem/1iNfgQGSDsX7OL+PV2c/IqvmLakVOCZVBCf17P01/n1pwSti/8HM3k9h9asCO0vaGVgtecPrRtI3gRPxauAAo4GDzOyVdH4Q3nZrY7xV1sAk/xXAYbnvTA88bPvHeH/l2/F+zn8ys0r6Tu2cW+uuzPJs95N0PfBD/Ht1A3CgmX3QyJqCIAiCIAiC7kvkDM9/nAScDNwGbAVcAvwRbz0E8CW8Hc0RuIHWCxgjaZUG7nUe8B7e2uhKvK3NCdnJZJBdiPcS3go4GzdyLizMsz6wCm7c/AE3vm7FPapb4W1xhPdeXijNfQTeY3Yc3sroGGC7tJYlcnP3S/c9A9gCN+KvlDSgzrVejfckvhjYEm/nc7mkHXJjfgZMBX4EnJQeTNyM91Q+LR1/GLhW0v/lrjsJ/0wuTjpowY3GRvkT8GCS8y+4zveqNjDJfxJwDt7CbBgwBDgrDfkx3sJoFB5e/d9GBJL0dXzty+OG6u7Al4G/SVq+MPzqnPx/Bn4P7JE7fyuwPa6znwE9mF1fw5O8k5LMdxTO/QfYGtfTL/HvbV1UKrGVsYWuQ8/z2xa6Dl3Pb1voOXQ9r261Ep7h+QhJPXGv8Flmdkg6fJ+kFXGD8028svE2ZvZ4umYc8AqwH3Bwnbd80sx2Sq/vkrQ0sL+k44AK7km9wMx+m8bcI6kFuFjSaWb2XDr+Bbz/88Qk08/xPsvHm9kb6dhE3IBZStIXcGP+QjPbN7f+f+Ie1V2Bc9PhJYE9Uv9mJL2Ie4e3AGZ6mdsjeTS3A/Y3szPS4dHJQ/4D3CgH+BTYy8w+SdcNxj2QP895gu+WtBRwoqQ/A0vjuj/VzIblxqyUrm2EM8zs2CTDA3h/7Q3xhwJFNsAfEJyTPPpjJX2APyTBzJ6W9Anw9lyGVx8NfIj3B38/yTYa/+79Lm0ZF5nZ8PT6fknb4IbxBZI2xHX+EzO7Kc1zJ/BP4P8lmV+W9DbwSSZz0jnADWZ2YG7uTZJu6qJnz6U6HhQ0hd69e3S1CAsEoefyCF2XR+i6HELP5RG6bj5hDM9frI1/pjflD2bGaAoffSUzhNO5SZIeYVboaj1cWXh/Ix6SvA5uDC8B3JaM14yRaT8YyIzhlswQTowDPgYeTyGtd+K9qB9L69gMWIxZRmi2lgclTQAGMcsYBngk9zq7Tz3WzMC0L+r1J4Vx/8oM4cRGeP+dOwo6uA0P3/4msCKwCLP0kvEXGjeGH8zJ2JpCnXu2MfYBYE/gSUk34x7VP3dCS6KN8FDlD3O6eD/JOrgw9pHC+4nM+rw2xMObb8lOmtkMSddRm4f3wcL7V5n1+dbMlCnTmD49Gg13JpWK/9FvaYmeip1J6Lk8QtflEbouh9BzeYSu6yPTVy2EMTx/0Tvt32pnzKQqx97Cw5Tr5fUq84B7FbMQ/FFtXLtS7vVs+ZpmNl7SBnjI9B64gT1F0jm4t7lXGlptLZMoGH5m9mHu9QxJUF+KQC16hcI60nUVPHS6GisxS9bJhXMNhSMnphXez6CN9ZrZdSn0fG/gKDzcfLykQ8zsL3MhQ5HeeEjzz6qce7vw/sPC+7z8ffGHJ0VL9M0a5ahZN+3R2kr8MSqJ0HU5hJ7LI3RdHqHrcgg9l0fouvmEMTx/MSXt+5Jrf5Tygb+CeyB7zXkZK9KxoVeNPoX3K6T9W3ghKfCCUy9WubZd4yV5gbdNhasG4t7Lw4G/A++kYSsyZ5unfnjobTOZkvZ9ybUkSnnHvc3sb+1c9wEe1luNl4DvptcrMPtaes85vHMws2uAayQtC2yC5xhfLemhLEy9CUzBc8dPrXJueh3zTAT6SFqoYBAX846DIAiCIAiCoF2igNb8xaN4COlWheMHAdcCnwOS9JXshKSVgXXxcNl62abwfjvcqzcubZ8CXzSzJ7INN3xOAFZra1JJ+0uaIGkxM/vUzO7HKy2DF9d6FPgELwCWv2493MP9UANraY9svqJe/4gX5mqLsXhOcKWgg//Bc2i/gBeV+gj4aeHa4r06BUnXpfBozOw9M7seLzL1BWZ57z9vwq3G4n1/n8np4UngQLxIVz3zfIGcflKhsuIczZA5CIIgCIIgmI8Jz/B8hJlNlnQ6cGAqejQW+B4eAnsw8G08F/c2SYf//+3deZBlVX3A8W8jimgxoKCWjin2/KJRA0TLJaBGAQVFx8G44YJxFyy3GHABRgYVB0SDGMBiGSquSALIYgZ3gRABFU1UfsLIaEBDZHAYBB2W6fxxTs9c3rzeXvftpvt+P1Vdt/u+c84778dh3vu9c+85lMW0llJWLx4rqRvNyyLiZsql0M8GDgE+mJl3AHdExDJgaUQsoNwvurA+3zBlhnc036IkmudGxEmUBPqtlAT4gsy8NSKOBY6MiLsp99vuWNv+GWUrnmmTmT+u9y4fFxEPAa6hbJ90AGUl7dFcTFnQ6/yIWAr8nDITfDTw75l5C0B97JiIuKO+9v2ZoWS4Pt8pEXF87e/DKPfeXsfG/0ZrgN3rpetXZuYfB3ieoyn3Al8YESdTxuFbKF+ovHSijWTm9yLi68AZEfEBymJobwCeRBlXI9YAj6r3l18zQH8lSZI0zzkzPP8cBrwfeBVlS5nXAIc2VkH+IWU/4JOBf6Hsl7tXZvbetzkRR1Bm+86nbG90SGZu2OImM4+gzPwtpiRayygLGD0zM28brdHM/AklGVxAWSTrXMplw/tmZtYySyhJ/nMoyfBRwFeAPWsyPt1eDZxIWa37wvq8L83M88Z4Hespie2XKPsIr2DjNkuvaJT7WG337yiLaz2JMpvfusw8lbKa9X6U1/VZyhcK+2Tm3bXY8ZRL0lcAfz3g8/yEsu/xMGXcnUO5pH3RyKrQk/BySpyOre2so4zn5j3bZwKrKGPzdYP0eSzD3rAjSZI05w35oU6TVbcUugF4fWYun93eqEsiYnvKauXnN2eo68z9zpm5R8tdWADctnr17ax3MelWDQ3BdtttxS23uHJmm4zzzDHWM8dYzwzjPHOM9eSMxAvYmrJ7yai8TFobRMQDKKsfj2Xe/C9YV1Ee9+qIzJzMAk/TbqL/XTKz9ftk7wd9WQ8sp1x6fjrlEvrnU65MeH1LzylJkqR5yMuk1fRNygJcY/2snLXeTb8zGP/13j1q7ZmzkvH7+M0Z6susjpHM/B/KJd2PpOzFfAFlte6DMnNa7xWXJEnS/ObMsJreAoy3Q/W6zFzF+LODc8ES4KTZ7sQEHABsMU6Z0fYynm4TGiNtdiAzv81gq59LkiRJG5gMa4ORxam6oib1q2a5G+PKzP+a7T6M6NoYkSRJ0vzlZdKSJEmSpM4xGZYkSZIkdY7JsCRJkiSpc0yGJUmSJEmdYzIsSZIkSeock2FJkiRJUueYDEuSJEmSOsdkWJIkSZLUOSbDkiRJkqTOMRmWJEmSJHWOybAkSZIkqXNMhiVJkiRJnWMyLEmSJEnqHJNhSZIkSVLnbD7bHZCkuWZoqPyoPSPxNc7tMs4zx1jPHGM9M4zzzDHWkzOZOA0NDw+31xNJml8WAjfOdickSZI0rscCN41VwGRYkiZuCHgMcPtsd0SSJEmj2gr4DTBmsmsyLEmSJEnqHBfQkiRJkiR1jsmwJEmSJKlzTIYlSZIkSZ1jMixJkiRJ6hyTYUmSJElS55gMS5IkSZI6x2RYkiRJktQ5m892ByRptkTEvsBHgL8EbgY+A3wiM0fdgD0iXgl8CNgJWAUcm5ln9ZR5MnA88GRgLbAcWJKZd03/q7j/azHONwIL+1R/RGbeMj29n1sGiXWj7u7AlcCumbmq5zHHdI8WY+24bphsnCNiC+C9wGuBPwNuBD5P+TfkrkY5x3SPFmPtmO4xQKwfDBwJHAQ8AvgxZbyumEq7cmZYUkdFxNOAC4FrgcWUN/BlwGFj1DmwlrsEWAR8B1geEa9olNkJ+AbwR+BlwCeA9wAntvAy7vdajPN2lA9X7wOe3vOzZtpfyBwwSKwbdZ8AXESfL8kd05tqMdaO64YB4/xPwAcpye2LgDOAw4GTG+06pnu0GGvHdI8BY30acAjwcUqsrwcuioi9pthu5w0ND/tFgaTuiYgVwDaZ+dTGuY8DbwMelZl/7FMngWsy8+WNc18G9sjMXevfpwL7AzuPfDMeEW8DTgJ2zMxft/iy7ndajPPewNeBXTJzZcsvY04YMNYPAt4BHA38CXg4ZZyuapRxTPdoMdaO64bJxjkitgV+BxyWmcc1zh8GHAs8MjN/55jeVIuxdkz3GCDWOwA3AIdm5mfquc0oCfH3M/OVg7SrwplhSZ1TL+16NnBuz0PnAFsBe/apswPw56PU2SUidq1/Pw+4qOdSu3Mo/94+b6p9n0tajvNuwO3AL6etw3PYILGu9geOAj7K6LMHjumGlmO9G45rYOA4LwBOAb7ac/7aetypHh3TDS3Hejcc0xsMGOvfAk8BPjdyIjPXA/cAD55Cu8J7hiV1007Ag4Bf9Jy/vh6D8k120+PqcdQ69b6o7XvL1G/H19Z2u6SVOAPXUT5g3QqcU2ceHkC59PRdmfnbKfd87hkk1gBXATtk5q0RcXDvgxGxJY7pXq3EutoNx/WIScc5M28A3t6nrUXA3cAvHNN9tRLr+vduOKabBon1OuBq2DAjvJByr/bOlKtNBmpXhTPDkrpo63pc23P+9npcMGCd0cqMlOvX7nzWVpyhfMBaCPwAeCHlfr9nAd+NiIcO2N+5bJBYk5k3ZeatA7Q70nbXxjS0F2twXDcNFOdeEfES4HXAKZn5+zHaHWnbMb3RVGMNjuleU431YcCvgXcCp1PufZ+OdjvLmWFJXTTeF4HrB6wzSLvzWVtxBngTcE9mXlX/vjQifgpcRlnZ9OR+leextsaeY3pTbcbEcb3RlOMcEYuBL1Di94/T1e481FaswTHda6qxvgC4nHLZ85HAlsBrpqHdzjIZltRFt9XjVj3nF/Q8Ptk6a0cpM1KuX7vzWVtxJjOv6K2YmZdHxG3AX02+q3PeILGeCMf0ptqKteP6vqYU54h4N2XrpO8AizLzT/Uhx/Sm2oq1Y3pTU4p1Zv53/fV7EbE58OGI+OBU2+0yk2FJXbQSuBfYpef8yN8/71MnG2V+1K9OZv4hIm7qbTciHkl5g+rX7nzWSpwjYmvgQODKxgeDkXupHkRZ4bRrBon1uBzTfbUSa8f1JgaKc0QMUbb8eQfwReDg5kJZjum+Wom1Y7qvScc6IrYH9gY+3/yiAfhhPT4GuGay7arwnmFJnVPfTL4HLK5v5iMOpHx7emWfOtdTtjZ4ac9DBwLXNbZHuQR4YV3ZsVnmXuBb0/IC5ogW47yOsgXK+3vKvIhyydi3p6P/c8kgsZ4Ex3RDi7F2XDdMIc4fpSRnJwAH9awYPcIx3dBirB3TPQaM9faUfYZf0nN+X+Cu0myr7wHzmjPDkrrqGMrCE2dHxBnAM4D3AYdn5p0RsQB4PLAyM0e+vT4aODMiVlO2k3gx8DLgFY12lwGvBL4WESdQtgn6KPDZLu5dSQtxzsw/RcSxlMvDbgYuBp4ILAHOz8zOfZitBon1RDimNzXtsXZc9zWpOEfEbpQFhq4CvgI8NeI+i0P/LDPX4pjup5VYO6b7muy/H5fV8p+uj62kLEZ2CHBUY7GyMduduZc3tzgzLKmT6pvwgZTtBs4DDgLel5nLapE9gCuAFzTqLAfeCuxT6zwLeG1mfrlR5lrKt7UPoezv9x7gk5SVHzunrThT3vTfTon1BZRtJk6hfMDtpEFiPcF2HdM92oo1juv7GCDOi4Ehyp6sV/T52aO265ju0VascUxvYrKxrnsKLwaWA4dTtqbaG3hzZh4ziXbVx9Dw8PBs90GSJEmSpBnlzLAkSZIkqXNMhiVJkiRJnWMyLEmSJEnqHJNhSZIkSVLnmAxLkiRJkjrHZFiSJEmS1Dkmw5IkSZKkzjEZliRJEgARMTTbfZCkmWIyLEmS1KKIWBIRw7Pdj7FExBYR8UngVbPdF0maKSbDkiRJejTwLuCBs9wPSZoxJsOSJEmSpM7ZfLY7IEmS1BURcTBwCrA38EngicCvgH8AfgH8M/B04DfAhzLzS416ZwJPA04GHgdcBxydmec02t8aOAp4MbAQuB44ITPPaJRZBZwLPAl4BnA58Nz68JkRsSQzd6hl3wi8tT7fZkACH8nMrzT6dRrwN8CngN2Bm4FPZ+bxjedcAHwEWAxsA/wMWJKZFzXKvBF4N7BLbeMMYGlm3jvR+ErSZDgzLEmSNLMeCHwROBV4EXAn8HngQuAi4ABKMnxWRDy2p+6FwHnASyiJ6dkRsT9ARGwJXAYcBCyjJMSXAqdHxAd62jkUuKqWWUpJUgGOqW0TEYfUPp4HvKC2uw74Qk+/NgPOBr4E7F/7cFxEPK+28wDgklr/Y/U5rwXOi4i9apn3A58FvlFf/0nAYfWcJLXCmWFJkqSZtRlldvU0gIh4GCWR/FRmnlDPrQGuBp4M3Nioe2JmLq1lVgA/BI4ELgYOBp4APCMzr6jlV0TEA4EjIuKUzLy1nv9VZh4+0mhE7FB/XZmZP6q/7wQcl5nHNMqtAn4A7Fn7DDBEmaE+vZa5nJJcvxBYAewHPBVYlJnn1zLfAnYGnhMRPwGOAE7NzHfWNi+JiNXAaRFxQmb+dCKBlaTJMBmWJEmaef/R+P3mevx+49zqetymp95ZI79k5nBE/Bvw4Tor/GxgVSMRHvE54A2US6wvrueuGa+DmflegIjYBvgLyuXLf1sf3qKn+BWNeusi4nfAQ+upPYG7gQsaZdZTLtEmIp4PbAl8NSKan01Hyu8DmAxLmnYmw5IkSTNvbZ9zd0yg3m96/v4/yszsNsDDgf/tU2fk3DaNc38Y74kiYmfKZdLPBe6iXNr84/pw737Ed/b8vZ6Nt+NtC6yuCXA/29bjxaM8/pjx+ipJgzAZliRJmju2ZeNMMsCjgHuBW+vPLn3qPLoeb5nok0TEZpT7l+8CngJck5n3RMTjgddMss9rgG0jYigzN+y3HBG7U5LqNfXUQZRFxHrd3OecJE2ZC2hJkiTNHYtGfomIIeBA4LLMXAd8F9ghIp7eU+fVlKT2yjHa7V2xeTsggNMz8+rMvKee368eJ/MZ8lLKomHP7+n7mcAHgP+s/VtYn+vqzLwauIey4NaOk3guSZowZ4YlSZLmjuMi4sGUlaTfBDweeE59bDlwCGWV5iOBGyirVf898OHMXDNGu7fV43Mj4ueZ+f26WNahEXEj8HtKMvuuWu6hmzYxqoso9xSfFREfAn5JmV1+HPDmzFwdEcuApXULpu9QtoVaCgyz8dJsSZpWzgxLkiTNHW8D3kzZJ/jRwD6ZeSlAZt4JPIuy8NRS4KuUxavekJlLxmo0M9cCJ1C2VfpaXYF6EXATJck+m7IA1wGUe4f3mmiH6z7B+wH/Wvt1HuVy7n0z88pa5gjgPZRVqC+mbA11KfDMzLytT7OSNGVDw8PD45eSJEnSrImIgymXFe+YmatmtzeSND84MyxJkiRJ6hyTYUmSJElS53iZtCRJkiSpc5wZliRJkiR1jsmwJEmSJKlzTIYlSZIkSZ1jMixJkiRJ6hyTYUmSJElS55gMS5IkSZI6x2RYkiRJktQ5JsOSJEmSpM75f15q1VdXz59hAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Get feature importances\n",
    "importances = dtree.feature_importances_\n",
    "feature_names = X_train.columns\n",
    "# Create a DataFrame for visualization\n",
    "feature_importance_df = pd.DataFrame({\n",
    "    'Feature': feature_names,\n",
    "    'Importance': importances\n",
    "}).sort_values(by='Importance', ascending=False)\n",
    "\n",
    "plt.figure(figsize=(8, 6))\n",
    "plt.barh(feature_importance_df['Feature'], feature_importance_df['Importance'], color='skyblue')\n",
    "plt.xlabel('Importance', fontsize=12)\n",
    "plt.ylabel('Features', fontsize=12)\n",
    "plt.title('Feature Importance in DecisionTreeClassifier', fontsize=14)\n",
    "plt.gca().invert_yaxis()  # Optional: Show the most important features on top\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "10be75f9-9390-45b4-910b-7f1bed13871b",
   "metadata": {},
   "source": [
    "## (8) Prediction\n",
    "### Learning objective 5: prediction functions `predict()` and  `predict_proba()`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "ddcec046-58b0-4ccf-b956-9c4fed8c9867",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 0, ..., 0, 0, 1])"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_pred = dtree.predict(X_train)\n",
    "test_pred = dtree.predict(X_test)\n",
    "test_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "73fb53e7-8d04-449d-81b2-812c0b4742a4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.94243475, 0.05756525],\n",
       "       [0.94243475, 0.05756525],\n",
       "       [0.94243475, 0.05756525],\n",
       "       ...,\n",
       "       [0.63087248, 0.36912752],\n",
       "       [0.94243475, 0.05756525],\n",
       "       [0.        , 1.        ]])"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_proba = dtree.predict_proba(X_train)\n",
    "test_proba = dtree.predict_proba(X_test)\n",
    "test_proba"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "7d525a80-7c48-41f2-8d05-f8c315e00416",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1])"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# To see the order of the classes use: clf.classes_\n",
    "dtree.classes_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "e74195e0-dc87-490a-a8f3-2579d6dd5e64",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.05756525, 0.05756525, 0.05756525, ..., 0.36912752, 0.05756525,\n",
       "       1.        ])"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# It predicts P0 and P1. We are interested in P1\n",
    "test_proba[:,1]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a974d855-2188-4894-9f2a-583bb8236ef3",
   "metadata": {},
   "source": [
    "## (9) Evaluate the model performance\n",
    "\n",
    "This is a classification problem. So we will use the following metrics.\n",
    "- 1. Accuracy\n",
    "- 2. Confusion Matrix\n",
    "- 3. ROC Curve\n",
    "- 4. Gains Table\n",
    "- 5. Cumulative Lift Curve\n",
    "- 6. Kolmogorov-Smirnov (K-S)\n",
    "- 7. Precision-Recall (PR)\n",
    "- 8. F1 score"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "320f192f-f7f2-4c30-9679-55d49245b208",
   "metadata": {},
   "source": [
    "### (9.1) Accuracy\n",
    "\n",
    "### Learning objective 6: Accuracy\n",
    "The **accuracy score** in model evaluation measures the proportion of correct predictions made by a model out of the total predictions. It is commonly used for classification tasks and is calculated as:\n",
    "$$\n",
    "\\text{Accuracy} = \\frac{\\text{Number of Correct Predictions}}{\\text{Total Number of Predictions}}\n",
    "$$\n",
    "\n",
    "In a binary classification problem with:\n",
    "- **True Positives (TP):** Cases correctly predicted as positive.\n",
    "- **True Negatives (TN):** Cases correctly predicted as negative.\n",
    "- **False Positives (FP):** Cases incorrectly predicted as positive.\n",
    "- **False Negatives (FN):** Cases incorrectly predicted as negative.\n",
    "\n",
    "The formula is:\n",
    "\n",
    "$$\n",
    "\\text{Accuracy} = \\frac{TP + TN}{TP + TN + FP + FN}\n",
    "$$\n",
    "\n",
    "**Pros:**\n",
    "- **Easy to interpret**: It provides a straightforward measure of model performance.\n",
    "- **Useful for balanced datasets**: It works well when the dataset has a roughly equal distribution of classes.\n",
    "\n",
    "**Cons:**\n",
    "- **Misleading for imbalanced datasets**: If one class dominates the dataset, a high accuracy score might not indicate good performance (e.g., predicting the majority class for all instances can yield high accuracy). You are recommended to use the Precision-Recall metric and F1-score. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "e73e7249-4eca-4bc0-a426-984459bf77dc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The training data: 0.9204010640474729\n",
      "The test data: 0.9230297078320648\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import roc_curve, roc_auc_score, accuracy_score, confusion_matrix\n",
    "print('The training data:',accuracy_score(y_train,train_pred))\n",
    "print('The test data:',accuracy_score(y_test,test_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2bc2d37d-9eee-4a65-9f6e-8c4fd09df873",
   "metadata": {},
   "source": [
    "### (9.2) The confusion metrix\n",
    "\n",
    "### Learning objective 7: Confusion matrix\n",
    "- A **confusion matrix** is a specific tabular representation used to evaluate the performance of a classification model. It organizes the counts of true positives, true negatives, false positives, and false negatives in a structured format.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "0594f3d0-bb07-4b82-9d5e-60678144c41f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[6419,   63],\n",
       "       [ 564, 1100]])"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "confusion_matrix(y_test,test_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "ef87e146-c572-4eb6-907c-38baf6f2fd94",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "loan_status\n",
       "0    6482\n",
       "1    1664\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test[target].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "487e5d03-59b5-496c-8ea0-ddec62033437",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Predicted Negative</th>\n",
       "      <th>Predicted Positive</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Actual Negative</th>\n",
       "      <td>6419</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Actual Positive</th>\n",
       "      <td>564</td>\n",
       "      <td>1100</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 Predicted Negative  Predicted Positive\n",
       "Actual Negative                6419                  63\n",
       "Actual Positive                 564                1100"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Format it to look better\n",
    "cm = pd.DataFrame(confusion_matrix(y_test,test_pred))\n",
    "cm.rename(columns={0:'Predicted Negative', 1:'Predicted Positive'},\n",
    "         index = {0:'Actual Negative',1:'Actual Positive'},inplace=True)\n",
    "cm"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f28494a8-abce-4caa-872c-317af180f968",
   "metadata": {},
   "source": [
    "### (9.3) The ROC Curve\n",
    "\n",
    "### Learning objective 8: ROC Curve\n",
    "\n",
    "The **ROC curve** (Receiver Operating Characteristic curve) is a graphical representation used to evaluate the performance of a binary classification model by visualizing the tradeoff between the **True Positive Rate (TPR)** and the **False Positive Rate (FPR)** across different threshold settings.\n",
    "\n",
    "Key Components:\n",
    "1. **True Positive Rate (TPR)** (Sensitivity or Recall):\n",
    "   $$\n",
    "   TPR = \\frac{\\text{True Positives (TP)}}{\\text{True Positives (TP) + False Negatives (FN)}}\n",
    "   $$\n",
    "   - Measures how well the model identifies positive instances.\n",
    "\n",
    "2. **False Positive Rate (FPR)**:\n",
    "   $$\n",
    "   FPR = \\frac{\\text{False Positives (FP)}}{\\text{False Positives (FP) + True Negatives (TN)}}\n",
    "   $$\n",
    "   - Indicates the proportion of negative instances incorrectly classified as positive.\n",
    "\n",
    "3. **Threshold**:\n",
    "   - Classification models often predict probabilities, which must be converted to class labels using a threshold (e.g., 0.5 by default). The ROC curve is generated by varying this threshold from 0 to 1.\n",
    "\n",
    "How It Works:\n",
    "- The ROC curve plots **TPR** (y-axis) against **FPR** (x-axis) for different threshold values.\n",
    "- It starts at the bottom-left corner (0, 0) and moves toward the top-right corner (1, 1) as the threshold changes.\n",
    "\n",
    "Ideal and Random Models:\n",
    "- **Ideal Model**: A perfect classifier would have a point at (0, 1), meaning it achieves 100% TPR with 0% FPR.\n",
    "- **Random Model**: A random classifier would produce a diagonal line from (0, 0) to (1, 1).\n",
    "\n",
    "Performance Metric: AUC-ROC\n",
    "- The **AUC-ROC (Area Under the Curve - ROC)** quantifies the overall performance of a model:\n",
    "  - **AUC = 1**: Perfect classifier.\n",
    "  - **AUC = 0.5**: Random guess.\n",
    "  - **AUC < 0.5**: Worse than random, indicating a flawed model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "a2e58d32-1514-43e5-9cec-08b9f94e8871",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8256692349227446"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "roc_auc_value = roc_auc_score(y_test,test_pred)\n",
    "roc_auc_value"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fefbde69-810d-4812-b0aa-040f6e305852",
   "metadata": {},
   "source": [
    "### Learning objective 9: Construct the ROC curve by hand\n",
    "\n",
    "How is the ROC curve constructed? The code snippet `fpr, tpr, _ = roc_curve(y_test, test_proba[:, 1])` is used to compute the **False Positive Rate (FPR)**, **True Positive Rate (TPR)**, and thresholds for a binary classification model's predictions, typically for plotting the ROC curve.\n",
    "\n",
    "Components:\n",
    "1. **`y_test`**:\n",
    "   - The ground truth labels for the test dataset (actual class labels).\n",
    "   - Usually a binary array where each entry is either `0` (negative class) or `1` (positive class).\n",
    "\n",
    "2. **`test_proba[:, 1]`**:\n",
    "   - The predicted probabilities for the positive class (class `1`).\n",
    "   - This comes from the model's `predict_proba()` method, which outputs probabilities for both classes (e.g., `[P(class 0), P(class 1)]`).\n",
    "   - By using `[:, 1]`, you extract the probabilities corresponding to the positive class.\n",
    "\n",
    "3. **`roc_curve(y_test, test_proba[:, 1])`**:\n",
    "   - A function from `sklearn.metrics` that computes the False Positive Rate, True Positive Rate, and thresholds used to evaluate the classifier's performance at different thresholds.\n",
    "   - It calculates:\n",
    "     - **FPR**: Fraction of negative samples incorrectly classified as positive.\n",
    "     - **TPR**: Fraction of positive samples correctly classified as positive.\n",
    "     - **Thresholds**: A list of threshold values used to classify instances into the positive or negative class based on their predicted probabilities.\n",
    "\n",
    "4. **Interpretation**:\n",
    "   - `fpr`: An array of False Positive Rates at different thresholds.\n",
    "   - `tpr`: An array of True Positive Rates at different thresholds.\n",
    "   - `_`: The thresholds themselves, which are not assigned to a variable here (hence the `_` placeholder).\n",
    "   - **FPR** and **TPR** arrays are used to plot the ROC curve.\n",
    "   - The `thresholds` array indicates the probability thresholds used for classification. Lower thresholds classify more instances as positive, increasing both TPR and FPR."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "bbf407e7-88f9-47f0-8852-422ad116ac48",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[array([0.00000000e+00, 0.00000000e+00, 3.08546745e-04, 9.25640234e-04,\n",
       "        4.01110768e-03, 4.31965443e-03, 4.47392780e-03, 5.09102129e-03,\n",
       "        8.48503548e-03, 9.71922246e-03, 1.07991361e-02, 2.05183585e-02,\n",
       "        2.23696390e-02, 3.28602283e-02, 3.70256094e-02, 3.82597964e-02,\n",
       "        4.95217525e-02, 9.62665844e-02, 1.23418698e-01, 1.24190065e-01,\n",
       "        2.21228016e-01, 2.26010491e-01, 2.30484418e-01, 9.82721382e-01,\n",
       "        9.86269670e-01, 9.99382907e-01, 1.00000000e+00]),\n",
       " array([0.        , 0.56790865, 0.57512019, 0.58533654, 0.63762019,\n",
       "        0.63762019, 0.64362981, 0.64483173, 0.65504808, 0.66105769,\n",
       "        0.66105769, 0.67848558, 0.67848558, 0.69471154, 0.703125  ,\n",
       "        0.70372596, 0.71394231, 0.75240385, 0.77463942, 0.77524038,\n",
       "        0.82572115, 0.82932692, 0.83293269, 1.        , 1.        ,\n",
       "        1.        , 1.        ])]"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# It predicts P0 and P1. We are interested in P1\n",
    "fpr, tpr, _ = roc_curve(y_test, test_proba[:,1])\n",
    "[fpr,tpr]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "469cfbd7-11d3-4056-960f-8bdb1ccb681d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x400 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "def plot_roc(y_true,y_prob):\n",
    "    fpr, tpr, _ = roc_curve(y_true, y_prob)\n",
    "    lw=2\n",
    "    plt.figure(figsize=(6,4))\n",
    "    plt.plot(fpr,tpr, color='darkorange',lw=lw,label='ROC curve (area = %0.2f)' %roc_auc_value)\n",
    "    plt.plot([0,1],[0,1], color='navy',lw=lw,linestyle='--')\n",
    "    plt.xlim([0,1])\n",
    "    plt.ylim([0,1])\n",
    "    plt.xlabel('False Positive Rate')\n",
    "    plt.ylabel('True Positive Rate')\n",
    "    plt.title('ROC curve')\n",
    "    plt.legend(loc='lower right')\n",
    "    plt.show()\n",
    "    \n",
    "plot_roc(y_test, test_proba[:,1])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "efdb0e79-3802-4c08-8dff-0c2162e69f66",
   "metadata": {},
   "source": [
    "### Learning objective 10: A common mistake in ROC\n",
    "- The ROC curve is a curve, which uses probability predictions.\n",
    "- The probability predictions are obtained by `**.predict_prob()**`\n",
    "- The `**.predict()**` compares the probability predictions to 0.50 to produce binary outcome (0,1).\n",
    "- If you mistakenly use the binary predictions from `**.predict()**`, your ROC curve will become a kinked curve. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "dfd9bba7-b852-4953-8865-8295619c245f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x400 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_roc(y_test, test_pred)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f3f9aca1-4efa-483f-83ac-d7b11f1b372b",
   "metadata": {},
   "source": [
    "### (9.4) The Gains table\n",
    "\n",
    "### Learning objective 11: The gains table\n",
    "\n",
    "**Click this link**: [How to determine the best model?](https://medium.com/dataman-in-ai/how-to-determine-the-best-model-6b9c584d0db4?sk=0f5704d347455e7d30d1a15721234e81)\n",
    "\n",
    "The **gains table** (also known as a **cumulative gains table**) is a tool used to evaluate the performance of classification models, particularly in predictive analytics, marketing, and customer segmentation. It helps assess how well the model distinguishes between positive and negative classes by examining the proportion of correctly identified positives as you target specific segments of the dataset.\n",
    "\n",
    "1. **Percentile Groups (Deciles or Quantiles)**:\n",
    "   - The data is typically divided into equal-sized groups based on the model's **predicted probabilities**. For example, the top 10% of predictions might represent the group most likely to belong to the positive class.\n",
    "\n",
    "2. **Columns**:\n",
    "   - **Percentile Group**: A ranking of sorted groups (e.g., top 10%, 20%, ..., 100%).\n",
    "   - **Total Records**: Number of samples in each group.\n",
    "   - **Actual Positives**: Number of actual positive cases in each group.\n",
    "   - **Cumulative Positives**: Running total of positive cases as groups are added.\n",
    "   - **% Cumulative Positives**: Percentage of all positive cases captured up to a specific group.\n",
    "   - **Gain**: A measure of improvement over random guessing. It shows how much better the model is at capturing positives compared to random selection.\n",
    "\n",
    "3. Example of a Gains Table:\n",
    "\n",
    "| Percentile | Total Records | Actual Positives | Cumulative Positives | % Cumulative Positives | Gain (%) |\n",
    "|------------|---------------|------------------|-----------------------|-------------------------|----------|\n",
    "| Top 10%    | 100           | 80               | 80                    | 40%                    | 400%     |\n",
    "| Top 20%    | 100           | 60               | 140                   | 70%                    | 350%     |\n",
    "| Top 30%    | 100           | 40               | 180                   | 90%                    | 300%     |\n",
    "| ...        | ...           | ...              | ...                   | ...                     | ...      |\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6d05348c-f56c-4e67-a5b1-00af59e9b4e2",
   "metadata": {},
   "source": [
    "#### (9.4.1) A step-by-step guide"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "14ed814b-e380-4c29-a9ea-ce00073fe962",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>actual</th>\n",
       "      <th>pred</th>\n",
       "      <th>row_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>709</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25108</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2052</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12277</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18962</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       actual  pred  row_id\n",
       "709         1     1       0\n",
       "25108       1     1       1\n",
       "2052        1     1       2\n",
       "12277       1     1       3\n",
       "18962       1     1       4"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_prep = pd.DataFrame(columns = ['actual','pred'])\n",
    "df_prep['actual'] = y_test\n",
    "df_prep['pred'] =test_pred\n",
    "df_prep = df_prep.sort_values(by='pred',ascending=False)\n",
    "df_prep['row_id'] = range(0,0+len(df_prep))\n",
    "df_prep.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "49772812-63f5-4e90-99d0-8666d01f1dd6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "decile\n",
       "0    815\n",
       "1    815\n",
       "3    815\n",
       "5    815\n",
       "6    815\n",
       "8    815\n",
       "2    814\n",
       "4    814\n",
       "7    814\n",
       "9    814\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_prep['decile'] = (df_prep['row_id'] / (len(df_prep)/10)).astype(int)\n",
    "df_prep.loc[df_prep['decile'] == 10] =9\n",
    "df_prep['decile'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "00982af1-96e4-45da-9387-b9c58bcacccf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>actual</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>decile</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>815</td>\n",
       "      <td>765</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>815</td>\n",
       "      <td>369</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>814</td>\n",
       "      <td>68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>815</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>814</td>\n",
       "      <td>77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>815</td>\n",
       "      <td>71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>815</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>814</td>\n",
       "      <td>72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>815</td>\n",
       "      <td>65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>814</td>\n",
       "      <td>54</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        count  actual\n",
       "decile               \n",
       "0         815     765\n",
       "1         815     369\n",
       "2         814      68\n",
       "3         815      60\n",
       "4         814      77\n",
       "5         815      71\n",
       "6         815      63\n",
       "7         814      72\n",
       "8         815      65\n",
       "9         814      54"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create gains table\n",
    "gains = df_prep.groupby('decile')['actual'].agg(['count','sum'])\n",
    "gains.columns = ['count','actual']\n",
    "gains"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "fa87dc80-13a2-4a55-9730-d313e16cbe32",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>actual</th>\n",
       "      <th>non_actual</th>\n",
       "      <th>cum_count</th>\n",
       "      <th>cum_actual</th>\n",
       "      <th>cum_non_actual</th>\n",
       "      <th>percent_cum_actual</th>\n",
       "      <th>percent_cum_non_actual</th>\n",
       "      <th>if_random</th>\n",
       "      <th>lift</th>\n",
       "      <th>K_S</th>\n",
       "      <th>gain</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>decile</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>815</td>\n",
       "      <td>765</td>\n",
       "      <td>50</td>\n",
       "      <td>815</td>\n",
       "      <td>765</td>\n",
       "      <td>50</td>\n",
       "      <td>0.46</td>\n",
       "      <td>0.01</td>\n",
       "      <td>166.4</td>\n",
       "      <td>4.60</td>\n",
       "      <td>45.0</td>\n",
       "      <td>93.87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>815</td>\n",
       "      <td>369</td>\n",
       "      <td>446</td>\n",
       "      <td>1630</td>\n",
       "      <td>1134</td>\n",
       "      <td>496</td>\n",
       "      <td>0.68</td>\n",
       "      <td>0.08</td>\n",
       "      <td>332.8</td>\n",
       "      <td>3.41</td>\n",
       "      <td>60.0</td>\n",
       "      <td>69.57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>814</td>\n",
       "      <td>68</td>\n",
       "      <td>746</td>\n",
       "      <td>2444</td>\n",
       "      <td>1202</td>\n",
       "      <td>1242</td>\n",
       "      <td>0.72</td>\n",
       "      <td>0.19</td>\n",
       "      <td>499.2</td>\n",
       "      <td>2.41</td>\n",
       "      <td>53.0</td>\n",
       "      <td>49.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>815</td>\n",
       "      <td>60</td>\n",
       "      <td>755</td>\n",
       "      <td>3259</td>\n",
       "      <td>1262</td>\n",
       "      <td>1997</td>\n",
       "      <td>0.76</td>\n",
       "      <td>0.31</td>\n",
       "      <td>665.6</td>\n",
       "      <td>1.90</td>\n",
       "      <td>45.0</td>\n",
       "      <td>38.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>814</td>\n",
       "      <td>77</td>\n",
       "      <td>737</td>\n",
       "      <td>4073</td>\n",
       "      <td>1339</td>\n",
       "      <td>2734</td>\n",
       "      <td>0.80</td>\n",
       "      <td>0.42</td>\n",
       "      <td>832.0</td>\n",
       "      <td>1.61</td>\n",
       "      <td>38.0</td>\n",
       "      <td>32.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>815</td>\n",
       "      <td>71</td>\n",
       "      <td>744</td>\n",
       "      <td>4888</td>\n",
       "      <td>1410</td>\n",
       "      <td>3478</td>\n",
       "      <td>0.85</td>\n",
       "      <td>0.54</td>\n",
       "      <td>998.4</td>\n",
       "      <td>1.41</td>\n",
       "      <td>31.0</td>\n",
       "      <td>28.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>815</td>\n",
       "      <td>63</td>\n",
       "      <td>752</td>\n",
       "      <td>5703</td>\n",
       "      <td>1473</td>\n",
       "      <td>4230</td>\n",
       "      <td>0.89</td>\n",
       "      <td>0.65</td>\n",
       "      <td>1164.8</td>\n",
       "      <td>1.26</td>\n",
       "      <td>24.0</td>\n",
       "      <td>25.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>814</td>\n",
       "      <td>72</td>\n",
       "      <td>742</td>\n",
       "      <td>6517</td>\n",
       "      <td>1545</td>\n",
       "      <td>4972</td>\n",
       "      <td>0.93</td>\n",
       "      <td>0.77</td>\n",
       "      <td>1331.2</td>\n",
       "      <td>1.16</td>\n",
       "      <td>16.0</td>\n",
       "      <td>23.71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>815</td>\n",
       "      <td>65</td>\n",
       "      <td>750</td>\n",
       "      <td>7332</td>\n",
       "      <td>1610</td>\n",
       "      <td>5722</td>\n",
       "      <td>0.97</td>\n",
       "      <td>0.88</td>\n",
       "      <td>1497.6</td>\n",
       "      <td>1.08</td>\n",
       "      <td>9.0</td>\n",
       "      <td>21.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>814</td>\n",
       "      <td>54</td>\n",
       "      <td>760</td>\n",
       "      <td>8146</td>\n",
       "      <td>1664</td>\n",
       "      <td>6482</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1664.0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.43</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        count  actual  non_actual  cum_count  cum_actual  cum_non_actual  \\\n",
       "decile                                                                     \n",
       "0         815     765          50        815         765              50   \n",
       "1         815     369         446       1630        1134             496   \n",
       "2         814      68         746       2444        1202            1242   \n",
       "3         815      60         755       3259        1262            1997   \n",
       "4         814      77         737       4073        1339            2734   \n",
       "5         815      71         744       4888        1410            3478   \n",
       "6         815      63         752       5703        1473            4230   \n",
       "7         814      72         742       6517        1545            4972   \n",
       "8         815      65         750       7332        1610            5722   \n",
       "9         814      54         760       8146        1664            6482   \n",
       "\n",
       "        percent_cum_actual  percent_cum_non_actual  if_random  lift   K_S  \\\n",
       "decile                                                                      \n",
       "0                     0.46                    0.01      166.4  4.60  45.0   \n",
       "1                     0.68                    0.08      332.8  3.41  60.0   \n",
       "2                     0.72                    0.19      499.2  2.41  53.0   \n",
       "3                     0.76                    0.31      665.6  1.90  45.0   \n",
       "4                     0.80                    0.42      832.0  1.61  38.0   \n",
       "5                     0.85                    0.54      998.4  1.41  31.0   \n",
       "6                     0.89                    0.65     1164.8  1.26  24.0   \n",
       "7                     0.93                    0.77     1331.2  1.16  16.0   \n",
       "8                     0.97                    0.88     1497.6  1.08   9.0   \n",
       "9                     1.00                    1.00     1664.0  1.00   0.0   \n",
       "\n",
       "         gain  \n",
       "decile         \n",
       "0       93.87  \n",
       "1       69.57  \n",
       "2       49.18  \n",
       "3       38.72  \n",
       "4       32.88  \n",
       "5       28.85  \n",
       "6       25.83  \n",
       "7       23.71  \n",
       "8       21.96  \n",
       "9       20.43  "
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gains['non_actual'] = gains['count'] - gains['actual']\n",
    "gains['cum_count'] = gains['count'].cumsum()\n",
    "gains['cum_actual'] = gains['actual'].cumsum()\n",
    "gains['cum_non_actual'] = gains['non_actual'].cumsum()\n",
    "gains['percent_cum_actual'] = (gains['cum_actual'] / np.max(gains['cum_actual'])).round(2)\n",
    "gains['percent_cum_non_actual'] = (gains['cum_non_actual'] / np.max(gains['cum_non_actual'])).round(2)\n",
    "gains['if_random'] = np.max(gains['cum_actual']) /10\n",
    "gains['if_random'] = gains['if_random'].cumsum()\n",
    "gains['lift'] = (gains['cum_actual'] / gains['if_random']).round(2)\n",
    "gains['K_S'] = np.abs( gains['percent_cum_actual'] - gains['percent_cum_non_actual']  ) * 100 \n",
    "gains['gain'] = (gains['cum_actual'] / gains['cum_count']*100).round(2)\n",
    "gains"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "69065439-11a7-4e41-8707-829ff140efac",
   "metadata": {},
   "source": [
    "#### (9.4.2) Put in a function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "997a90d6-cb7d-47c2-950c-6131838fcf21",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>actual</th>\n",
       "      <th>non_actual</th>\n",
       "      <th>cum_count</th>\n",
       "      <th>cum_actual</th>\n",
       "      <th>cum_non_actual</th>\n",
       "      <th>percent_cum_actual</th>\n",
       "      <th>percent_cum_non_actual</th>\n",
       "      <th>if_random</th>\n",
       "      <th>lift</th>\n",
       "      <th>K_S</th>\n",
       "      <th>gain</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>decile</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>815</td>\n",
       "      <td>765</td>\n",
       "      <td>50</td>\n",
       "      <td>815</td>\n",
       "      <td>765</td>\n",
       "      <td>50</td>\n",
       "      <td>0.46</td>\n",
       "      <td>0.01</td>\n",
       "      <td>166.4</td>\n",
       "      <td>4.60</td>\n",
       "      <td>45.0</td>\n",
       "      <td>93.87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>815</td>\n",
       "      <td>369</td>\n",
       "      <td>446</td>\n",
       "      <td>1630</td>\n",
       "      <td>1134</td>\n",
       "      <td>496</td>\n",
       "      <td>0.68</td>\n",
       "      <td>0.08</td>\n",
       "      <td>332.8</td>\n",
       "      <td>3.41</td>\n",
       "      <td>60.0</td>\n",
       "      <td>69.57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>814</td>\n",
       "      <td>68</td>\n",
       "      <td>746</td>\n",
       "      <td>2444</td>\n",
       "      <td>1202</td>\n",
       "      <td>1242</td>\n",
       "      <td>0.72</td>\n",
       "      <td>0.19</td>\n",
       "      <td>499.2</td>\n",
       "      <td>2.41</td>\n",
       "      <td>53.0</td>\n",
       "      <td>49.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>815</td>\n",
       "      <td>60</td>\n",
       "      <td>755</td>\n",
       "      <td>3259</td>\n",
       "      <td>1262</td>\n",
       "      <td>1997</td>\n",
       "      <td>0.76</td>\n",
       "      <td>0.31</td>\n",
       "      <td>665.6</td>\n",
       "      <td>1.90</td>\n",
       "      <td>45.0</td>\n",
       "      <td>38.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>814</td>\n",
       "      <td>77</td>\n",
       "      <td>737</td>\n",
       "      <td>4073</td>\n",
       "      <td>1339</td>\n",
       "      <td>2734</td>\n",
       "      <td>0.80</td>\n",
       "      <td>0.42</td>\n",
       "      <td>832.0</td>\n",
       "      <td>1.61</td>\n",
       "      <td>38.0</td>\n",
       "      <td>32.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>815</td>\n",
       "      <td>71</td>\n",
       "      <td>744</td>\n",
       "      <td>4888</td>\n",
       "      <td>1410</td>\n",
       "      <td>3478</td>\n",
       "      <td>0.85</td>\n",
       "      <td>0.54</td>\n",
       "      <td>998.4</td>\n",
       "      <td>1.41</td>\n",
       "      <td>31.0</td>\n",
       "      <td>28.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>815</td>\n",
       "      <td>63</td>\n",
       "      <td>752</td>\n",
       "      <td>5703</td>\n",
       "      <td>1473</td>\n",
       "      <td>4230</td>\n",
       "      <td>0.89</td>\n",
       "      <td>0.65</td>\n",
       "      <td>1164.8</td>\n",
       "      <td>1.26</td>\n",
       "      <td>24.0</td>\n",
       "      <td>25.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>814</td>\n",
       "      <td>72</td>\n",
       "      <td>742</td>\n",
       "      <td>6517</td>\n",
       "      <td>1545</td>\n",
       "      <td>4972</td>\n",
       "      <td>0.93</td>\n",
       "      <td>0.77</td>\n",
       "      <td>1331.2</td>\n",
       "      <td>1.16</td>\n",
       "      <td>16.0</td>\n",
       "      <td>23.71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>815</td>\n",
       "      <td>65</td>\n",
       "      <td>750</td>\n",
       "      <td>7332</td>\n",
       "      <td>1610</td>\n",
       "      <td>5722</td>\n",
       "      <td>0.97</td>\n",
       "      <td>0.88</td>\n",
       "      <td>1497.6</td>\n",
       "      <td>1.08</td>\n",
       "      <td>9.0</td>\n",
       "      <td>21.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>814</td>\n",
       "      <td>54</td>\n",
       "      <td>760</td>\n",
       "      <td>8146</td>\n",
       "      <td>1664</td>\n",
       "      <td>6482</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1664.0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.43</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        count  actual  non_actual  cum_count  cum_actual  cum_non_actual  \\\n",
       "decile                                                                     \n",
       "0         815     765          50        815         765              50   \n",
       "1         815     369         446       1630        1134             496   \n",
       "2         814      68         746       2444        1202            1242   \n",
       "3         815      60         755       3259        1262            1997   \n",
       "4         814      77         737       4073        1339            2734   \n",
       "5         815      71         744       4888        1410            3478   \n",
       "6         815      63         752       5703        1473            4230   \n",
       "7         814      72         742       6517        1545            4972   \n",
       "8         815      65         750       7332        1610            5722   \n",
       "9         814      54         760       8146        1664            6482   \n",
       "\n",
       "        percent_cum_actual  percent_cum_non_actual  if_random  lift   K_S  \\\n",
       "decile                                                                      \n",
       "0                     0.46                    0.01      166.4  4.60  45.0   \n",
       "1                     0.68                    0.08      332.8  3.41  60.0   \n",
       "2                     0.72                    0.19      499.2  2.41  53.0   \n",
       "3                     0.76                    0.31      665.6  1.90  45.0   \n",
       "4                     0.80                    0.42      832.0  1.61  38.0   \n",
       "5                     0.85                    0.54      998.4  1.41  31.0   \n",
       "6                     0.89                    0.65     1164.8  1.26  24.0   \n",
       "7                     0.93                    0.77     1331.2  1.16  16.0   \n",
       "8                     0.97                    0.88     1497.6  1.08   9.0   \n",
       "9                     1.00                    1.00     1664.0  1.00   0.0   \n",
       "\n",
       "         gain  \n",
       "decile         \n",
       "0       93.87  \n",
       "1       69.57  \n",
       "2       49.18  \n",
       "3       38.72  \n",
       "4       32.88  \n",
       "5       28.85  \n",
       "6       25.83  \n",
       "7       23.71  \n",
       "8       21.96  \n",
       "9       20.43  "
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def gains_table(Y_test,y_pred):\n",
    "    df_prep = pd.DataFrame(columns = ['actual','pred'])\n",
    "    df_prep['actual'] = Y_test\n",
    "    df_prep['pred'] =y_pred\n",
    "    df_prep = df_prep.sort_values(by='pred',ascending=False)\n",
    "    df_prep['row_id'] = range(0,0+len(df_prep))\n",
    "    df_prep.head()\n",
    "\n",
    "    df_prep['decile'] = (df_prep['row_id'] / (len(df_prep)/10)).astype(int)\n",
    "    df_prep.loc[df_prep['decile'] == 10] =9\n",
    "    df_prep['decile'].value_counts()\n",
    "\n",
    "    # Create gains table\n",
    "    gains = df_prep.groupby('decile')['actual'].agg(['count','sum'])\n",
    "    gains.columns = ['count','actual']\n",
    "    gains\n",
    "\n",
    "    gains['non_actual'] = gains['count'] - gains['actual']\n",
    "    gains['cum_count'] = gains['count'].cumsum()\n",
    "    gains['cum_actual'] = gains['actual'].cumsum()\n",
    "    gains['cum_non_actual'] = gains['non_actual'].cumsum()\n",
    "    gains['percent_cum_actual'] = (gains['cum_actual'] / np.max(gains['cum_actual'])).round(2)\n",
    "    gains['percent_cum_non_actual'] = (gains['cum_non_actual'] / np.max(gains['cum_non_actual'])).round(2)\n",
    "    gains['if_random'] = np.max(gains['cum_actual']) /10\n",
    "    gains['if_random'] = gains['if_random'].cumsum()\n",
    "    gains['lift'] = (gains['cum_actual'] / gains['if_random']).round(2)\n",
    "    gains['K_S'] = np.abs( gains['percent_cum_actual'] - gains['percent_cum_non_actual']  ) * 100 \n",
    "    gains['gain'] = (gains['cum_actual'] / gains['cum_count']*100).round(2)\n",
    "    return(gains)\n",
    "    \n",
    "gains = gains_table(y_test,test_pred)\n",
    "gains"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a727b88b-bbf8-43df-a1c8-b622d8fddf6c",
   "metadata": {},
   "source": [
    "### (9.5) The cumulative lift curve\n",
    "\n",
    "### Learning objective 12: The cumulative lift curve"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "2152f272-5eec-4398-91cc-29f4cc74dbf6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='decile'>"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# The cumulative lift curve\n",
    "gains['lift'].plot.line()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a6f7a1a9-ca58-4d0c-be6c-335ce0937411",
   "metadata": {},
   "source": [
    "## (9.6) Komogorov-Smirnov (K-S)\n",
    "\n",
    "#### Learning objective 13: The Kolmogorov-Smirnov (K-S) statistic\n",
    "\n",
    "The **Kolmogorov-Smirnov (K-S) statistic** measures the **maximum separation** between the cumulative distribution functions (CDFs) of the positive and negative classes, based on the model's predicted probabilities or scores. The K-S statistic indicates how well the model distinguishes between the positive and negative classes. It identifies the point (threshold) where the difference between the cumulative percentage of positives and negatives is greatest.\n",
    "\n",
    "- The gains table computes **cumulative percentages** (or **Cumulative Distribution Functions (CDFs)**) of:\n",
    "  - **True Positives (TPR or Sensitivity)**: The proportion of actual positives identified up to a given threshold.\n",
    "  - **False Positives (FPR or 1 - Specificity)**: The proportion of actual negatives incorrectly identified as positives up to the same threshold.\n",
    "\n",
    "- The **K-S Statistic** is the maximum value of the difference between the two cumulative percentages:\n",
    "     $$\n",
    "     K\\text{-}S = \\max \\left( \\text{CDF(Positive)} - \\text{CDF(Negative)} \\right)\n",
    "     $$\n",
    "- The maximum difference represents the point where the model has the highest discriminatory power.\n",
    "\n",
    "\n",
    "In this example:\n",
    "- The **K-S statistic** is **55%**, achieved at the **Top 20%** percentile.\n",
    "| Percentile | Cumulative % Positives (TPR) | Cumulative % Negatives (FPR) | Difference (TPR - FPR) |\n",
    "|------------|------------------------------|------------------------------|-------------------------|\n",
    "| Top 10%    | 40%                          | 5%                           | 35%                    |\n",
    "| Top 20%    | 70%                          | 15%                          | 55% (Max Difference)   |\n",
    "| Top 30%    | 90%                          | 30%                          | 60%                    |\n",
    "| Top 40%    | 95%                          | 60%                          | 35%                    |\n",
    "\n",
    "\n",
    "**Higher K-S Statistic**:\n",
    "   - Indicates better separation between positive and negative classes.\n",
    "   - A well-performing model will have a higher K-S value.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "78a2d2d7-48ba-4587-8fe2-c17a927db6b0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='decile'>"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "gains[['percent_cum_actual','percent_cum_non_actual']].plot.line()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2f8c2675-ef55-4311-b99e-aaf7110d8bc3",
   "metadata": {},
   "source": [
    "## (9.7) Precision-Recall\n",
    "\n",
    "#### Learning objective 14: The Precision-Recall Curve\n",
    "\n",
    "\n",
    "**Precision** and **recall** are two fundamental metrics in machine learning used to evaluate the performance of classification models, particularly in binary classification tasks. They are crucial when the dataset is imbalanced, meaning one class is significantly more frequent than the other. Together, they provide a deeper understanding of how well a model identifies the positive class.\n",
    "\n",
    "---\n",
    "\n",
    "**Precision**\n",
    "**Precision** answers the question: *Of all the instances the model predicted as positive, how many were actually positive?*\n",
    "\n",
    "The formula for precision is:\n",
    "\n",
    "\\[\n",
    "\\text{Precision} = \\frac{\\text{True Positives (TP)}}{\\text{True Positives (TP)} + \\text{False Positives (FP)}}\n",
    "\\]\n",
    "\n",
    "- **True Positives (TP)**: Instances correctly classified as positive.\n",
    "- **False Positives (FP)**: Instances incorrectly classified as positive (actually negative).\n",
    "\n",
    "- A high precision means that most of the predicted positive instances are correct, indicating that the model makes few mistakes when it predicts the positive class.\n",
    "\n",
    "---\n",
    "\n",
    "**Recall**\n",
    "**Recall** (also known as **sensitivity** or **true positive rate**) answers the question: *Of all the actual positive instances, how many did the model correctly identify as positive?*\n",
    "\n",
    "The formula for recall is:\n",
    "\n",
    "\\[\n",
    "\\text{Recall} = \\frac{\\text{True Positives (TP)}}{\\text{True Positives (TP)} + \\text{False Negatives (FN)}}\n",
    "\\]\n",
    "\n",
    "- **False Negatives (FN)**: Instances incorrectly classified as negative (actually positive).\n",
    "\n",
    "- A high recall means that the model successfully identifies most of the positive instances, minimizing the number of false negatives.\n",
    "\n",
    "---\n",
    "\n",
    "**Trade-off Between Precision and Recall**\n",
    "Precision and recall are often in tension with each other:\n",
    "- A model can achieve high precision by being very selective in predicting positives, but this may lower recall because it might miss many true positives.\n",
    "- Conversely, a model can achieve high recall by predicting as many positives as possible, but this may lower precision because it increases false positives.\n",
    "\n",
    "---\n",
    "\n",
    "**Precision-Recall Curve**\n",
    "The **precision-recall curve** visualizes the trade-off between precision and recall at different classification thresholds. It helps evaluate the model's performance:\n",
    "- The **x-axis** is recall.\n",
    "- The **y-axis** is precision.\n",
    "- A curve closer to the top-right corner indicates better performance.\n",
    "\n",
    "---\n",
    "\n",
    "**Applications of Precision and Recall**\n",
    "- **High Precision Needed**: When false positives are costly (e.g., in spam email detection, a false positive means marking an important email as spam).\n",
    "- **High Recall Needed**: When false negatives are costly (e.g., in disease diagnosis, a false negative means missing a serious condition).\n",
    "\n",
    "In summary, precision and recall are key metrics for understanding a model's ability to correctly classify positive instances, and they are especially important for tasks involving imbalanced datasets or where the cost of misclassification is high.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "b615ebff-311d-48d3-818d-a448bb5c1013",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import roc_curve, auc, average_precision_score, precision_recall_curve\n",
    "\n",
    "def ROC_PR(y_actual, y_pred):\n",
    "    # ROC\n",
    "    fpr = list()\n",
    "    tpr = list()\n",
    "    roc_auc = list()\n",
    "    fpr,tpr,_ = roc_curve(y_actual,y_pred)\n",
    "    roc_auc = auc(fpr,tpr)\n",
    "    \n",
    "    # Precision-Recall\n",
    "    average_precision = average_precision_score(y_actual,y_pred)\n",
    "\n",
    "    print('')\n",
    "    print('   * ROC curve: The ROC curve plots the true positive rate vs. the false rositive sate')\n",
    "    print('')\n",
    "    print('\t  * The area under the curve (AUC): A value between 0.5 (random) and 1.0 (perfect), measuring the prediction accuracy')\n",
    "    print('')\n",
    "    print('   * Recall (R) = The number of true positives / (the number of true positives + the number of false negatives)')\n",
    "    print('')\n",
    "    \n",
    "    # plotting\n",
    "    plt.figure(figsize=(10,4))\n",
    "\n",
    "    # ROC\n",
    "    plt.subplot(1,2,1)\n",
    "    plt.plot(fpr,tpr,color='darkorange',lw=2,label='ROC curve (aare=%0.2f)' % roc_auc)\n",
    "    plt.plot([0,1],[0,1],color='navy',lw=3,linestyle='--')\n",
    "    plt.xlim([0.0,1.0])\n",
    "    plt.ylim([0.0,1.05])\n",
    "    plt.xlabel('False Positive Rate')\n",
    "    plt.ylabel('True Positive Rate')\n",
    "    plt.title('Receiver operating characteristic: AUC={0:0.3f}'.format(roc_auc))\n",
    "    plt.legend(loc='lower right')\n",
    "\n",
    "    # Precision-Recall\n",
    "    plt.subplot(1,2,2)\n",
    "    precision,recall,_ = precision_recall_curve(y_actual,y_pred)\n",
    "    plt.step(recall,precision,color='b',alpha=0.2,where='post')\n",
    "    plt.fill_between(recall,precision,step='post',alpha=0.2,color='b')\n",
    "    plt.xlabel('Recall')\n",
    "    plt.ylabel('Precision')\n",
    "    plt.ylim([0.0,1.05])\n",
    "    plt.xlim([0.0,1.0])\n",
    "    plt.title('Precision-Recall curve: PR={0:0.3f}'.format(average_precision))\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "08ca3731-57da-429e-93a4-2895c50cba2a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "   * ROC curve: The ROC curve plots the true positive rate vs. the false rositive sate\n",
      "\n",
      "\t  * The area under the curve (AUC): A value between 0.5 (random) and 1.0 (perfect), measuring the prediction accuracy\n",
      "\n",
      "   * Recall (R) = The number of true positives / (the number of true positives + the number of false negatives)\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x400 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ROC_PR(y_test, test_proba[:,1])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ee54986d-015c-4640-907a-35b7b9ca8acf",
   "metadata": {},
   "source": [
    "## (9.8) The F1 Score\n",
    "\n",
    "#### Learning objective 15: The F1 score\n",
    "\n",
    "The **F1 score** is a metric used to evaluate the performance of classification models, especially when dealing with imbalanced datasets. It is the harmonic mean of precision and recall, providing a single measure that balances both aspects of a model’s performance.\n",
    "It is particularly useful when the classes are imbalanced, meaning one class is more frequent than the other.\n",
    "\n",
    "The formula for the **F1 score** is:\n",
    "\n",
    "$\n",
    "F1 = 2 \\times \\frac{\\text{Precision} \\times \\text{Recall}}{\\text{Precision} + \\text{Recall}}\n",
    "$\n",
    "\n",
    "- The F1 score ranges from 0 to 1, where:\n",
    "  - A score of **1** indicates perfect precision and recall.\n",
    "  - A score of **0** indicates that the model has either zero precision or recall (or both).\n",
    "\n",
    "### Why Use the F1 Score?\n",
    "- **Balanced Trade-off**: The F1 score is ideal when you need to balance precision and recall. If one is much more important than the other, the F1 score will give you a combined measure that reflects the performance more fairly.\n",
    "- **Handling Class Imbalance**: In imbalanced datasets, the F1 score is more informative than accuracy because it does not get biased by the majority class. For example, in a dataset with 95% negative samples and 5% positive samples, a model that always predicts the negative class might still have high accuracy but poor precision and recall for the positive class. The F1 score helps to capture such issues.\n",
    "\n",
    "In summary, the F1 score is a powerful metric for assessing classification performance, particularly when dealing with imbalanced datasets, by balancing the trade-off between precision and recall."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "b2fdad82-5e3f-414e-8e38-ab96ceaf5e10",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "F1 Score: 0.7782101167315175\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import f1_score\n",
    "# Calculate the F1 score\n",
    "f1 = f1_score(y_test, test_pred)  # y_test is the actual, test_pred is the prediction\n",
    "print(\"F1 Score:\", f1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a99f9dd6-09ec-49e1-a877-6877b0e6b735",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "py310",
   "language": "python",
   "name": "py310"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.16"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 2539.87331,
   "end_time": "2023-08-24T03:55:30.832861",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2023-08-24T03:13:10.959551",
   "version": "2.4.0"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "023f05e2874544b3a7a6c98b39425f7c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "04e71641a0364c70845e2e1672eca52b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "VBoxModel",
      "state": {
       "_dom_classes": [
        "widget-interact"
       ],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "VBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "VBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_d5a659a99bb64c51912132563ed43e8a",
        "IPY_MODEL_c1103c75feb241d4baabf1e6bf2bcfa7"
       ],
       "layout": "IPY_MODEL_721a9bfd83e145a49f29f92a9b76b9d9"
      }
     },
     "155190bc27204d5a994b281b0c02ef49": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2920228e0ded4beea4e86d6cbb328bda": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "2f0dfef927b0432caa9b866068670990": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "54ace5fb6be1464a91d60c5c9af5d1cb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_c01b9d02612540bf883b51cc410ca00e",
       "max": 69,
       "min": 0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_d7d569a63a2b475abe797b3f4aa808f7",
       "value": 69
      }
     },
     "5a19e220c9664d9abe82d9502b07a8f7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "602617efce4643b985e1aee8c72c6f8e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "638d1eeab8cb4ee7b624510ec940fb26": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_64eecdb5b5e84e0288b3793e8b0893b4",
        "IPY_MODEL_54ace5fb6be1464a91d60c5c9af5d1cb",
        "IPY_MODEL_dc5266c40fe54e8fa9a355a5cc798941"
       ],
       "layout": "IPY_MODEL_72818e7187f440758dbb2ff2cfd08c89"
      }
     },
     "64eecdb5b5e84e0288b3793e8b0893b4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_7830a680c82346a39b0fa447aeb45bd6",
       "placeholder": "​",
       "style": "IPY_MODEL_023f05e2874544b3a7a6c98b39425f7c",
       "value": "Processing: 100%"
      }
     },
     "685c9537840149c49916ea3f79f40aae": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "721a9bfd83e145a49f29f92a9b76b9d9": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "72818e7187f440758dbb2ff2cfd08c89": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "7830a680c82346a39b0fa447aeb45bd6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "873532ca3b33455390bc2003e12dd113": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "8dc48fd3705b483b81e2b708fd7522c2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_155190bc27204d5a994b281b0c02ef49",
       "max": 69,
       "min": 0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_d0bafcbd04f24ccfbc24929177a52778",
       "value": 69
      }
     },
     "8efb26939d674035a89e92bdb3b8bd50": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a37080272bc849d897be42ab4b31e655": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "acacf04a67914d499cd9609d87dbf192": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_a37080272bc849d897be42ab4b31e655",
       "placeholder": "​",
       "style": "IPY_MODEL_5a19e220c9664d9abe82d9502b07a8f7",
       "value": "Processing: 100%"
      }
     },
     "bf4e5cc3504e4be4ac471f750b4075c5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ToggleButtonsStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ToggleButtonsStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "button_width": "",
       "description_width": "",
       "font_weight": ""
      }
     },
     "c01b9d02612540bf883b51cc410ca00e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c1103c75feb241d4baabf1e6bf2bcfa7": {
      "model_module": "@jupyter-widgets/output",
      "model_module_version": "1.0.0",
      "model_name": "OutputModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/output",
       "_model_module_version": "1.0.0",
       "_model_name": "OutputModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/output",
       "_view_module_version": "1.0.0",
       "_view_name": "OutputView",
       "layout": "IPY_MODEL_685c9537840149c49916ea3f79f40aae",
       "msg_id": "",
       "outputs": [
        {
         "data": {
          "image/png": "",
          "text/plain": "<Figure size 2200x600 with 1 Axes>"
         },
         "metadata": {},
         "output_type": "display_data"
        }
       ]
      }
     },
     "c989f526a16a4d9184cb43013bdee371": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "d0bafcbd04f24ccfbc24929177a52778": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "d1eede8263c645bdb6e4e5c437b9b07f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_acacf04a67914d499cd9609d87dbf192",
        "IPY_MODEL_8dc48fd3705b483b81e2b708fd7522c2",
        "IPY_MODEL_ebfb490e981d466485ddd66e62893536"
       ],
       "layout": "IPY_MODEL_2920228e0ded4beea4e86d6cbb328bda"
      }
     },
     "d5a659a99bb64c51912132563ed43e8a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ToggleButtonsModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ToggleButtonsModel",
       "_options_labels": [
        "Pipeline Plot",
        "Hyperparameters",
        "AUC",
        "Confusion Matrix",
        "Threshold",
        "Precision Recall",
        "Prediction Error",
        "Class Report",
        "Feature Selection",
        "Learning Curve",
        "Manifold Learning",
        "Calibration Curve",
        "Validation Curve",
        "Dimensions",
        "Feature Importance",
        "Feature Importance (All)",
        "Decision Boundary",
        "Lift Chart",
        "Gain Chart",
        "Decision Tree",
        "KS Statistic Plot"
       ],
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ToggleButtonsView",
       "button_style": "",
       "description": "Plot Type:",
       "description_tooltip": null,
       "disabled": false,
       "icons": [
        ""
       ],
       "index": 0,
       "layout": "IPY_MODEL_873532ca3b33455390bc2003e12dd113",
       "style": "IPY_MODEL_bf4e5cc3504e4be4ac471f750b4075c5",
       "tooltips": []
      }
     },
     "d7d569a63a2b475abe797b3f4aa808f7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "dc5266c40fe54e8fa9a355a5cc798941": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_8efb26939d674035a89e92bdb3b8bd50",
       "placeholder": "​",
       "style": "IPY_MODEL_2f0dfef927b0432caa9b866068670990",
       "value": " 69/69 [05:39&lt;00:00,  4.34s/it]"
      }
     },
     "ebfb490e981d466485ddd66e62893536": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_602617efce4643b985e1aee8c72c6f8e",
       "placeholder": "​",
       "style": "IPY_MODEL_c989f526a16a4d9184cb43013bdee371",
       "value": " 69/69 [04:53&lt;00:00,  4.08s/it]"
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
